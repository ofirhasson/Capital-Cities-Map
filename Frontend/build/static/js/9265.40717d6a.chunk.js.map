{"version":3,"file":"static/js/9265.40717d6a.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/color-picker-hex-input/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker-hex-input/color-picker-hex-input.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker-hex-input/color-picker-hex-input.scss?tag=calcite-color-picker-hex-input&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker/color-picker.scss?tag=calcite-color-picker&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker/color-picker.tsx","../node_modules/@esri/calcite-components/node_modules/lodash-es/_freeGlobal.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_root.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_Symbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_getRawTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_objectToString.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseGetTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObjectLike.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isSymbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseTrim.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObject.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/toNumber.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/now.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/debounce.js","../node_modules/@esri/calcite-components/dist/components/src/utils/math.ts","../node_modules/@esri/calcite-components/dist/components/src/components/tab/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/tab/tab.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/tab/tab.scss?tag=calcite-tab&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/tabs/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/tabs/tabs.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/tabs/tabs.scss?tag=calcite-tabs&encapsulation=shadow","../node_modules/@esri/calcite-components/node_modules/lodash-es/throttle.js"],"sourcesContent":["export const CSS = {\n  container: \"container\",\n  hexInput: \"hex-input\",\n  opacityInput: \"opacity-input\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport Color from \"color\";\nimport { Scale } from \"../interfaces\";\nimport { Channels, RGB } from \"../color-picker/interfaces\";\nimport {\n  alphaToOpacity,\n  hexChar,\n  hexify,\n  isLonghandHex,\n  isShorthandHex,\n  isValidHex,\n  normalizeHex,\n  opacityToAlpha,\n  rgbToHex,\n} from \"../color-picker/utils\";\nimport { focusElement } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { NumberingSystem } from \"../../utils/locale\";\nimport { OPACITY_LIMITS } from \"../color-picker/resources\";\nimport { ColorPickerMessages } from \"../color-picker/assets/color-picker/t9n\";\nimport { CSS } from \"./resources\";\n\nconst DEFAULT_COLOR = Color();\n\n@Component({\n  tag: \"calcite-color-picker-hex-input\",\n  styleUrl: \"color-picker-hex-input.scss\",\n  shadow: true,\n})\nexport class ColorPickerHexInput implements LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    const { allowEmpty, alphaChannel, value } = this;\n\n    if (value) {\n      const normalized = normalizeHex(value, alphaChannel);\n\n      if (isValidHex(normalized, alphaChannel)) {\n        this.internalSetValue(normalized, normalized, false);\n      }\n\n      return;\n    }\n\n    if (allowEmpty) {\n      this.internalSetValue(null, null, false);\n    }\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   */\n  @Prop() allowEmpty = false;\n\n  /**\n   * When `true`, the component will allow updates to the color's alpha value.\n   */\n  @Prop() alphaChannel = false;\n\n  /**\n   * Specifies accessible label for the input field.\n   *\n   * @deprecated use `messages` instead\n   */\n  @Prop() hexLabel = \"Hex\";\n\n  /**\n   * Messages are passed by parent component for accessible labels.\n   *\n   * @internal\n   */\n  @Prop() messages: ColorPickerMessages;\n\n  /** Specifies the Unicode numeral system used by the component for localization. */\n  @Prop() numberingSystem?: NumberingSystem;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * The hex value.\n   */\n  @Prop({ mutable: true, reflect: true }) value: string = normalizeHex(\n    hexify(DEFAULT_COLOR, this.alphaChannel),\n    this.alphaChannel,\n    true,\n  );\n\n  @Watch(\"value\")\n  handleValueChange(value: string, oldValue: string): void {\n    this.internalSetValue(value, oldValue, false);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Emitted when the hex value changes.\n   */\n  @Event({ cancelable: false }) calciteColorPickerHexInputChange: EventEmitter<void>;\n\n  private onHexInputBlur = (): void => {\n    const node = this.hexInputNode;\n    const inputValue = node.value;\n    const hex = `#${inputValue}`;\n    const { allowEmpty, internalColor } = this;\n    const willClearValue = allowEmpty && !inputValue;\n    const isLonghand = isLonghandHex(hex);\n\n    if (isShorthandHex(hex, this.alphaChannel)) {\n      // ensure modified pasted hex values are committed since we prevent default to remove the # char.\n      this.onHexInputChange();\n    }\n\n    if (willClearValue || (isValidHex(hex) && isLonghand)) {\n      return;\n    }\n\n    // manipulating DOM directly since rerender doesn't update input value\n    node.value =\n      allowEmpty && !internalColor\n        ? \"\"\n        : this.formatHexForInternalInput(\n            rgbToHex(\n              // always display hex input in RRGGBB format\n              internalColor.object() as any as RGB,\n            ),\n          );\n  };\n\n  private onOpacityInputBlur = (): void => {\n    const node = this.opacityInputNode;\n    const inputValue = node.value;\n    const { allowEmpty, internalColor } = this;\n    const willClearValue = allowEmpty && !inputValue;\n\n    if (willClearValue) {\n      return;\n    }\n\n    // manipulating DOM directly since rerender doesn't update input value\n    node.value =\n      allowEmpty && !internalColor ? \"\" : this.formatOpacityForInternalInput(internalColor);\n  };\n\n  private onOpacityInputInput = (): void => {\n    this.onOpacityInputChange();\n  };\n\n  private onHexInputChange = (): void => {\n    const nodeValue = this.hexInputNode.value;\n    let value = nodeValue;\n\n    if (value) {\n      const normalized = normalizeHex(value, false);\n      const preserveExistingAlpha = isValidHex(normalized) && this.alphaChannel;\n      if (preserveExistingAlpha && this.internalColor) {\n        const alphaHex = normalizeHex(this.internalColor.hexa(), true).slice(-2);\n        value = `${normalized + alphaHex}`;\n      }\n    }\n\n    this.internalSetValue(value, this.value);\n  };\n\n  private onOpacityInputChange = (): void => {\n    const node = this.opacityInputNode;\n    let value: number | string;\n\n    if (!node.value) {\n      value = node.value;\n    } else {\n      const alpha = opacityToAlpha(Number(node.value));\n      value = this.internalColor?.alpha(alpha).hexa();\n    }\n\n    this.internalSetValue(value, this.value);\n  };\n\n  private onInputFocus = (event: Event): void => {\n    event.type === \"calciteInternalInputTextFocus\"\n      ? this.hexInputNode.selectText()\n      : this.opacityInputNode.selectText();\n  };\n\n  private onHexInputInput = (): void => {\n    const hexInputValue = `#${this.hexInputNode.value}`;\n    const oldValue = this.value;\n\n    if (\n      isValidHex(hexInputValue, this.alphaChannel) &&\n      isLonghandHex(hexInputValue, this.alphaChannel)\n    ) {\n      this.internalSetValue(hexInputValue, oldValue);\n    }\n  };\n\n  protected onInputKeyDown = (event: KeyboardEvent): void => {\n    const { altKey, ctrlKey, metaKey, shiftKey } = event;\n    const { alphaChannel, hexInputNode, internalColor, value } = this;\n    const { key } = event;\n    const composedPath = event.composedPath();\n\n    if ((key === \"Tab\" && isShorthandHex(value, this.alphaChannel)) || key === \"Enter\") {\n      if (composedPath.includes(hexInputNode)) {\n        this.onHexInputChange();\n      } else {\n        this.onOpacityInputChange();\n      }\n\n      if (key === \"Enter\") {\n        event.preventDefault();\n      }\n\n      return;\n    }\n\n    const isNudgeKey = key === \"ArrowDown\" || key === \"ArrowUp\";\n    const oldValue = this.value;\n\n    if (isNudgeKey) {\n      if (!value) {\n        this.internalSetValue(this.previousNonNullValue, oldValue);\n        event.preventDefault();\n        return;\n      }\n\n      const direction = key === \"ArrowUp\" ? 1 : -1;\n      const bump = shiftKey ? 10 : 1;\n\n      this.internalSetValue(\n        hexify(\n          this.nudgeRGBChannels(\n            internalColor,\n            bump * direction,\n            composedPath.includes(hexInputNode) ? \"rgb\" : \"a\",\n          ),\n          alphaChannel,\n        ),\n        oldValue,\n      );\n\n      event.preventDefault();\n      return;\n    }\n\n    const withModifiers = altKey || ctrlKey || metaKey;\n    const singleChar = key.length === 1;\n    const validHexChar = hexChar.test(key);\n\n    if (singleChar && !withModifiers && !validHexChar) {\n      event.preventDefault();\n    }\n  };\n\n  private onHexInputPaste = (event: ClipboardEvent): void => {\n    const hex = event.clipboardData.getData(\"text\");\n\n    if (isValidHex(hex, this.alphaChannel) && isLonghandHex(hex, this.alphaChannel)) {\n      event.preventDefault();\n      this.hexInputNode.value = hex.slice(1);\n      this.internalSetValue(hex, this.value);\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerHexInputElement;\n\n  private hexInputNode: HTMLCalciteInputTextElement;\n\n  /**\n   * The last valid/selected color. Used as a fallback if an invalid hex code is entered.\n   */\n  @State() internalColor: Color | null = DEFAULT_COLOR;\n\n  private opacityInputNode: HTMLCalciteInputNumberElement;\n\n  private previousNonNullValue: string = this.value;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const { alphaChannel, hexLabel, internalColor, messages, scale, value } = this;\n    const hexInputValue = this.formatHexForInternalInput(value);\n    const opacityInputValue = this.formatOpacityForInternalInput(internalColor);\n    const inputScale = scale === \"l\" ? \"m\" : \"s\";\n\n    return (\n      <div class={CSS.container}>\n        <calcite-input-text\n          class={CSS.hexInput}\n          label={messages?.hex || hexLabel}\n          maxLength={this.alphaChannel ? 8 : 6}\n          onCalciteInputTextChange={this.onHexInputChange}\n          onCalciteInputTextInput={this.onHexInputInput}\n          onCalciteInternalInputTextBlur={this.onHexInputBlur}\n          onCalciteInternalInputTextFocus={this.onInputFocus}\n          onKeyDown={this.onInputKeyDown}\n          onPaste={this.onHexInputPaste}\n          prefixText=\"#\"\n          ref={this.storeHexInputRef}\n          scale={inputScale}\n          value={hexInputValue}\n        />\n        {alphaChannel ? (\n          <calcite-input-number\n            class={CSS.opacityInput}\n            key=\"opacity-input\"\n            label={messages?.opacity}\n            max={OPACITY_LIMITS.max}\n            maxLength={3}\n            min={OPACITY_LIMITS.min}\n            numberButtonType=\"none\"\n            numberingSystem={this.numberingSystem}\n            onCalciteInputNumberInput={this.onOpacityInputInput}\n            onCalciteInternalInputNumberBlur={this.onOpacityInputBlur}\n            onCalciteInternalInputNumberFocus={this.onInputFocus}\n            onKeyDown={this.onInputKeyDown}\n            ref={this.storeOpacityInputRef}\n            scale={inputScale}\n            suffixText=\"%\"\n            value={opacityInputValue}\n          />\n        ) : null}\n      </div>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    return focusElement(this.hexInputNode);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private internalSetValue(value: string | null, oldValue: string | null, emit = true): void {\n    if (value) {\n      const { alphaChannel } = this;\n      const normalized = normalizeHex(value, alphaChannel, alphaChannel);\n\n      if (isValidHex(normalized, alphaChannel)) {\n        const { internalColor: currentColor } = this;\n        const nextColor = Color(normalized);\n        const normalizedLonghand = normalizeHex(hexify(nextColor, alphaChannel), alphaChannel);\n\n        const changed =\n          !currentColor ||\n          normalizedLonghand !== normalizeHex(hexify(currentColor, alphaChannel), alphaChannel);\n\n        this.internalColor = nextColor;\n        this.previousNonNullValue = normalizedLonghand;\n        this.value = normalizedLonghand;\n\n        if (changed && emit) {\n          this.calciteColorPickerHexInputChange.emit();\n        }\n\n        return;\n      }\n    } else if (this.allowEmpty) {\n      this.internalColor = null;\n      this.value = null;\n\n      if (emit) {\n        this.calciteColorPickerHexInputChange.emit();\n      }\n\n      return;\n    }\n\n    this.value = oldValue;\n  }\n\n  private storeHexInputRef = (node: HTMLCalciteInputTextElement): void => {\n    this.hexInputNode = node;\n  };\n\n  private storeOpacityInputRef = (node: HTMLCalciteInputNumberElement): void => {\n    this.opacityInputNode = node;\n  };\n\n  private formatHexForInternalInput(hex: string): string {\n    return hex ? hex.replace(\"#\", \"\").slice(0, 6) : \"\";\n  }\n\n  private formatOpacityForInternalInput(color: Color): string {\n    return color ? `${alphaToOpacity(color.alpha())}` : \"\";\n  }\n\n  private nudgeRGBChannels(color: Color, amount: number, context: \"rgb\" | \"a\"): Color {\n    let nudgedChannels: Channels;\n    const channels = color.array();\n    const rgbChannels = channels.slice(0, 3);\n\n    if (context === \"rgb\") {\n      const nudgedRGBChannels = rgbChannels.map((channel) => channel + amount);\n      nudgedChannels = [\n        ...nudgedRGBChannels,\n        this.alphaChannel ? channels[3] : undefined,\n      ] as Channels;\n    } else {\n      const nudgedAlpha = opacityToAlpha(alphaToOpacity(color.alpha()) + amount);\n      nudgedChannels = [...rgbChannels, nudgedAlpha] as Channels;\n    }\n\n    return Color(nudgedChannels);\n  }\n}\n",":host {\n  @apply block;\n}\n\n.container {\n  @apply flex w-full items-center flex-nowrap;\n}\n\n.hex-input {\n  @apply grow uppercase;\n}\n\n.opacity-input {\n  inline-size: 68px;\n  margin-inline-start: -1px;\n}\n\n:host([scale=\"s\"]) {\n  .container {\n    @apply flex-wrap gap-y-0.5;\n  }\n\n  .opacity-input {\n    inline-size: unset;\n    margin-inline-start: unset;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .opacity-input {\n    inline-size: 88px;\n  }\n}\n\n@include base-component();\n",":host {\n  @apply text-n2h inline-block font-normal;\n}\n\n@include disabled();\n\n:host([scale=\"s\"]) {\n  --calcite-color-picker-spacing: 8px;\n\n  .container {\n    inline-size: 160px;\n  }\n\n  .saved-colors {\n    @apply gap-1;\n    grid-template-columns: repeat(auto-fill, 20px);\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-color-picker-spacing: 12px;\n\n  .container {\n    inline-size: 272px;\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-color-picker-spacing: 16px;\n\n  @apply text-n1h;\n\n  .container {\n    inline-size: 464px;\n  }\n\n  .section {\n    &:first-of-type {\n      padding-block-start: var(--calcite-color-picker-spacing);\n    }\n  }\n\n  .saved-colors {\n    grid-template-columns: repeat(auto-fill, 32px);\n  }\n\n  .control-section {\n    @apply flex-nowrap items-baseline;\n  }\n\n  .control-section {\n    @apply flex-wrap;\n  }\n\n  .color-hex-options {\n    @apply flex\n      flex-shrink\n      flex-col\n      justify-around;\n  }\n\n  .color-mode-container {\n    flex-shrink: 3;\n  }\n}\n\n.container {\n  @apply bg-foreground-1;\n  display: inline-block;\n  border: 1px solid var(--calcite-color-border-1);\n}\n\n.control-and-scope {\n  @apply flex relative cursor-pointer touch-none;\n}\n\n.scope {\n  @apply text-n1\n    focus-base\n    absolute\n    z-default\n    rounded-full\n    bg-transparent\n    w-px\n    h-px\n    pointer-events-none;\n  &:focus {\n    @apply focus-outset;\n    outline-offset: 6px;\n  }\n}\n\n.hex-and-channels-group {\n  @apply w-full;\n}\n\n.hex-and-channels-group,\n.control-section {\n  @apply flex flex-row flex-wrap;\n}\n\n.section {\n  padding-block: 0 var(--calcite-color-picker-spacing);\n  padding-inline: var(--calcite-color-picker-spacing);\n\n  &:first-of-type {\n    padding-block-start: var(--calcite-color-picker-spacing);\n  }\n}\n\n.sliders {\n  @apply flex flex-col justify-between;\n  margin-inline-start: var(--calcite-color-picker-spacing);\n  gap: var(--calcite-spacing-xxs);\n}\n\n.preview-and-sliders {\n  @apply flex items-center;\n  padding: var(--calcite-color-picker-spacing);\n}\n\n.color-hex-options,\n.section--split {\n  flex-grow: 1;\n}\n\n.header {\n  @apply text-color-1\n    flex\n    items-center\n    justify-between;\n}\n\n.color-mode-container {\n  padding-block-start: var(--calcite-color-picker-spacing);\n}\n\n.channels {\n  @apply flex gap-y-0.5;\n}\n\n.channel {\n  &[data-channel-index=\"3\"] {\n    inline-size: 159px;\n  }\n}\n\n:host([scale=\"s\"]) {\n  .channels {\n    @apply flex-wrap;\n  }\n\n  .channel {\n    flex-basis: 30%;\n    flex-grow: 1;\n\n    &[data-channel-index=\"3\"] {\n      inline-size: unset;\n      margin-inline-start: unset;\n    }\n  }\n}\n\n:host([scale=\"l\"]) {\n  .channel {\n    &[data-channel-index=\"3\"] {\n      inline-size: 131px;\n    }\n  }\n}\n\n.saved-colors {\n  @apply grid gap-2;\n  padding-block-start: var(--calcite-color-picker-spacing);\n  grid-template-columns: repeat(auto-fill, 24px);\n}\n\n.saved-colors-buttons {\n  display: flex;\n}\n\n.saved-color {\n  @include focus-style-base();\n\n  cursor: pointer;\n\n  &:focus {\n    @include focus-style-outset();\n  }\n\n  &:hover {\n    transition: outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;\n    outline: 2px solid var(--calcite-color-border-2);\n    outline-offset: 2px;\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport Color from \"color\";\nimport { throttle } from \"lodash-es\";\nimport {\n  Direction,\n  focusFirstTabbable,\n  getElementDir,\n  isPrimaryPointerButton,\n} from \"../../utils/dom\";\nimport { Scale } from \"../interfaces\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n} from \"../../utils/locale\";\nimport { clamp, closeToRangeEdge, remap } from \"../../utils/math\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  alphaCompatible,\n  alphaToOpacity,\n  colorEqual,\n  CSSColorMode,\n  Format,\n  getSliderWidth,\n  hexify,\n  normalizeAlpha,\n  normalizeColor,\n  normalizeHex,\n  opacityToAlpha,\n  parseMode,\n  SupportedMode,\n  toAlphaMode,\n  toNonAlphaMode,\n} from \"./utils\";\nimport {\n  CSS,\n  DEFAULT_COLOR,\n  DEFAULT_STORAGE_KEY_PREFIX,\n  DIMENSIONS,\n  HSV_LIMITS,\n  HUE_LIMIT_CONSTRAINED,\n  OPACITY_LIMITS,\n  RGB_LIMITS,\n  SCOPE_SIZE,\n} from \"./resources\";\nimport { Channels, ColorMode, ColorValue, HSLA, HSVA, InternalColor, RGBA } from \"./interfaces\";\nimport { ColorPickerMessages } from \"./assets/color-picker/t9n\";\n\nconst throttleFor60FpsInMs = 16;\n\n@Component({\n  tag: \"calcite-color-picker\",\n  styleUrl: \"color-picker.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class ColorPicker\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   *\n   * @deprecated Use `clearable` instead\n   */\n  @Prop({ reflect: true }) allowEmpty = false;\n\n  @Watch(\"allowEmpty\")\n  @Watch(\"clearable\")\n  handleAllowEmptyOrClearableChange(): void {\n    this.isClearable = this.clearable || this.allowEmpty;\n  }\n\n  /**\n   * When `true`, the component will allow updates to the color's alpha value.\n   */\n  @Prop() alphaChannel = false;\n\n  @Watch(\"alphaChannel\")\n  handleAlphaChannelChange(alphaChannel: boolean): void {\n    const { format } = this;\n\n    if (alphaChannel && format !== \"auto\" && !alphaCompatible(format)) {\n      console.warn(\n        `ignoring alphaChannel as the current format (${format}) does not support alpha`,\n      );\n      this.alphaChannel = false;\n    }\n  }\n\n  @Watch(\"alphaChannel\")\n  @Watch(\"dimensions\")\n  handleAlphaChannelDimensionsChange(): void {\n    this.effectiveSliderWidth = getSliderWidth(this.dimensions, this.alphaChannel);\n    this.drawColorControls();\n  }\n\n  /** When `true`, hides the RGB/HSV channel inputs. */\n  @Prop() channelsDisabled = false;\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * Internal prop for advanced use-cases.\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) color: InternalColor | null = DEFAULT_COLOR;\n\n  @Watch(\"color\")\n  handleColorChange(color: Color | null, oldColor: Color | null): void {\n    this.drawColorControls();\n    this.updateChannelsFromColor(color);\n    this.previousColor = oldColor;\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The format of `value`.\n   *\n   * When `\"auto\"`, the format will be inferred from `value` when set.\n   *\n   * @default \"auto\"\n   */\n  @Prop({ reflect: true }) format: Format = \"auto\";\n\n  @Watch(\"alphaChannel\")\n  @Watch(\"format\")\n  handleFormatOrAlphaChannelChange(): void {\n    this.setMode(this.format);\n    this.internalColorSet(this.color, false, \"internal\");\n  }\n\n  /**\n   * When `true`, hides the RGB/HSV channel inputs.\n   *\n   * @deprecated use `channelsDisabled` instead\n   */\n  @Prop({ reflect: true }) hideChannels = false;\n\n  /** When `true`, hides the hex input. */\n  @Prop() hexDisabled = false;\n\n  /**\n   * When `true`, hides the hex input.\n   *\n   * @deprecated use `hexDisabled` instead\n   */\n  @Prop({ reflect: true }) hideHex = false;\n\n  /**\n   * When `true`, hides the saved colors section.\n   *\n   * @deprecated use `savedDisabled` instead\n   */\n  @Prop({ reflect: true }) hideSaved = false;\n\n  /** When `true`, hides the saved colors section. */\n  @Prop({ reflect: true }) savedDisabled = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"scale\")\n  handleScaleChange(scale: Scale = \"m\"): void {\n    this.updateDimensions(scale);\n    this.updateCanvasSize(\"all\");\n    this.drawColorControls();\n  }\n\n  /** Specifies the storage ID for colors. */\n  @Prop({ reflect: true }) storageId: string;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ColorPickerMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /** Specifies the Unicode numeral system used by the component for localization. */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /**\n   * The component's value, where the value can be a CSS color string, or a RGB, HSL or HSV object.\n   *\n   * The type will be preserved as the color is updated.\n   *\n   * @default \"#007ac2\"\n   * @see [CSS Color](https://developer.mozilla.org/en-US/docs/Web/CSS/color)\n   * @see [ColorValue](https://github.com/Esri/calcite-design-system/blob/dev/src/components/color-picker/interfaces.ts#L10)\n   */\n  @Prop({ mutable: true }) value: ColorValue | null = normalizeHex(\n    hexify(DEFAULT_COLOR, this.alphaChannel),\n  );\n\n  @Watch(\"value\")\n  handleValueChange(value: ColorValue | null, oldValue: ColorValue | null): void {\n    const { isClearable, format } = this;\n    const checkMode = !isClearable || value;\n    let modeChanged = false;\n\n    if (checkMode) {\n      const nextMode = parseMode(value);\n\n      if (!nextMode || (format !== \"auto\" && nextMode !== format)) {\n        this.showIncompatibleColorWarning(value, format);\n        this.value = oldValue;\n        return;\n      }\n\n      modeChanged = this.mode !== nextMode;\n      this.setMode(nextMode, this.internalColorUpdateContext === null);\n    }\n\n    const dragging = this.activeCanvasInfo;\n\n    if (this.internalColorUpdateContext === \"initial\") {\n      return;\n    }\n\n    if (this.internalColorUpdateContext === \"user-interaction\") {\n      this.calciteColorPickerInput.emit();\n\n      if (!dragging) {\n        this.calciteColorPickerChange.emit();\n      }\n      return;\n    }\n\n    const color =\n      isClearable && !value\n        ? null\n        : Color(\n            value != null && typeof value === \"object\" && alphaCompatible(this.mode)\n              ? normalizeColor(value as RGBA | HSVA | HSLA)\n              : value,\n          );\n    const colorChanged = !colorEqual(color, this.color);\n\n    if (modeChanged || colorChanged) {\n      this.internalColorSet(\n        color,\n        this.alphaChannel && !(this.mode.endsWith(\"a\") || this.mode.endsWith(\"a-css\")),\n        \"internal\",\n      );\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Internal State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerElement;\n\n  private activeCanvasInfo: {\n    context: CanvasRenderingContext2D;\n    bounds: DOMRect;\n  };\n\n  private get baseColorFieldColor(): Color {\n    return this.color || this.previousColor || DEFAULT_COLOR;\n  }\n\n  private checkerPattern: HTMLCanvasElement;\n\n  private colorFieldRenderingContext: CanvasRenderingContext2D;\n\n  private colorFieldScopeNode: HTMLDivElement;\n\n  private effectiveSliderWidth: number;\n\n  private hueSliderRenderingContext: CanvasRenderingContext2D;\n\n  private hueScopeNode: HTMLDivElement;\n\n  private internalColorUpdateContext: \"internal\" | \"initial\" | \"user-interaction\" | null = null;\n\n  private isActiveChannelInputEmpty: boolean = false;\n\n  private isClearable: boolean;\n\n  private mode: SupportedMode = CSSColorMode.HEX;\n\n  private opacityScopeNode: HTMLDivElement;\n\n  private opacitySliderRenderingContext: CanvasRenderingContext2D;\n\n  private previousColor: InternalColor | null;\n\n  private shiftKeyChannelAdjustment = 0;\n\n  private upOrDownArrowKeyTracker: \"down\" | \"up\" | null = null;\n\n  @State() channelMode: ColorMode = \"rgb\";\n\n  @State() channels: Channels = this.toChannels(DEFAULT_COLOR);\n\n  @State() defaultMessages: ColorPickerMessages;\n\n  @State() dimensions = DIMENSIONS.m;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ColorPickerMessages;\n\n  @State() savedColors: string[] = [];\n\n  @State() colorFieldScopeTop: number;\n\n  @State() colorFieldScopeLeft: number;\n\n  @State() hueScopeLeft: number;\n\n  @State() opacityScopeLeft: number;\n\n  @State() scopeOrientation: \"vertical\" | \"horizontal\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the color value has changed.\n   */\n  @Event({ cancelable: false }) calciteColorPickerChange: EventEmitter<void>;\n\n  /**\n   * Fires as the color value changes.\n   *\n   * Similar to the `calciteColorPickerChange` event with the exception of dragging. When dragging the color field or hue slider thumb, this event fires as the thumb is moved.\n   */\n  @Event({ cancelable: false }) calciteColorPickerInput: EventEmitter<void>;\n\n  private handleTabActivate = (event: Event): void => {\n    this.channelMode = (event.currentTarget as HTMLElement).getAttribute(\n      \"data-color-mode\",\n    ) as ColorMode;\n\n    this.updateChannelsFromColor(this.color);\n  };\n\n  private handleColorFieldScopeKeyDown = (event: KeyboardEvent): void => {\n    const { key } = event;\n    const arrowKeyToXYOffset = {\n      ArrowUp: { x: 0, y: -10 },\n      ArrowRight: { x: 10, y: 0 },\n      ArrowDown: { x: 0, y: 10 },\n      ArrowLeft: { x: -10, y: 0 },\n    };\n\n    if (arrowKeyToXYOffset[key]) {\n      event.preventDefault();\n      this.scopeOrientation = key === \"ArrowDown\" || key === \"ArrowUp\" ? \"vertical\" : \"horizontal\";\n      this.captureColorFieldColor(\n        this.colorFieldScopeLeft + arrowKeyToXYOffset[key].x || 0,\n        this.colorFieldScopeTop + arrowKeyToXYOffset[key].y || 0,\n        false,\n      );\n    }\n  };\n\n  private handleHueScopeKeyDown = (event: KeyboardEvent): void => {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 1,\n      ArrowRight: 1,\n      ArrowDown: -1,\n      ArrowLeft: -1,\n    };\n\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const hue = this.baseColorFieldColor.hue();\n      const color = this.baseColorFieldColor.hue(hue + delta);\n      this.internalColorSet(color, false);\n    }\n  };\n\n  private handleHexInputChange = (event: Event): void => {\n    event.stopPropagation();\n    const { isClearable, color } = this;\n    const input = event.target as HTMLCalciteColorPickerHexInputElement;\n    const hex = input.value;\n\n    if (isClearable && !hex) {\n      this.internalColorSet(null);\n      return;\n    }\n\n    const normalizedHex = color && normalizeHex(hexify(color, alphaCompatible(this.mode)));\n\n    if (hex !== normalizedHex) {\n      this.internalColorSet(Color(hex));\n    }\n  };\n\n  private handleSavedColorSelect = (event: Event): void => {\n    const swatch = event.currentTarget as HTMLCalciteColorPickerSwatchElement;\n    this.internalColorSet(Color(swatch.color));\n  };\n\n  private handleChannelInput = (event: CustomEvent): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const isAlphaChannel = channelIndex === 3;\n\n    const limit = isAlphaChannel\n      ? OPACITY_LIMITS.max\n      : this.channelMode === \"rgb\"\n        ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]]\n        : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n\n    let inputValue: string;\n\n    if (!input.value) {\n      inputValue = \"\";\n      this.isActiveChannelInputEmpty = true;\n      // reset this to allow typing in new value, when channel input is cleared after ArrowUp or ArrowDown have been pressed\n      this.upOrDownArrowKeyTracker = null;\n    } else {\n      const value = Number(input.value);\n      const adjustedValue = value + this.shiftKeyChannelAdjustment;\n      const clamped = clamp(adjustedValue, 0, limit);\n\n      inputValue = clamped.toString();\n    }\n\n    input.value = inputValue;\n\n    if (inputValue !== \"\" && this.shiftKeyChannelAdjustment !== 0) {\n      // we treat nudging as a change event since the input won't emit when modifying the value directly\n      this.handleChannelChange(event);\n    } else if (inputValue !== \"\") {\n      this.handleChannelChange(event);\n    }\n  };\n\n  private handleChannelBlur = (event: CustomEvent): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const channels = [...this.channels] as this[\"channels\"];\n    const restoreValueDueToEmptyInput = !input.value && !this.isClearable;\n\n    if (restoreValueDueToEmptyInput) {\n      input.value = channels[channelIndex]?.toString();\n    }\n  };\n\n  handleChannelFocus = (event: Event): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    input.selectText();\n  };\n\n  // using @Listen as a workaround for VDOM listener not firing\n  @Listen(\"keydown\", { capture: true })\n  @Listen(\"keyup\", { capture: true })\n  protected handleChannelKeyUpOrDown(event: KeyboardEvent): void {\n    this.shiftKeyChannelAdjustment = 0;\n    const { key } = event;\n\n    if (\n      (key !== \"ArrowUp\" && key !== \"ArrowDown\") ||\n      !event.composedPath().some((node: HTMLElement) => node.classList?.contains(CSS.channel))\n    ) {\n      return;\n    }\n\n    const { shiftKey } = event;\n    event.preventDefault();\n\n    if (!this.color) {\n      this.internalColorSet(this.previousColor);\n      event.stopPropagation();\n      return;\n    }\n\n    // this gets applied to the input's up/down arrow increment/decrement\n    const complementaryBump = 9;\n\n    this.shiftKeyChannelAdjustment =\n      key === \"ArrowUp\" && shiftKey\n        ? complementaryBump\n        : key === \"ArrowDown\" && shiftKey\n          ? -complementaryBump\n          : 0;\n\n    if (key === \"ArrowUp\") {\n      this.upOrDownArrowKeyTracker = \"up\";\n    }\n    if (key === \"ArrowDown\") {\n      this.upOrDownArrowKeyTracker = \"down\";\n    }\n  }\n\n  private getChannelInputLimit(channelIndex: number): number {\n    return this.channelMode === \"rgb\"\n      ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]]\n      : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n  }\n\n  private handleChannelChange = (event: CustomEvent): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const channels = [...this.channels] as this[\"channels\"];\n\n    const shouldClearChannels = this.isClearable && !input.value;\n\n    if (shouldClearChannels) {\n      this.channels = [null, null, null, null];\n      this.internalColorSet(null);\n      return;\n    }\n\n    const isAlphaChannel = channelIndex === 3;\n\n    if (this.isActiveChannelInputEmpty && this.upOrDownArrowKeyTracker) {\n      input.value =\n        this.upOrDownArrowKeyTracker === \"up\"\n          ? (channels[channelIndex] + 1 <= this.getChannelInputLimit(channelIndex)\n              ? channels[channelIndex] + 1\n              : this.getChannelInputLimit(channelIndex)\n            ).toString()\n          : (channels[channelIndex] - 1 >= 0 ? channels[channelIndex] - 1 : 0).toString();\n      this.isActiveChannelInputEmpty = false;\n      this.upOrDownArrowKeyTracker = null;\n    }\n    const value = input.value ? Number(input.value) : channels[channelIndex];\n\n    channels[channelIndex] = isAlphaChannel ? opacityToAlpha(value) : value;\n    this.updateColorFromChannels(channels);\n  };\n\n  private handleSavedColorKeyDown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      event.preventDefault();\n      this.handleSavedColorSelect(event);\n    }\n  };\n\n  private handleColorFieldPointerDown = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const { offsetX, offsetY } = event;\n\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n\n    this.activeCanvasInfo = {\n      context: this.colorFieldRenderingContext,\n      bounds: this.colorFieldRenderingContext.canvas.getBoundingClientRect(),\n    };\n    this.captureColorFieldColor(offsetX, offsetY);\n    this.focusScope(this.colorFieldScopeNode);\n  };\n\n  private focusScope(focusEl: HTMLElement): void {\n    requestAnimationFrame(() => {\n      focusEl.focus();\n    });\n  }\n\n  private handleHueSliderPointerDown = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const { offsetX } = event;\n\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n\n    this.activeCanvasInfo = {\n      context: this.hueSliderRenderingContext,\n      bounds: this.hueSliderRenderingContext.canvas.getBoundingClientRect(),\n    };\n    this.captureHueSliderColor(offsetX);\n    this.focusScope(this.hueScopeNode);\n  };\n\n  private handleOpacitySliderPointerDown = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const { offsetX } = event;\n\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n\n    this.activeCanvasInfo = {\n      context: this.opacitySliderRenderingContext,\n      bounds: this.opacitySliderRenderingContext.canvas.getBoundingClientRect(),\n    };\n    this.captureOpacitySliderValue(offsetX);\n    this.focusScope(this.opacityScopeNode);\n  };\n\n  private globalPointerUpHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const previouslyDragging = this.activeCanvasInfo;\n    this.activeCanvasInfo = null;\n    this.drawColorControls();\n\n    if (previouslyDragging) {\n      this.calciteColorPickerChange.emit();\n    }\n  };\n\n  private globalPointerMoveHandler = (event: PointerEvent): void => {\n    const { activeCanvasInfo, el } = this;\n\n    if (!el.isConnected || !activeCanvasInfo) {\n      return;\n    }\n\n    const { context, bounds } = activeCanvasInfo;\n\n    let samplingX: number;\n    let samplingY: number;\n\n    const { clientX, clientY } = event;\n\n    if (context.canvas.matches(\":hover\")) {\n      samplingX = clientX - bounds.x;\n      samplingY = clientY - bounds.y;\n    } else {\n      // snap x and y to the closest edge\n\n      if (clientX < bounds.x + bounds.width && clientX > bounds.x) {\n        samplingX = clientX - bounds.x;\n      } else if (clientX < bounds.x) {\n        samplingX = 0;\n      } else {\n        samplingX = bounds.width;\n      }\n\n      if (clientY < bounds.y + bounds.height && clientY > bounds.y) {\n        samplingY = clientY - bounds.y;\n      } else if (clientY < bounds.y) {\n        samplingY = 0;\n      } else {\n        samplingY = bounds.height;\n      }\n    }\n\n    if (context === this.colorFieldRenderingContext) {\n      this.captureColorFieldColor(samplingX, samplingY, false);\n    } else if (context === this.hueSliderRenderingContext) {\n      this.captureHueSliderColor(samplingX);\n    } else if (context === this.opacitySliderRenderingContext) {\n      this.captureOpacitySliderValue(samplingX);\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusFirstTabbable(this.el);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n\n    this.handleAllowEmptyOrClearableChange();\n    this.handleAlphaChannelDimensionsChange();\n\n    const { isClearable, color, format, value } = this;\n    const willSetNoColor = isClearable && !value;\n    const parsedMode = parseMode(value);\n    const valueIsCompatible =\n      willSetNoColor || (format === \"auto\" && parsedMode) || format === parsedMode;\n    const initialColor = willSetNoColor ? null : valueIsCompatible ? Color(value) : color;\n\n    if (!valueIsCompatible) {\n      this.showIncompatibleColorWarning(value, format);\n    }\n    this.setMode(format, false);\n    this.internalColorSet(initialColor, false, \"initial\");\n\n    this.updateDimensions(this.scale);\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId && localStorage.getItem(storageKey)) {\n      this.savedColors = JSON.parse(localStorage.getItem(storageKey));\n    }\n\n    await setUpMessages(this);\n  }\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    window.removeEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.removeEventListener(\"pointerup\", this.globalPointerUpHandler);\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const {\n      channelsDisabled,\n      color,\n      colorFieldScopeLeft,\n      colorFieldScopeTop,\n      dimensions: {\n        thumb: { radius: thumbRadius },\n      },\n      hexDisabled,\n      hideChannels,\n      hideHex,\n      hideSaved,\n      hueScopeLeft,\n      messages,\n      alphaChannel,\n      opacityScopeLeft,\n      savedColors,\n      savedDisabled,\n      scale,\n      scopeOrientation,\n    } = this;\n\n    const sliderWidth = this.effectiveSliderWidth;\n    const selectedColorInHex = color ? hexify(color, alphaChannel) : null;\n    const hueTop = thumbRadius;\n    const hueLeft = hueScopeLeft ?? (sliderWidth * DEFAULT_COLOR.hue()) / HSV_LIMITS.h;\n    const opacityTop = thumbRadius;\n    const opacityLeft =\n      opacityScopeLeft ??\n      (sliderWidth * alphaToOpacity(DEFAULT_COLOR.alpha())) / OPACITY_LIMITS.max;\n    const noColor = color === null;\n    const vertical = scopeOrientation === \"vertical\";\n    const noHex = hexDisabled || hideHex;\n    const noChannels = channelsDisabled || hideChannels;\n    const noSaved = savedDisabled || hideSaved;\n    const [adjustedColorFieldScopeLeft, adjustedColorFieldScopeTop] = this.getAdjustedScopePosition(\n      colorFieldScopeLeft,\n      colorFieldScopeTop,\n    );\n    const [adjustedHueScopeLeft, adjustedHueScopeTop] = this.getAdjustedScopePosition(\n      hueLeft,\n      hueTop,\n    );\n    const [adjustedOpacityScopeLeft, adjustedOpacityScopeTop] = this.getAdjustedScopePosition(\n      opacityLeft,\n      opacityTop,\n    );\n\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <div class={CSS.container}>\n          <div class={CSS.controlAndScope}>\n            <canvas\n              class={CSS.colorField}\n              onPointerDown={this.handleColorFieldPointerDown}\n              ref={this.initColorField}\n            />\n            <div\n              aria-label={vertical ? messages.value : messages.saturation}\n              aria-valuemax={vertical ? HSV_LIMITS.v : HSV_LIMITS.s}\n              aria-valuemin=\"0\"\n              aria-valuenow={(vertical ? color?.saturationv() : color?.value()) || \"0\"}\n              class={{ [CSS.scope]: true, [CSS.colorFieldScope]: true }}\n              onKeyDown={this.handleColorFieldScopeKeyDown}\n              ref={this.storeColorFieldScope}\n              role=\"slider\"\n              style={{\n                top: `${adjustedColorFieldScopeTop || 0}px`,\n                left: `${adjustedColorFieldScopeLeft || 0}px`,\n              }}\n              tabindex=\"0\"\n            />\n          </div>\n          <div class={CSS.previewAndSliders}>\n            <calcite-color-picker-swatch\n              class={CSS.preview}\n              color={selectedColorInHex}\n              scale={this.alphaChannel ? \"l\" : this.scale}\n            />\n            <div class={CSS.sliders}>\n              <div class={CSS.controlAndScope}>\n                <canvas\n                  class={{ [CSS.slider]: true, [CSS.hueSlider]: true }}\n                  onPointerDown={this.handleHueSliderPointerDown}\n                  ref={this.initHueSlider}\n                />\n                <div\n                  aria-label={messages.hue}\n                  aria-valuemax={HSV_LIMITS.h}\n                  aria-valuemin=\"0\"\n                  aria-valuenow={color?.round().hue() || DEFAULT_COLOR.round().hue()}\n                  class={{ [CSS.scope]: true, [CSS.hueScope]: true }}\n                  onKeyDown={this.handleHueScopeKeyDown}\n                  ref={this.storeHueScope}\n                  role=\"slider\"\n                  style={{\n                    top: `${adjustedHueScopeTop}px`,\n                    left: `${adjustedHueScopeLeft}px`,\n                  }}\n                  tabindex=\"0\"\n                />\n              </div>\n              {alphaChannel ? (\n                <div class={CSS.controlAndScope}>\n                  <canvas\n                    class={{ [CSS.slider]: true, [CSS.opacitySlider]: true }}\n                    onPointerDown={this.handleOpacitySliderPointerDown}\n                    ref={this.initOpacitySlider}\n                  />\n                  <div\n                    aria-label={messages.opacity}\n                    aria-valuemax={OPACITY_LIMITS.max}\n                    aria-valuemin={OPACITY_LIMITS.min}\n                    aria-valuenow={(color || DEFAULT_COLOR).round().alpha()}\n                    class={{ [CSS.scope]: true, [CSS.opacityScope]: true }}\n                    onKeyDown={this.handleOpacityScopeKeyDown}\n                    ref={this.storeOpacityScope}\n                    role=\"slider\"\n                    style={{\n                      top: `${adjustedOpacityScopeTop}px`,\n                      left: `${adjustedOpacityScopeLeft}px`,\n                    }}\n                    tabindex=\"0\"\n                  />\n                </div>\n              ) : null}\n            </div>\n          </div>\n          {noHex && noChannels ? null : (\n            <div\n              class={{\n                [CSS.controlSection]: true,\n                [CSS.section]: true,\n              }}\n            >\n              <div class={CSS.hexAndChannelsGroup}>\n                {noHex ? null : (\n                  <div class={CSS.hexOptions}>\n                    <calcite-color-picker-hex-input\n                      allowEmpty={this.isClearable}\n                      alphaChannel={alphaChannel}\n                      class={CSS.control}\n                      messages={messages}\n                      numberingSystem={this.numberingSystem}\n                      onCalciteColorPickerHexInputChange={this.handleHexInputChange}\n                      scale={scale}\n                      value={selectedColorInHex}\n                    />\n                  </div>\n                )}\n                {noChannels ? null : (\n                  <calcite-tabs\n                    class={{\n                      [CSS.colorModeContainer]: true,\n                      [CSS.splitSection]: true,\n                    }}\n                    scale={scale === \"l\" ? \"m\" : \"s\"}\n                  >\n                    <calcite-tab-nav slot=\"title-group\">\n                      {this.renderChannelsTabTitle(\"rgb\")}\n                      {this.renderChannelsTabTitle(\"hsv\")}\n                    </calcite-tab-nav>\n                    {this.renderChannelsTab(\"rgb\")}\n                    {this.renderChannelsTab(\"hsv\")}\n                  </calcite-tabs>\n                )}\n              </div>\n            </div>\n          )}\n          {noSaved ? null : (\n            <div class={{ [CSS.savedColorsSection]: true, [CSS.section]: true }}>\n              <div class={CSS.header}>\n                <label>{messages.saved}</label>\n                <div class={CSS.savedColorsButtons}>\n                  <calcite-button\n                    appearance=\"transparent\"\n                    class={CSS.deleteColor}\n                    disabled={noColor}\n                    iconStart=\"minus\"\n                    kind=\"neutral\"\n                    label={messages.deleteColor}\n                    onClick={this.deleteColor}\n                    scale={scale}\n                    type=\"button\"\n                  />\n                  <calcite-button\n                    appearance=\"transparent\"\n                    class={CSS.saveColor}\n                    disabled={noColor}\n                    iconStart=\"plus\"\n                    kind=\"neutral\"\n                    label={messages.saveColor}\n                    onClick={this.saveColor}\n                    scale={scale}\n                    type=\"button\"\n                  />\n                </div>\n              </div>\n              {savedColors.length > 0 ? (\n                <div class={CSS.savedColors}>\n                  {[\n                    ...savedColors.map((color) => (\n                      <calcite-color-picker-swatch\n                        class={CSS.savedColor}\n                        color={color}\n                        key={color}\n                        onClick={this.handleSavedColorSelect}\n                        onKeyDown={this.handleSavedColorKeyDown}\n                        scale={scale}\n                        tabIndex={0}\n                      />\n                    )),\n                  ]}\n                </div>\n              ) : null}\n            </div>\n          )}\n        </div>\n      </InteractiveContainer>\n    );\n  }\n\n  private storeColorFieldScope = (node: HTMLDivElement): void => {\n    this.colorFieldScopeNode = node;\n  };\n\n  private storeHueScope = (node: HTMLDivElement): void => {\n    this.hueScopeNode = node;\n  };\n\n  private renderChannelsTabTitle = (channelMode: this[\"channelMode\"]): VNode => {\n    const { channelMode: activeChannelMode, messages } = this;\n    const selected = channelMode === activeChannelMode;\n    const label = channelMode === \"rgb\" ? messages.rgb : messages.hsv;\n\n    return (\n      <calcite-tab-title\n        class={CSS.colorMode}\n        data-color-mode={channelMode}\n        key={channelMode}\n        onCalciteTabsActivate={this.handleTabActivate}\n        selected={selected}\n      >\n        {label}\n      </calcite-tab-title>\n    );\n  };\n\n  private renderChannelsTab = (channelMode: this[\"channelMode\"]): VNode => {\n    const { isClearable, channelMode: activeChannelMode, channels, messages, alphaChannel } = this;\n    const selected = channelMode === activeChannelMode;\n    const isRgb = channelMode === \"rgb\";\n    const channelAriaLabels = isRgb\n      ? [messages.red, messages.green, messages.blue]\n      : [messages.hue, messages.saturation, messages.value];\n    const direction = getElementDir(this.el);\n    const channelsToRender = alphaChannel ? channels : channels.slice(0, 3);\n\n    return (\n      <calcite-tab class={CSS.control} key={channelMode} selected={selected}>\n        {/* channel order should not be mirrored */}\n        <div class={CSS.channels} dir=\"ltr\">\n          {channelsToRender.map((channelValue, index) => {\n            const isAlphaChannel = index === 3;\n\n            if (isAlphaChannel) {\n              channelValue =\n                isClearable && !channelValue ? channelValue : alphaToOpacity(channelValue);\n            }\n\n            /* the channel container is ltr, so we apply the host's direction */\n            return this.renderChannel(\n              channelValue,\n              index,\n              channelAriaLabels[index],\n              direction,\n              isAlphaChannel ? \"%\" : \"\",\n            );\n          })}\n        </div>\n      </calcite-tab>\n    );\n  };\n\n  private renderChannel = (\n    value: number | null,\n    index: number,\n    ariaLabel: string,\n    direction: Direction,\n    suffix?: string,\n  ): VNode => {\n    return (\n      <calcite-input-number\n        class={CSS.channel}\n        data-channel-index={index}\n        dir={direction}\n        key={index}\n        label={ariaLabel}\n        lang={this.effectiveLocale}\n        numberButtonType=\"none\"\n        numberingSystem={this.numberingSystem}\n        onCalciteInputNumberChange={this.handleChannelChange}\n        onCalciteInputNumberInput={this.handleChannelInput}\n        onCalciteInternalInputNumberBlur={this.handleChannelBlur}\n        onCalciteInternalInputNumberFocus={this.handleChannelFocus}\n        onKeyDown={this.handleKeyDown}\n        scale={this.scale === \"l\" ? \"m\" : \"s\"}\n        // workaround to ensure input borders overlap as desired\n        // this is because the build transforms margin-left to its\n        // logical-prop, which is undesired as channels are always ltr\n        style={{\n          marginLeft:\n            index > 0 && !(this.scale === \"s\" && this.alphaChannel && index === 3) ? \"-1px\" : \"\",\n        }}\n        suffixText={suffix}\n        value={value?.toString()}\n      />\n    );\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  handleKeyDown(event: KeyboardEvent): void {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n\n  private showIncompatibleColorWarning(value: ColorValue, format: Format): void {\n    console.warn(\n      `ignoring color value (${value}) as it is not compatible with the current format (${format})`,\n    );\n  }\n\n  private setMode(format: ColorPicker[\"format\"], warn = true): void {\n    const mode = format === \"auto\" ? this.mode : format;\n    this.mode = this.ensureCompatibleMode(mode, warn);\n  }\n\n  private ensureCompatibleMode(mode: SupportedMode, warn): SupportedMode {\n    const { alphaChannel } = this;\n    const isAlphaCompatible = alphaCompatible(mode);\n\n    if (alphaChannel && !isAlphaCompatible) {\n      const alphaMode = toAlphaMode(mode);\n\n      if (warn) {\n        console.warn(\n          `setting format to (${alphaMode}) as the provided one (${mode}) does not support alpha`,\n        );\n      }\n\n      return alphaMode;\n    }\n\n    if (!alphaChannel && isAlphaCompatible) {\n      const nonAlphaMode = toNonAlphaMode(mode);\n\n      if (warn) {\n        console.warn(\n          `setting format to (${nonAlphaMode}) as the provided one (${mode}) does not support alpha`,\n        );\n      }\n\n      return nonAlphaMode;\n    }\n\n    return mode;\n  }\n\n  private captureHueSliderColor(x: number): void {\n    const hue = (HUE_LIMIT_CONSTRAINED / this.effectiveSliderWidth) * x;\n\n    this.internalColorSet(this.baseColorFieldColor.hue(hue), false);\n  }\n\n  private captureOpacitySliderValue(x: number): void {\n    const alpha = opacityToAlpha((OPACITY_LIMITS.max / this.effectiveSliderWidth) * x);\n\n    this.internalColorSet(this.baseColorFieldColor.alpha(alpha), false);\n  }\n\n  private internalColorSet(\n    color: Color | null,\n    skipEqual = true,\n    context: ColorPicker[\"internalColorUpdateContext\"] = \"user-interaction\",\n  ): void {\n    if (skipEqual && colorEqual(color, this.color)) {\n      return;\n    }\n\n    this.internalColorUpdateContext = context;\n    this.color = color;\n    this.value = this.toValue(color);\n    this.internalColorUpdateContext = null;\n  }\n\n  private toValue(color: Color | null, format: SupportedMode = this.mode): ColorValue | null {\n    if (!color) {\n      return null;\n    }\n\n    const hexMode = \"hex\";\n\n    if (format.includes(hexMode)) {\n      const hasAlpha = format === CSSColorMode.HEXA;\n      return normalizeHex(hexify(color.round(), hasAlpha), hasAlpha);\n    }\n\n    if (format.includes(\"-css\")) {\n      const value = color[format.replace(\"-css\", \"\").replace(\"a\", \"\")]().round().string();\n\n      // Color omits alpha values when alpha is 1\n      const needToInjectAlpha =\n        (format.endsWith(\"a\") || format.endsWith(\"a-css\")) && color.alpha() === 1;\n      if (needToInjectAlpha) {\n        const model = value.slice(0, 3);\n        const values = value.slice(4, -1);\n        return `${model}a(${values}, ${color.alpha()})`;\n      }\n\n      return value;\n    }\n\n    const colorObject =\n      /* Color() does not support hsva, hsla nor rgba, so we use the non-alpha mode */\n      color[toNonAlphaMode(format)]().round().object();\n\n    if (format.endsWith(\"a\")) {\n      return normalizeAlpha(colorObject);\n    }\n\n    return colorObject;\n  }\n\n  private getSliderCapSpacing(): number {\n    const {\n      dimensions: {\n        slider: { height },\n        thumb: { radius },\n      },\n    } = this;\n\n    return radius * 2 - height;\n  }\n\n  private updateDimensions(scale: Scale = \"m\"): void {\n    this.dimensions = DIMENSIONS[scale];\n  }\n\n  private deleteColor = (): void => {\n    const colorToDelete = hexify(this.color, this.alphaChannel);\n    const inStorage = this.savedColors.indexOf(colorToDelete) > -1;\n\n    if (!inStorage) {\n      return;\n    }\n\n    const savedColors = this.savedColors.filter((color) => color !== colorToDelete);\n\n    this.savedColors = savedColors;\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  };\n\n  private saveColor = (): void => {\n    const colorToSave = hexify(this.color, this.alphaChannel);\n    const alreadySaved = this.savedColors.indexOf(colorToSave) > -1;\n\n    if (alreadySaved) {\n      return;\n    }\n\n    const savedColors = [...this.savedColors, colorToSave];\n\n    this.savedColors = savedColors;\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  };\n\n  private drawColorControls = throttle(\n    (type: \"all\" | \"color-field\" | \"hue-slider\" | \"opacity-slider\" = \"all\"): void => {\n      if ((type === \"all\" || type === \"color-field\") && this.colorFieldRenderingContext) {\n        this.drawColorField();\n      }\n\n      if ((type === \"all\" || type === \"hue-slider\") && this.hueSliderRenderingContext) {\n        this.drawHueSlider();\n      }\n\n      if (\n        this.alphaChannel &&\n        (type === \"all\" || type === \"opacity-slider\") &&\n        this.opacitySliderRenderingContext\n      ) {\n        this.drawOpacitySlider();\n      }\n    },\n    throttleFor60FpsInMs,\n  );\n\n  private drawColorField(): void {\n    const context = this.colorFieldRenderingContext;\n    const {\n      dimensions: {\n        colorField: { height, width },\n      },\n    } = this;\n\n    context.fillStyle = this.baseColorFieldColor\n      .hsv()\n      .saturationv(100)\n      .value(100)\n      .alpha(1)\n      .string();\n    context.fillRect(0, 0, width, height);\n\n    const whiteGradient = context.createLinearGradient(0, 0, width, 0);\n    whiteGradient.addColorStop(0, \"rgba(255,255,255,1)\");\n    whiteGradient.addColorStop(1, \"rgba(255,255,255,0)\");\n    context.fillStyle = whiteGradient;\n    context.fillRect(0, 0, width, height);\n\n    const blackGradient = context.createLinearGradient(0, 0, 0, height);\n    blackGradient.addColorStop(0, \"rgba(0,0,0,0)\");\n    blackGradient.addColorStop(1, \"rgba(0,0,0,1)\");\n    context.fillStyle = blackGradient;\n    context.fillRect(0, 0, width, height);\n\n    this.drawActiveColorFieldColor();\n  }\n\n  private setCanvasContextSize(\n    canvas: HTMLCanvasElement,\n    { height, width }: { height: number; width: number },\n  ): void {\n    if (!canvas) {\n      return;\n    }\n\n    const devicePixelRatio = window.devicePixelRatio || 1;\n\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.height = `${height}px`;\n    canvas.style.width = `${width}px`;\n\n    const context = canvas.getContext(\"2d\");\n    context.scale(devicePixelRatio, devicePixelRatio);\n  }\n\n  private captureColorFieldColor = (x: number, y: number, skipEqual = true): void => {\n    const {\n      dimensions: {\n        colorField: { height, width },\n      },\n    } = this;\n    const saturation = Math.round((HSV_LIMITS.s / width) * x);\n    const value = Math.round((HSV_LIMITS.v / height) * (height - y));\n\n    this.internalColorSet(\n      this.baseColorFieldColor.hsv().saturationv(saturation).value(value),\n      skipEqual,\n    );\n  };\n\n  private initColorField = (canvas: HTMLCanvasElement): void => {\n    this.colorFieldRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"color-field\");\n    this.drawColorControls();\n  };\n\n  private initHueSlider = (canvas: HTMLCanvasElement): void => {\n    this.hueSliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"hue-slider\");\n    this.drawHueSlider();\n  };\n\n  private initOpacitySlider = (canvas: HTMLCanvasElement): void => {\n    if (!canvas) {\n      return;\n    }\n\n    this.opacitySliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"opacity-slider\");\n    this.drawOpacitySlider();\n  };\n\n  private updateCanvasSize(\n    context: \"all\" | \"color-field\" | \"hue-slider\" | \"opacity-slider\" = \"all\",\n  ): void {\n    const { dimensions } = this;\n\n    if (context === \"all\" || context === \"color-field\") {\n      this.setCanvasContextSize(this.colorFieldRenderingContext?.canvas, dimensions.colorField);\n    }\n\n    const adjustedSliderDimensions = {\n      width: this.effectiveSliderWidth,\n      height:\n        dimensions.slider.height + (dimensions.thumb.radius - dimensions.slider.height / 2) * 2,\n    };\n\n    if (context === \"all\" || context === \"hue-slider\") {\n      this.setCanvasContextSize(this.hueSliderRenderingContext?.canvas, adjustedSliderDimensions);\n    }\n\n    if (context === \"all\" || context === \"opacity-slider\") {\n      this.setCanvasContextSize(\n        this.opacitySliderRenderingContext?.canvas,\n        adjustedSliderDimensions,\n      );\n    }\n  }\n\n  private drawActiveColorFieldColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color.hsv();\n\n    const {\n      dimensions: {\n        colorField: { height, width },\n        thumb: { radius },\n      },\n    } = this;\n\n    const x = hsvColor.saturationv() / (HSV_LIMITS.s / width);\n    const y = height - hsvColor.value() / (HSV_LIMITS.v / height);\n\n    requestAnimationFrame(() => {\n      this.colorFieldScopeLeft = x;\n      this.colorFieldScopeTop = y;\n    });\n\n    this.drawThumb(this.colorFieldRenderingContext, radius, x, y, hsvColor, false);\n  }\n\n  private drawThumb(\n    context: CanvasRenderingContext2D,\n    radius: number,\n    x: number,\n    y: number,\n    color: Color,\n    applyAlpha: boolean,\n  ): void {\n    const startAngle = 0;\n    const endAngle = 2 * Math.PI;\n    const outlineWidth = 1;\n\n    context.beginPath();\n    context.arc(x, y, radius, startAngle, endAngle);\n    context.fillStyle = \"#fff\";\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = outlineWidth;\n    context.stroke();\n\n    if (applyAlpha && color.alpha() < 1) {\n      const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n      context.beginPath();\n      context.arc(x, y, radius - 3, startAngle, endAngle);\n      context.fillStyle = pattern;\n      context.fill();\n    }\n\n    context.globalCompositeOperation = \"source-atop\";\n\n    context.beginPath();\n    context.arc(x, y, radius - 3, startAngle, endAngle);\n    const alpha = applyAlpha ? color.alpha() : 1;\n    context.fillStyle = color.rgb().alpha(alpha).string();\n    context.fill();\n\n    context.globalCompositeOperation = \"source-over\";\n  }\n\n  private drawActiveHueSliderColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color.hsv().saturationv(100).value(100);\n\n    const {\n      dimensions: {\n        thumb: { radius },\n      },\n    } = this;\n\n    const width = this.effectiveSliderWidth;\n    const x = hsvColor.hue() / (HUE_LIMIT_CONSTRAINED / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n\n    requestAnimationFrame(() => {\n      this.hueScopeLeft = sliderBoundX;\n    });\n\n    this.drawThumb(this.hueSliderRenderingContext, radius, sliderBoundX, y, hsvColor, false);\n  }\n\n  private drawHueSlider(): void {\n    const context = this.hueSliderRenderingContext;\n    const {\n      dimensions: {\n        slider: { height },\n        thumb: { radius: thumbRadius },\n      },\n    } = this;\n\n    const x = 0;\n    const y = thumbRadius - height / 2;\n    const width = this.effectiveSliderWidth;\n\n    const gradient = context.createLinearGradient(0, 0, width, 0);\n\n    const hueSliderColorStopKeywords = [\n      \"red\",\n      \"yellow\",\n      \"lime\",\n      \"cyan\",\n      \"blue\",\n      \"magenta\",\n      \"#ff0004\" /* 1 unit less than #ff0 to avoid duplicate values within range */,\n    ];\n\n    const offset = 1 / (hueSliderColorStopKeywords.length - 1);\n    let currentOffset = 0;\n\n    hueSliderColorStopKeywords.forEach((keyword) => {\n      gradient.addColorStop(currentOffset, Color(keyword).string());\n      currentOffset += offset;\n    });\n\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n\n    this.drawSliderPath(context, height, width, x, y);\n\n    context.fillStyle = gradient;\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n\n    this.drawActiveHueSliderColor();\n  }\n\n  private drawOpacitySlider(): void {\n    const context = this.opacitySliderRenderingContext;\n    const {\n      baseColorFieldColor: previousColor,\n      dimensions: {\n        slider: { height },\n        thumb: { radius: thumbRadius },\n      },\n    } = this;\n\n    const x = 0;\n    const y = thumbRadius - height / 2;\n    const width = this.effectiveSliderWidth;\n\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n\n    const gradient = context.createLinearGradient(0, y, width, 0);\n    const startColor = previousColor.rgb().alpha(0);\n    const midColor = previousColor.rgb().alpha(0.5);\n    const endColor = previousColor.rgb().alpha(1);\n\n    gradient.addColorStop(0, startColor.string());\n    gradient.addColorStop(0.5, midColor.string());\n    gradient.addColorStop(1, endColor.string());\n\n    this.drawSliderPath(context, height, width, x, y);\n\n    const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n    context.fillStyle = pattern;\n    context.fill();\n\n    context.fillStyle = gradient;\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n\n    this.drawActiveOpacitySliderColor();\n  }\n\n  private drawSliderPath(\n    context: CanvasRenderingContext2D,\n    height: number,\n    width: number,\n    x: number,\n    y: number,\n  ): void {\n    const radius = height / 2 + 1;\n    context.beginPath();\n    context.moveTo(x + radius, y);\n    context.lineTo(x + width - radius, y);\n    context.quadraticCurveTo(x + width, y, x + width, y + radius);\n    context.lineTo(x + width, y + height - radius);\n    context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    context.lineTo(x + radius, y + height);\n    context.quadraticCurveTo(x, y + height, x, y + height - radius);\n    context.lineTo(x, y + radius);\n    context.quadraticCurveTo(x, y, x + radius, y);\n    context.closePath();\n  }\n\n  private getCheckeredBackgroundPattern(): HTMLCanvasElement {\n    if (this.checkerPattern) {\n      return this.checkerPattern;\n    }\n\n    const pattern = document.createElement(\"canvas\");\n    pattern.width = 10;\n    pattern.height = 10;\n    const patternContext = pattern.getContext(\"2d\");\n\n    patternContext.fillStyle = \"#ccc\";\n    patternContext.fillRect(0, 0, 10, 10);\n    patternContext.fillStyle = \"#fff\";\n    patternContext.fillRect(0, 0, 5, 5);\n    patternContext.fillRect(5, 5, 5, 5);\n\n    this.checkerPattern = pattern;\n\n    return pattern;\n  }\n\n  private drawActiveOpacitySliderColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color;\n\n    const {\n      dimensions: {\n        thumb: { radius },\n      },\n    } = this;\n\n    const width = this.effectiveSliderWidth;\n    const x = alphaToOpacity(hsvColor.alpha()) / (OPACITY_LIMITS.max / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n\n    requestAnimationFrame(() => {\n      this.opacityScopeLeft = sliderBoundX;\n    });\n\n    this.drawThumb(this.opacitySliderRenderingContext, radius, sliderBoundX, y, hsvColor, true);\n  }\n\n  private getSliderBoundX(x: number, width: number, radius: number): number {\n    const closeToEdge = closeToRangeEdge(x, width, radius);\n\n    return closeToEdge === 0\n      ? x\n      : closeToEdge === -1\n        ? remap(x, 0, width, radius, radius * 2)\n        : remap(x, 0, width, width - radius * 2, width - radius);\n  }\n\n  private storeOpacityScope = (node: HTMLDivElement): void => {\n    this.opacityScopeNode = node;\n  };\n\n  private handleOpacityScopeKeyDown = (event: KeyboardEvent): void => {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 0.01,\n      ArrowRight: 0.01,\n      ArrowDown: -0.01,\n      ArrowLeft: -0.01,\n    };\n\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const alpha = this.baseColorFieldColor.alpha();\n      const color = this.baseColorFieldColor.alpha(alpha + delta);\n      this.internalColorSet(color, false);\n    }\n  };\n\n  private updateColorFromChannels(channels: this[\"channels\"]): void {\n    this.internalColorSet(Color(channels, this.channelMode));\n  }\n\n  private updateChannelsFromColor(color: Color | null): void {\n    this.channels = color ? this.toChannels(color) : [null, null, null, null];\n  }\n\n  private toChannels(color: Color): Channels {\n    const { channelMode } = this;\n\n    const channels = color[channelMode]()\n      .array()\n      .map((value, index) => {\n        const isAlpha = index === 3;\n        return isAlpha ? value : Math.floor(value);\n      });\n\n    if (channels.length === 3) {\n      channels.push(1); // Color omits alpha when 1\n    }\n\n    return channels as Channels;\n  }\n\n  private getAdjustedScopePosition(left: number, top: number): [number, number] {\n    return [left - SCOPE_SIZE / 2, top - SCOPE_SIZE / 2];\n  }\n}\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","export const clamp = (value: number, min: number, max: number): number => Math.max(min, Math.min(value, max));\n\nconst decimalNumberRegex = new RegExp(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n\n/**\n * Returns the quantity of real decimal places for a number, which excludes trailing zeros.\n *\n * Adapted from {@link https://stackoverflow.com/questions/10454518/javascript-how-to-retrieve-the-number-of-decimals-of-a-string-number}.\n *\n * @param decimal - decimal value\n * @param value\n * @returns {number} the amount of decimal places in a number\n */\nexport const decimalPlaces = (value: number | string): number => {\n  const match = (\"\" + value).match(decimalNumberRegex);\n  if (!match || parseInt(match[1]) === 0) {\n    return 0;\n  }\n  return Math.max(\n    0,\n    // Number of digits right of decimal point.\n    (match[1] ? match[1].length : 0) -\n      // Adjust for scientific notation.\n      (match[2] ? +match[2] : 0),\n  );\n};\n\nexport function getDecimals(value: number): number {\n  if (decimalPlaces(value) > 0 && value > 0) {\n    return parseFloat(`0.${value.toString().split(\".\")[1]}`);\n  }\n  return value;\n}\n\nexport function remap(value: number, fromMin: number, fromMax: number, toMin: number, toMax: number): number {\n  return ((value - fromMin) * (toMax - toMin)) / (fromMax - fromMin) + toMin;\n}\n\n/**\n * Helper to determine if a value is close to the edge of a range within a threshold.\n *\n * @param value\n * @param range\n * @param threshold\n * @returns -1 if close to lower edge, 1 if close to upper edge, 0 otherwise.\n */\nexport function closeToRangeEdge(value: number, range: number, threshold: number): number {\n  return value < threshold ? -1 : value > range - threshold ? 1 : 0;\n}\n","export const CSS = {\n  container: \"container\",\n  content: \"content\",\n};\n","import { Component, Element, h, Host, Listen, Method, Prop, State, VNode } from \"@stencil/core\";\nimport { nodeListToArray } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport { Scale } from \"../interfaces\";\nimport { CSS } from \"./resources\";\nimport { TabChangeEventDetail } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding custom content.\n */\n@Component({\n  tag: \"calcite-tab\",\n  styleUrl: \"tab.scss\",\n  shadow: true,\n})\nexport class Tab {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Specifies a unique name for the component.\n   *\n   * When specified, use the same value on the `calcite-tab-title`.\n   */\n  @Prop({ reflect: true }) tab: string;\n\n  /**\n   * When `true`, the component's contents are selected.\n   *\n   * Only one tab can be selected within the `calcite-tabs` parent.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  /**\n   * Specifies the size of the component inherited from the parent `calcite-tabs`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const id = this.el.id || this.guid;\n\n    return (\n      <Host aria-labelledby={this.labeledBy} id={id}>\n        <div\n          class={{ [CSS.container]: true, [`scale-${this.scale}`]: true }}\n          role=\"tabpanel\"\n          tabIndex={this.selected ? 0 : -1}\n        >\n          <section class={CSS.content}>\n            <slot />\n          </section>\n        </div>\n      </Host>\n    );\n  }\n\n  connectedCallback(): void {\n    this.parentTabsEl = this.el.closest(\"calcite-tabs\");\n  }\n\n  disconnectedCallback(): void {\n    // Dispatching to body in order to be listened by other elements that are still connected to the DOM.\n    document.body?.dispatchEvent(\n      new CustomEvent(\"calciteTabUnregister\", {\n        detail: this.el,\n      }),\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalTabChange\", { target: \"body\" })\n  internalTabChangeHandler(event: CustomEvent<TabChangeEventDetail>): void {\n    const targetTabsEl = event\n      .composedPath()\n      .find((el: HTMLElement) => el.tagName === \"CALCITE-TABS\");\n\n    // to allow `<calcite-tabs>` to be nested we need to make sure this\n    // `calciteTabChange` event was actually fired from a within the same\n    // `<calcite-tabs>` that is the a parent of this tab.\n    if (targetTabsEl !== this.parentTabsEl) {\n      return;\n    }\n\n    if (this.tab) {\n      this.selected = this.tab === event.detail.tab;\n    } else {\n      this.getTabIndex().then((index) => {\n        this.selected = index === event.detail.tab;\n      });\n    }\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Returns the index of the component item within the tab array.\n   */\n  @Method()\n  async getTabIndex(): Promise<number> {\n    return Array.prototype.indexOf.call(\n      nodeListToArray(this.el.parentElement.children).filter((el) => el.matches(\"calcite-tab\")),\n      this.el,\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTabElement;\n\n  parentTabsEl: HTMLCalciteTabsElement;\n\n  guid = `calcite-tab-title-${guid()}`;\n\n  @State() labeledBy: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @param tabIds\n   * @param titleIds\n   * @internal\n   */\n  @Method()\n  async updateAriaInfo(tabIds: string[] = [], titleIds: string[] = []): Promise<void> {\n    this.labeledBy = titleIds[tabIds.indexOf(this.el.id)] || null;\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-tab-content-block-padding: Specifies the block padding of the component's content in the `default` slot.\n */\n\n:host([selected]) {\n  section,\n  .container {\n    @apply block;\n  }\n}\n\n:host {\n  @apply hidden h-full w-full;\n}\n\n:host([selected]) {\n  @apply block h-full w-full overflow-auto;\n}\n\n.content {\n  @apply box-border;\n  padding-block: var(--calcite-internal-tab-content-block-padding);\n}\n\n.scale-s {\n  --calcite-internal-tab-content-block-padding: var(--calcite-tab-content-block-padding, theme(\"spacing.1\"));\n  @apply text-n2h;\n}\n\n.scale-m {\n  --calcite-internal-tab-content-block-padding: var(--calcite-tab-content-block-padding, theme(\"spacing.2\"));\n  @apply text-n1h;\n}\n\n.scale-l {\n  --calcite-internal-tab-content-block-padding: var(--calcite-tab-content-block-padding, theme(\"spacing.[2.5]\"));\n  @apply text-0h;\n}\n\nsection,\n.container {\n  @apply hidden h-full w-full;\n}\n\n.container {\n  @apply focus-base;\n\n  &:focus {\n    @apply focus-inset;\n  }\n}\n\n@include base-component();\n","export const SLOTS = {\n  titleGroup: \"title-group\",\n};\n","import { Component, Element, Fragment, h, Listen, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { getSlotAssignedElements, slotChangeGetAssignedElements } from \"../../utils/dom\";\nimport { TabLayout, TabPosition } from \"./interfaces\";\nimport { SLOTS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-tab`s.\n * @slot title-group - A slot for adding a `calcite-tab-nav`.\n */\n@Component({\n  tag: \"calcite-tabs\",\n  styleUrl: \"tabs.scss\",\n  shadow: true,\n})\nexport class Tabs {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Specifies the layout of the `calcite-tab-nav`, justifying the `calcite-tab-title`s to the start (`\"inline\"`), or across and centered (`\"center\"`).\n   */\n  @Prop({ reflect: true }) layout: TabLayout = \"inline\";\n\n  /**\n   * Specifies the position of `calcite-tab-nav` and `calcite-tab-title` components in relation to the `calcite-tabs`.\n   */\n  @Prop({ reflect: true }) position: TabPosition = \"top\";\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"position\")\n  @Watch(\"scale\")\n  handleInheritableProps(): void {\n    this.updateItems();\n  }\n\n  /**\n   * When `true`, the component will display with a folder style menu.\n   */\n  @Prop() bordered = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalTabNavSlotChange\")\n  calciteInternalTabNavSlotChangeHandler(event: CustomEvent): void {\n    event.stopPropagation();\n    if (event.detail.length !== this.titles.length) {\n      this.titles = event.detail;\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTabsElement;\n\n  private defaultSlotChangeHandler = (event): void => {\n    this.tabs = slotChangeGetAssignedElements(event, \"calcite-tab\") as HTMLCalciteTabElement[];\n  };\n\n  private slotEl: HTMLSlotElement;\n\n  /**\n   *\n   * Stores an array of ids of `<calcite-tab-titles>`s to match up ARIA\n   * attributes.\n   */\n  @State() titles: HTMLCalciteTabTitleElement[] = [];\n\n  @Watch(\"titles\")\n  titlesWatcher(): void {\n    this.updateAriaSettings();\n    this.updateItems();\n  }\n\n  /**\n   *\n   * Stores an array of ids of `<calcite-tab>`s to match up ARIA attributes.\n   */\n  @State() tabs: HTMLCalciteTabElement[] = [];\n\n  @Watch(\"tabs\")\n  tabsWatcher(): void {\n    this.updateAriaSettings();\n    this.updateItems();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   *\n   * Matches up elements from the internal `tabs` and `titles` to automatically\n   * update the ARIA attributes and link `<calcite-tab>` and\n   * `<calcite-tab-title>` components.\n   */\n  async updateAriaSettings(): Promise<void> {\n    let tabIds;\n    let titleIds;\n    const tabs = getSlotAssignedElements<HTMLCalciteTabElement>(this.slotEl, \"calcite-tab\");\n\n    // determine if we are using `tab` based or `index` based tab identifiers.\n    if (tabs.some((el) => el.tab) || this.titles.some((el) => el.tab)) {\n      // if we are using `tab` based identifiers sort by `tab` to account for\n      // possible out of order tabs and get the id of each tab\n      tabIds = tabs.sort((a, b) => a.tab.localeCompare(b.tab)).map((el) => el.id);\n      titleIds = this.titles.sort((a, b) => a.tab.localeCompare(b.tab)).map((el) => el.id);\n    } else {\n      // if we are using index based tabs then the `<calcite-tab>` and\n      // `<calcite-tab-title>` might have been rendered out of order so the\n      // order of `this.tabs` and `this.titles` might not reflect the DOM state,\n      // and might not match each other so we need to get the index of all the\n      // tabs and titles in the DOM order to match them up as a source of truth\n      const tabDomIndexes = await Promise.all(tabs.map((el) => el.getTabIndex()));\n      const titleDomIndexes = await Promise.all(this.titles.map((el) => el.getTabIndex()));\n\n      // once we have the DOM order as a source of truth we can build the\n      // matching tabIds and titleIds arrays\n      tabIds = tabDomIndexes.reduce((ids, indexInDOM, registryIndex) => {\n        ids[indexInDOM] = tabs[registryIndex].id;\n        return ids;\n      }, []);\n\n      titleIds = titleDomIndexes.reduce((ids, indexInDOM, registryIndex) => {\n        ids[indexInDOM] = this.titles[registryIndex].id;\n        return ids;\n      }, []);\n    }\n\n    // pass all our new aria information to each `<calcite-tab>` and\n    // `<calcite-tab-title>` which will check if they can update their internal\n    // `controlled` or `labeledBy` states and re-render if necessary\n    tabs.forEach((el) => el.updateAriaInfo(tabIds, titleIds));\n    this.titles.forEach((el) => el.updateAriaInfo(tabIds, titleIds));\n  }\n\n  private updateItems(): void {\n    const { position, scale } = this;\n\n    const nav = this.el.querySelector(\"calcite-tab-nav\");\n    if (nav) {\n      nav.position = position;\n      nav.scale = scale;\n    }\n\n    Array.from(this.el.querySelectorAll(\"calcite-tab\")).forEach((tab: HTMLCalciteTabElement) => {\n      if (tab.parentElement === this.el) {\n        tab.scale = scale;\n      }\n    });\n\n    Array.from(this.el.querySelectorAll(\"calcite-tab-nav > calcite-tab-title\")).forEach(\n      (title: HTMLCalciteTabTitleElement) => {\n        title.position = position;\n        title.scale = scale;\n      },\n    );\n  }\n\n  private setDefaultSlotRef = (el) => (this.slotEl = el);\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.updateItems();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    this.updateItems();\n  }\n\n  disconnectedCallback(): void {}\n\n  render(): VNode {\n    return (\n      <Fragment>\n        <slot name={SLOTS.titleGroup} />\n        <section>\n          <slot onSlotchange={this.defaultSlotChangeHandler} ref={this.setDefaultSlotRef} />\n        </section>\n      </Fragment>\n    );\n  }\n}\n",":host {\n  @apply flex flex-col;\n}\n\n:host([bordered]) {\n  box-shadow: inset 0 1px 0 var(--calcite-color-border-1);\n  background-color: var(--calcite-color-foreground-1);\n\n  section {\n    @apply border-color-1 border border-solid;\n  }\n}\n\n:host([bordered][position=\"bottom\"]) {\n  box-shadow:\n    inset 0 1px 0 var(--calcite-color-border-1),\n    inset 0 -1px 0 var(--calcite-color-border-1);\n}\n\n:host([bordered]:not([position=\"bottom\"])) ::slotted(calcite-tab-nav) {\n  margin-block-end: -1px;\n}\n\n:host([bordered][scale=\"s\"]) section {\n  @apply p-3;\n}\n\n:host([bordered][scale=\"m\"]) section {\n  @apply p-2;\n}\n\n:host([bordered][scale=\"l\"]) section {\n  @apply p-4;\n}\n\n:host([position=\"bottom\"]) {\n  @apply flex-col-reverse;\n}\n\nsection {\n  @apply border-t-color-1\n    flex\n    flex-grow\n    overflow-hidden\n    border-t;\n  border-block-start-style: solid;\n}\n\n:host([position=\"bottom\"]) section {\n  @apply border-b-color-1\n    flex-col-reverse\n    border-t-0\n    border-b;\n}\n\n:host([position=\"bottom\"]:not([bordered])) section {\n  border-block-end-style: solid;\n}\n\n@media (forced-colors: active) {\n  :host([bordered]) section {\n    @apply border-t-0\n      border-b;\n  }\n  :host([position=\"bottom\"][bordered]) section {\n    @apply border-t\n      border-b-0;\n  }\n}\n\n@include base-component();\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n"],"names":["CSS","DEFAULT_COLOR","Color","ColorPickerHexInput","proxyCustomElement","HTMLElement","onHexInputBlur","node","this","hexInputNode","inputValue","value","hex","concat","allowEmpty","internalColor","willClearValue","isLonghand","isLonghandHex","isShorthandHex","alphaChannel","onHexInputChange","isValidHex","formatHexForInternalInput","rgbToHex","object","onOpacityInputBlur","opacityInputNode","formatOpacityForInternalInput","onOpacityInputInput","onOpacityInputChange","normalized","normalizeHex","alphaHex","hexa","slice","internalSetValue","_this$internalColor","alpha","opacityToAlpha","Number","onInputFocus","event","type","selectText","onHexInputInput","hexInputValue","oldValue","onInputKeyDown","altKey","ctrlKey","metaKey","shiftKey","key","composedPath","includes","preventDefault","isNudgeKey","previousNonNullValue","direction","bump","hexify","nudgeRGBChannels","withModifiers","singleChar","length","validHexChar","hexChar","test","onHexInputPaste","clipboardData","getData","storeHexInputRef","storeOpacityInputRef","connectedCallback","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","handleValueChange","render","hexLabel","messages","scale","opacityInputValue","inputScale","h","class","label","maxLength","onCalciteInputTextChange","onCalciteInputTextInput","onCalciteInternalInputTextBlur","onCalciteInternalInputTextFocus","onKeyDown","onPaste","prefixText","ref","opacity","max","OPACITY_LIMITS","min","numberButtonType","numberingSystem","onCalciteInputNumberInput","onCalciteInternalInputNumberBlur","onCalciteInternalInputNumberFocus","suffixText","setFocus","componentFocusable","focusElement","emit","arguments","undefined","currentColor","nextColor","normalizedLonghand","changed","calciteColorPickerHexInputChange","replace","color","alphaToOpacity","amount","context","nudgedChannels","channels","array","rgbChannels","map","channel","nudgedAlpha","ColorPicker","internalColorUpdateContext","isActiveChannelInputEmpty","mode","CSSColorMode","HEX","shiftKeyChannelAdjustment","upOrDownArrowKeyTracker","handleTabActivate","channelMode","currentTarget","getAttribute","updateChannelsFromColor","handleColorFieldScopeKeyDown","arrowKeyToXYOffset","ArrowUp","x","y","ArrowRight","ArrowDown","ArrowLeft","scopeOrientation","captureColorFieldColor","colorFieldScopeLeft","colorFieldScopeTop","handleHueScopeKeyDown","modifier","arrowKeyToXOffset","delta","hue","baseColorFieldColor","internalColorSet","handleHexInputChange","stopPropagation","isClearable","target","alphaCompatible","handleSavedColorSelect","swatch","handleChannelInput","input","channelIndex","limit","RGB_LIMITS","Object","keys","HSV_LIMITS","adjustedValue","clamp","toString","handleChannelChange","handleChannelBlur","_channels$channelInde","handleChannelFocus","isAlphaChannel","getChannelInputLimit","updateColorFromChannels","handleSavedColorKeyDown","isActivationKey","handleColorFieldPointerDown","isPrimaryPointerButton","offsetX","offsetY","window","addEventListener","globalPointerMoveHandler","globalPointerUpHandler","once","activeCanvasInfo","colorFieldRenderingContext","bounds","canvas","getBoundingClientRect","focusScope","colorFieldScopeNode","handleHueSliderPointerDown","hueSliderRenderingContext","captureHueSliderColor","hueScopeNode","handleOpacitySliderPointerDown","opacitySliderRenderingContext","captureOpacitySliderValue","opacityScopeNode","previouslyDragging","drawColorControls","calciteColorPickerChange","el","isConnected","samplingX","samplingY","clientX","clientY","matches","width","height","storeColorFieldScope","storeHueScope","renderChannelsTabTitle","activeChannelMode","selected","rgb","hsv","colorMode","onCalciteTabsActivate","renderChannelsTab","channelAriaLabels","red","green","blue","saturation","getElementDir","channelsToRender","control","dir","channelValue","index","renderChannel","ariaLabel","suffix","lang","effectiveLocale","onCalciteInputNumberChange","handleKeyDown","style","marginLeft","deleteColor","colorToDelete","savedColors","indexOf","filter","storageKey","DEFAULT_STORAGE_KEY_PREFIX","storageId","localStorage","setItem","JSON","stringify","saveColor","colorToSave","throttle","_this","drawColorField","drawHueSlider","drawOpacitySlider","skipEqual","dimensions","colorField","Math","round","s","v","saturationv","initColorField","getContext","updateCanvasSize","initHueSlider","initOpacitySlider","storeOpacityScope","handleOpacityScopeKeyDown","toChannels","DIMENSIONS","m","handleAllowEmptyOrClearableChange","clearable","handleAlphaChannelChange","format","console","warn","handleAlphaChannelDimensionsChange","effectiveSliderWidth","getSliderWidth","handleColorChange","oldColor","previousColor","handleFormatOrAlphaChannelChange","setMode","handleScaleChange","updateDimensions","onMessagesChange","modeChanged","nextMode","parseMode","showIncompatibleColorWarning","dragging","calciteColorPickerInput","normalizeColor","colorChanged","colorEqual","endsWith","effectiveLocaleChange","updateMessages","handleChannelKeyUpOrDown","some","_node$classList","classList","contains","focusEl","requestAnimationFrame","focus","focusFirstTabbable","willSetNoColor","parsedMode","valueIsCompatible","initialColor","getItem","parse","setUpMessages","connectInteractive","connectLocalized","connectMessages","disconnectedCallback","removeEventListener","disconnectInteractive","disconnectLocalized","disconnectMessages","componentDidRender","updateHostInteraction","channelsDisabled","thumb","radius","thumbRadius","hexDisabled","hideChannels","hideHex","hideSaved","hueScopeLeft","opacityScopeLeft","savedDisabled","sliderWidth","selectedColorInHex","hueTop","hueLeft","opacityTop","opacityLeft","noColor","vertical","noHex","noChannels","noSaved","adjustedColorFieldScopeLeft","adjustedColorFieldScopeTop","getAdjustedScopePosition","adjustedHueScopeLeft","adjustedHueScopeTop","adjustedOpacityScopeLeft","adjustedOpacityScopeTop","InteractiveContainer","disabled","container","controlAndScope","onPointerDown","scope","colorFieldScope","role","top","left","tabindex","previewAndSliders","preview","sliders","slider","hueSlider","hueScope","opacitySlider","opacityScope","controlSection","section","hexAndChannelsGroup","hexOptions","onCalciteColorPickerHexInputChange","colorModeContainer","splitSection","slot","savedColorsSection","header","saved","savedColorsButtons","appearance","iconStart","kind","onClick","savedColor","tabIndex","ensureCompatibleMode","isAlphaCompatible","alphaMode","toAlphaMode","nonAlphaMode","toNonAlphaMode","HUE_LIMIT_CONSTRAINED","toValue","hasAlpha","HEXA","string","model","values","colorObject","normalizeAlpha","getSliderCapSpacing","fillStyle","fillRect","whiteGradient","createLinearGradient","addColorStop","blackGradient","drawActiveColorFieldColor","setCanvasContextSize","_ref","devicePixelRatio","_this$colorFieldRende","adjustedSliderDimensions","_this$hueSliderRender","_this$opacitySliderRe","hsvColor","drawThumb","applyAlpha","endAngle","PI","beginPath","arc","fill","strokeStyle","lineWidth","stroke","pattern","createPattern","getCheckeredBackgroundPattern","globalCompositeOperation","drawActiveHueSliderColor","sliderBoundX","getSliderBoundX","gradient","hueSliderColorStopKeywords","offset","currentOffset","forEach","keyword","clearRect","drawSliderPath","startColor","midColor","endColor","drawActiveOpacitySliderColor","moveTo","lineTo","quadraticCurveTo","closePath","checkerPattern","document","createElement","patternContext","closeToEdge","closeToRangeEdge","remap","floor","push","SCOPE_SIZE","freeGlobal$1","global","freeSelf","self","root$1","Function","Symbol$1","Symbol","objectProto$1","prototype","hasOwnProperty","nativeObjectToString$1","symToStringTag$1","toStringTag","nativeObjectToString","nullTag","undefinedTag","symToStringTag","baseGetTag","isOwn","call","tag","unmasked","e","result","getRawTag","objectToString","isObjectLike","symbolTag","isSymbol","reWhitespace","reTrimStart","baseTrim","charAt","trimmedEndIndex","isObject","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","other","valueOf","isBinary","now$1","Date","now","FUNC_ERROR_TEXT","nativeMax","nativeMin","debounce","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","clearTimeout","cancel","flush","decimalNumberRegex","RegExp","decimalPlaces","match","getDecimals","parseFloat","split","fromMin","fromMax","toMin","toMax","range","threshold","Tab","guid","id","Host","labeledBy","parentTabsEl","closest","_document$body","body","dispatchEvent","CustomEvent","detail","internalTabChangeHandler","find","tagName","tab","getTabIndex","then","Array","nodeListToArray","parentElement","children","updateAriaInfo","tabIds","titleIds","SLOTS","Tabs","defaultSlotChangeHandler","tabs","slotChangeGetAssignedElements","setDefaultSlotRef","slotEl","handleInheritableProps","updateItems","calciteInternalTabNavSlotChangeHandler","titles","titlesWatcher","updateAriaSettings","tabsWatcher","getSlotAssignedElements","sort","a","b","localeCompare","tabDomIndexes","Promise","all","titleDomIndexes","reduce","ids","indexInDOM","registryIndex","position","nav","querySelector","from","querySelectorAll","title","Fragment","name","onSlotchange"],"sourceRoot":""}