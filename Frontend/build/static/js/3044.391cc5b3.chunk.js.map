{"version":3,"file":"static/js/3044.391cc5b3.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/widgets/OrientedImageryViewer/adapters/OrientedImageryViewerViewModelAdapter2D.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport\"../../../geometry.js\";import e from\"../../../Graphic.js\";import{isSome as t}from\"../../../core/arrayUtils.js\";import i from\"../../../core/Logger.js\";import{waitTick as o,throwIfAborted as r,isAbortError as s}from\"../../../core/promiseUtils.js\";import{transformPoints as a}from\"../../../layers/orientedImagery/transformations/imageToGroundUtils.js\";import{convertOrientationToPixelLocation as n}from\"../../../layers/orientedImagery/transformations/utils.js\";import{activePolygonSymbol as l,polygonSymbol as m}from\"../symbols.js\";import c from\"../../../geometry/Polygon.js\";class p{constructor(p){this.viewModel=p,this.createFootprints=async t=>{await o(t);const{coveragePolygons:i,currentBestFeature:r,isAdditionalCoverageVisible:s}=this.viewModel;for(const o of i)o?.imageID===r.attributes.objectId?this.viewModel.bestFeatureFootprint=new e({attributes:{imageID:o?.imageID},geometry:o,symbol:l,visible:!1}):this.viewModel.additionalFootprints.push(new e({attributes:{imageID:o?.imageID},geometry:o,symbol:m.clone(),visible:s}))},this.updateFootprint=async(o,n)=>{const{activeViewer:m,currentBestFeature:p,currentCoverageVisible:g,footprintExtent:u}=this.viewModel,f=m?.imageSize;if(p&&f&&u)try{const i=await a(o,{feature:p,imageProperties:{width:f[0],height:f[1]},options:n,footprintExtent:u});r(n);const s=i.filter(t);if(!s.length)return;const m=[s.map((({x:e,y:t})=>[e,t,1]))];m[0].push(m[0][0]);const d=new c({rings:m,spatialReference:s[0].spatialReference});this.viewModel.updateCurrentCoveragePolygon(new e({geometry:d,attributes:{imageID:p.attributes.objectId},symbol:l,visible:g}))}catch(d){s(d)||i.getLogger(this.viewModel).error(\"update-footprint\",d)}},this.updateFootprintPanorama=async(t,i)=>{const{horizontalFieldOfView:o,pitch:s,verticalFieldOfView:m,yaw:p}=t,{activeViewer:g,currentBestFeature:u,currentCoverageVisible:f,footprintExtent:d}=this.viewModel,h=g?.imageSize;if(!u||!h||!d)return;const{cameraPitch:y,objectId:w}=u.attributes;if(s+y-m/2>180)return void this.viewModel.updateCurrentCoveragePolygon(null);let v=[];if(s+y+m/2<180){v=[[-o/2,m/2],[o/2,m/2],...s-m/2<0?[[-o/2,-m/2],[o/2,-m/2]]:[[o/2,-m/2],[-o/2,-m/2]]]}else if(s+y-m/2<180&&s+y+m/2>180){v=[[-o/2,-m/2]];const e=Math.floor(o/6),t=o/e;for(let i=0;i<=e;i++)v.push([i*t-o/2,90-s]);v.push([o/2,-m/2])}const b=v.map((([e,t])=>n(p+e,s+t,h[0],h[1]))),j=await a(b,{feature:u,imageProperties:{width:h[0],height:h[1]},options:i,footprintExtent:d});r(i);const I=[j.map((({x:e,y:t})=>[e,t,1]))];I[0].push(I[0][0]);const F=new c({rings:I,spatialReference:j[0].spatialReference});this.viewModel.updateCurrentCoveragePolygon(new e({geometry:F,attributes:{imageID:w},symbol:l.clone(),visible:f}))}}}export{p as default};\n"],"names":["p","constructor","this","viewModel","createFootprints","async","o","t","coveragePolygons","i","currentBestFeature","r","isAdditionalCoverageVisible","s","imageID","attributes","objectId","bestFeatureFootprint","e","geometry","symbol","l","visible","additionalFootprints","push","m","clone","updateFootprint","n","activeViewer","currentCoverageVisible","g","footprintExtent","u","f","imageSize","a","feature","imageProperties","width","height","options","filter","length","map","_ref","x","y","d","c","rings","spatialReference","updateCurrentCoveragePolygon","getLogger","error","updateFootprintPanorama","horizontalFieldOfView","pitch","verticalFieldOfView","yaw","h","cameraPitch","w","v","Math","floor","b","_ref2","j","I","_ref3","F"],"sourceRoot":""}