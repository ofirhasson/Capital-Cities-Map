"use strict";(self.webpackChunknorthwind=self.webpackChunknorthwind||[]).push([[59130],{59130:(t,o,i)=>{i.r(o),i.d(o,{submitValidateNetworkTopologyJob:()=>d,validateNetworkTopology:()=>r});var e=i(76200),a=i(10064),n=i(23084),s=i(64267);async function r(t,o,i){var a,r;const d=(0,n.en)(t),l=o.toJSON();o.validationSet&&(l.validationSet=JSON.stringify(o.validationSet));const u={...l,returnEdits:!0,f:"json"},v=(0,n.cv)({...d.query,...u}),c=(0,n.lA)(v,{...i,method:"post"}),y="".concat(d.path,"/validateNetworkTopology"),{data:p}=await(0,e.Z)(y,c),w=s.Z.fromJSON(p);return w.serviceEdits=null!==(a=null===(r=w.serviceEdits)||void 0===r?void 0:r.map((t=>({layerId:t.id,editedFeatures:t.editedFeatures}))))&&void 0!==a?a:[],w}async function d(t,o,i){if(!o.gdbVersion)throw new a.Z("submit-validate-network-topology-job:missing-gdb-version","version is missing");const s=(0,n.en)(t),r=o.toJSON();o.validationSet&&(r.validationSet=JSON.stringify(o.validationSet));const d=(0,n.lA)(s.query,{query:(0,n.cv)({...r,returnEdits:!0,async:!0,f:"json"}),...i,method:"post"}),l="".concat(s.path,"/validateNetworkTopology"),{data:u}=await(0,e.Z)(l,d);return u?u.statusUrl:null}}}]);
//# sourceMappingURL=59130.e9c0add3.chunk.js.map