{"version":3,"file":"static/js/71335.6106cd11.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/map-components/dist/esm/arcgis-slider.entry.js","../node_modules/@arcgis/map-components/dist/esm/chunk-PVEVZB4O-2c3b8893.js","../node_modules/@arcgis/map-components/dist/esm/useWidget-9b153437.js"],"sourcesContent":["/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.7\n */\nimport { r as registerInstance, c as createEvent, g as getElement } from './index-7d33cc26.js';\nimport { a7 as newWidgetsSlider } from './index-d2df902e.js';\nimport { u as usePropertyChange } from './chunk-PVEVZB4O-2c3b8893.js';\nimport { u as useControllerManager } from './index-c99fc80c.js';\nimport { m as makeWidgetController } from './useWidget-9b153437.js';\nimport './component-utils-de9339fe.js';\n\nconst sliderCss = \"arcgis-slider{min-width:200px;min-height:25px}\";\nconst ArcgisSliderStyle0 = sliderCss;\n\nconst useSliderWidget = makeWidgetController(newWidgetsSlider);\nconst ArcgisSlider = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.arcgisReady = createEvent(this, \"arcgisReady\", 7);\n        this.arcgisPropertyChange = createEvent(this, \"arcgisPropertyChange\", 7);\n        this.widgetMaxChange = createEvent(this, \"arcgisMaxChange\", 7);\n        this.widgetMaxClick = createEvent(this, \"arcgisMaxClick\", 7);\n        this.widgetMinChange = createEvent(this, \"arcgisMinChange\", 7);\n        this.widgetMinClick = createEvent(this, \"arcgisMinClick\", 7);\n        this.widgetSegmentClick = createEvent(this, \"arcgisSegmentClick\", 7);\n        this.widgetSegmentDrag = createEvent(this, \"arcgisSegmentDrag\", 7);\n        this.widgetThumbChange = createEvent(this, \"arcgisThumbChange\", 7);\n        this.widgetThumbClick = createEvent(this, \"arcgisThumbClick\", 7);\n        this.widgetThumbDrag = createEvent(this, \"arcgisThumbDrag\", 7);\n        this.widgetTickClick = createEvent(this, \"arcgisTickClick\", 7);\n        this.widgetTrackClick = createEvent(this, \"arcgisTrackClick\", 7);\n        this.manager = useControllerManager(this);\n        this.widget = useSliderWidget(this);\n        this.viewModel = this.widget.viewModel;\n        this.arcgisPropertyChange = usePropertyChange()(\"state\");\n        this.autoDestroyDisabled = false;\n        this.referenceElement = undefined;\n        this.draggableSegmentsEnabled = this.widget.draggableSegmentsEnabled;\n        this.effectiveMax = this.widget.effectiveMax;\n        this.effectiveMin = this.widget.effectiveMin;\n        this.effectiveSegmentElements = this.widget.effectiveSegmentElements;\n        this.labelElements = this.widget.labelElements;\n        this.labelInputsEnabled = this.widget.labelInputsEnabled;\n        this.icon = this.widget.icon;\n        this.label = this.widget.label;\n        this.labels = this.widget.labels;\n        this.layout = this.widget.layout;\n        this.min = this.widget.min;\n        this.max = this.widget.max;\n        this.maxLabelElement = this.widget.maxLabelElement;\n        this.minLabelElement = this.widget.minLabelElement;\n        this.precision = this.widget.precision;\n        this.rangeLabelInputsEnabled = this.widget.rangeLabelInputsEnabled;\n        this.segmentElements = this.widget.segmentElements;\n        this.snapOnClickEnabled = this.widget.snapOnClickEnabled;\n        this.syncedSegmentsEnabled = this.widget.syncedSegmentsEnabled;\n        this.thumbElements = this.widget.thumbElements;\n        this.thumbsConstrained = this.widget.thumbsConstrained;\n        this.tickConfigs = this.widget.tickConfigs;\n        this.tickElements = this.widget.tickElements;\n        this.trackElement = this.widget.trackElement;\n        this.steps = this.manager.getSet(this.widget.steps, {\n            set: (newValue) => (typeof newValue === \"string\" ? newValue.split(\",\").map(Number) : newValue),\n        });\n        this.values = this.manager.getSet(this.widget.values, {\n            set: (newValue) => (typeof newValue === \"string\" ? newValue.split(\",\").map(Number) : newValue),\n        });\n        this.position = \"bottom-left\";\n        this.state = this.widget.state;\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Permanently destroy the component */\n    async destroy() {\n        await this.manager.destroy();\n    }\n    get el() { return getElement(this); }\n};\nArcgisSlider.style = ArcgisSliderStyle0;\n\nexport { ArcgisSlider as arcgis_slider };\n","/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.7\n */\nimport { b as makeController } from './index-c99fc80c.js';\nimport { s as startLocaleObserver, g as getElementLocales } from './index-d2df902e.js';\n\n// src/load.ts\nvar load = (loader) => makeController(loader);\nvar makeT9nController = (getAssetPath) => ({ blocking = false, name } = {}) => (\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  makeController((component, controller) => {\n    controller.onLifecycle(\n      () => startLocaleObserver(\n        component.el,\n        getAssetPath(\"./assets\"),\n        ({ t9nLocale, t9nStrings, lang }) => {\n          controller.exports = { ...t9nStrings, _lang: lang, _t9nLocale: t9nLocale };\n          const label = t9nStrings.componentLabel ?? t9nStrings.widgetLabel;\n          if (typeof label === \"string\" && \"label\" in component && component.label == null) {\n            component.label ?? (component.label = label);\n          }\n        },\n        name\n      )\n    );\n    if (blocking) {\n      return controller.ready;\n    }\n    const locale = getElementLocales(component.el);\n    return { _lang: locale.lang, _t9nLocale: locale.t9nLocale };\n  })\n);\n\n// src/usePropertyChange.ts\nvar usePropertyChange = (_component) => propertyChangeController;\nvar eventName = \"arcgisPropertyChange\";\nvar propertyChangeController = (...toWatch) => makeController((component, controller) => {\n  const eventedComponent = component;\n  if (component.manager.isLit) {\n    eventedComponent[eventName] = {\n      emit: (payload) => {\n        const event = new CustomEvent(eventName, { detail: payload, cancelable: true });\n        component.el.dispatchEvent(event);\n        return event;\n      }\n    };\n  }\n  const eventEmitter = eventedComponent[eventName];\n  controller.onLoad(\n    () => controller.onLifecycle(\n      () => toWatch.map(\n        (name) => (\n          // Casting to 'el' to simplify dynamic prop name typing\n          component.manager.watch(name, () => eventEmitter.emit({ name }))\n        )\n      )\n    )\n  );\n  return eventEmitter;\n});\n\nexport { load as l, makeT9nController as m, usePropertyChange as u };\n","/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.7\n */\nimport { p as proxyExports, A as AccessorController, a as accessorSupport } from './index-c99fc80c.js';\nimport './index-d2df902e.js';\nimport { a as attachToParent } from './component-utils-de9339fe.js';\n\n// FEATURE: if inside of arcgis-expand/arcgis-placement, sync autoDestroyDisabled prop with that of Expand\n/**\n * A controller for a wrapped JS API Widget\n * - loads the widget\n * - initializes the widget with the component's properties\n * - does two-way binding between widget and component properties\n * - re-emits the widgets's events on the component\n * - type-checks everything ✨\n *\n * Documentation:\n * https://devtopia.esri.com/WebGIS/arcgis-web-components/blob/main/packages/map-components/src/controllers/useWidget.md\n */\nconst makeWidgetController = (loadWidget, _options) => (component, options) => proxy(component, loadWidget, options);\nclass WidgetController extends AccessorController {\n    constructor(component, _loadAccessor, \n    // Disable covariance check\n    // eslint-disable-next-line @typescript-eslint/method-signature-style\n    _options) {\n        super(component, _loadAccessor, _options);\n        this._watchedViewModelProperties = new Map();\n        this._watchedVisibleElementsProperties = {};\n        this._isBindingViewModel = { value: true };\n        Object.defineProperty(this.exports, \"viewModel\", {\n            value: accessorSupport.makeGetterProxy(component, this._watchedViewModelProperties, this._isBindingViewModel),\n        });\n        Object.defineProperty(this.exports, \"visibleElements\", {\n            value: this._makeVisibleElementsBinder(),\n        });\n    }\n    hostConnected() {\n        super.hostConnected();\n        /*\n         * We are done binding props to properties - any accesses after this should\n         * be treated as normal property accesses\n         */\n        this._isBindingViewModel.value = false;\n        if (this.component.manager.didLoadCalled) {\n            attachToParent(this.component);\n        }\n    }\n    async hostLoad() {\n        /*\n         * \"viewModel\" property might not have a @State(), so two-way binding might\n         * not work (and probably one way is fine)\n         */\n        this._watchedProperties.delete(\"viewModel\");\n        await super.hostLoad();\n        if (this.component.manager.destroyed) {\n            return;\n        }\n        this._watchMetaProperties();\n        accessorSupport.reEmitAccessorEvents(this, this._instance, this.reactiveUtils, \"widget\");\n        // Do one way watching for viewModel property\n        this.onLifecycle(() => this.reactiveUtils.watch(() => this._instance.viewModel, (newViewModel) => {\n            this.component.viewModel = newViewModel;\n        }, { initial: true }));\n        const viewModel = this._instance.viewModel;\n        if (typeof viewModel === \"object\") {\n            accessorSupport.reEmitAccessorEvents(this, viewModel, this.reactiveUtils, \"viewModel\");\n            accessorSupport.watchComponentUpdates(this, viewModel, this._watchedViewModelProperties);\n            accessorSupport.watchAccessorUpdates(this, viewModel, this._watchedViewModelProperties);\n        }\n        else if (this._watchedViewModelProperties.size > 0) {\n            throw new Error(`The widget does not have a viewModel to bind to. Tried to bind the following properties: ${Array.from(this._watchedViewModelProperties.keys()).join(\", \")}`);\n        }\n        const visibleElements = Object.entries(this._watchedVisibleElementsProperties);\n        if (visibleElements.length > 0) {\n            this.onLifecycle(() => visibleElements.map(([prop, propertyChain]) => {\n                let base = this._instance.visibleElements ?? {};\n                let defaultVisible = undefined;\n                for (const key of propertyChain.slice(0, -1)) {\n                    if (typeof base[key] === \"object\" && base[key] !== null) {\n                        base = base[key];\n                    }\n                    else {\n                        defaultVisible = Boolean(base[key]);\n                        break;\n                    }\n                }\n                if (defaultVisible === undefined) {\n                    defaultVisible = Boolean(base[propertyChain.slice(-1)[0]] ?? true);\n                }\n                prop.startsWith(\"hide\") ? !defaultVisible : defaultVisible;\n                const hideShowInName = prop.startsWith(\"hide\") || prop.startsWith(\"show\");\n                const shouldFlip = hideShowInName ? prop.startsWith(\"hide\") : defaultVisible;\n                const genericComponent = this.component;\n                if (typeof genericComponent[prop] === \"boolean\") {\n                    this._updateWidgetVisibleElement(propertyChain, genericComponent[prop], shouldFlip);\n                }\n                else {\n                    genericComponent[prop] = false;\n                }\n                return this.watch(prop, (rawVisible) => this._updateWidgetVisibleElement(propertyChain, rawVisible, shouldFlip));\n            }));\n        }\n    }\n    _updateWidgetVisibleElement(propertyChain, propValue, shouldFlip) {\n        let base = this._instance.visibleElements ?? {};\n        for (const key of propertyChain.slice(0, -1)) {\n            if (typeof base[key] !== \"object\" || base[key] === null) {\n                base[key] = {};\n            }\n            base = base[key];\n        }\n        const visible = Boolean(shouldFlip ? !propValue : propValue);\n        base[propertyChain.at(-1)] = visible;\n    }\n    hostLoaded() {\n        const { el } = this.component;\n        /*\n         * On hot reloading, new this.component instance is created (so properties\n         * on it are reset) but this.component.el instance is preserved (so\n         * properties on it are preserved). Since childElem is re-parented on 1st\n         * hostLoad(), for it to be accessible on the 2nd hostLoad() (hot reload),\n         * we have to store it's reference on the el, rather than component\n         */\n        el.childElem ?? (el.childElem = document.createElement(\"div\"));\n        this._instance.container = el.childElem;\n        let arcgisReadyEmitted = false;\n        // Check if view was already provided by the user\n        const currentView = this.component.el.view;\n        // Define the \"view\" property to allow component usage with MapView/SceneView\n        Object.defineProperty(this.component.el, \"view\", {\n            get: () => this._instance.view ?? this._instance.viewModel?.view,\n            set: (view) => {\n                if (!(\"view\" in this._instance) && typeof this._instance.viewModel === \"object\") {\n                    this._instance.viewModel.view = view;\n                }\n                else {\n                    this._instance.view = view;\n                }\n                this._watchViewDestroy();\n                if (!arcgisReadyEmitted) {\n                    arcgisReadyEmitted = true;\n                    this.component.arcgisReady.emit();\n                }\n            },\n            configurable: true,\n            enumerable: true,\n        });\n        if (currentView) {\n            this._instance.view = currentView;\n        }\n        if (this.component.el.isConnected) {\n            attachToParent(this.component);\n            this._watchViewDestroy();\n        }\n    }\n    hostDisconnected() {\n        // If view is already destroyed, view.ui might be undefined\n        if (typeof this.component.el.childElem === \"object\") {\n            this.component.el.view?.ui?.remove(this.component.el.childElem);\n        }\n    }\n    hostDestroy() {\n        super.hostDestroy();\n        this._watchViewDestroyHandle?.remove();\n    }\n    _watchMetaProperties() {\n        this.watch(\"position\", (position) => {\n            if (this.component.el.childElem != null && typeof position === \"string\") {\n                attachToParent(this.component);\n            }\n        });\n        this.watch(\"referenceElement\", () => attachToParent(this.component));\n    }\n    _makeVisibleElementsBinder() {\n        return new Proxy({}, {\n            has: (target, prop) => typeof prop === \"string\" || Reflect.has(target, prop),\n            get: (target, prop) => {\n                // Possibly called by the JS engine\n                if (typeof prop === \"symbol\" || prop in Promise.prototype) {\n                    return Reflect.get(target, prop);\n                }\n                const propertyChain = [prop];\n                const proxy = this._makeRecursiveProxy(propertyChain);\n                return this.component.manager.trackPropKey((resolvedKey) => {\n                    if (resolvedKey === undefined) {\n                        throw new Error(\"Unable to bind visibleElements property. Check for incorrect this.widget.visibleElements usage\");\n                    }\n                    this.component[resolvedKey] = false;\n                    this._watchedVisibleElementsProperties[resolvedKey] = propertyChain;\n                }, proxy);\n            },\n        });\n    }\n    _makeRecursiveProxy(propertyChain) {\n        const chain = new Proxy({}, {\n            get: (target, prop) => {\n                const value = Reflect.get(target, prop);\n                // Possibly called by the JS engine\n                if (typeof prop === \"symbol\" || prop in Promise.prototype) {\n                    return value;\n                }\n                propertyChain.push(prop);\n                return chain;\n            },\n        });\n        return chain;\n    }\n    /**\n     * Destroy the component if view gets destroyed. Note, that when view is\n     * destroyed, component disconnect is triggered, which will destroy the\n     * component in 1s but that can be too late, because in the meanwhile,\n     * a watcher on the widget/viewModel instance may get triggered, and throw\n     * an error if it's not able to access this.view.map or etc\n     * (happens in VersionManagementViewModel for example).\n     * We can't check for this in disconnectedCallback though as even though\n     * view.destroy() does trigger disconnect on all map-components, the\n     * view.destroyed is not yet set to true when disconnect is triggered.\n     */\n    _watchViewDestroy() {\n        this._watchViewDestroyHandle?.remove();\n        this._watchViewDestroyHandle = this.reactiveUtils.when(() => this.component.el.view?.destroyed === true, () => void this.component.destroy().catch(console.error), { sync: true });\n    }\n}\nconst proxy = proxyExports(WidgetController);\n\nexport { makeWidgetController as m };\n"],"names":["useSliderWidget","makeWidgetController","newWidgetsSlider","ArcgisSlider","constructor","hostRef","registerInstance","this","arcgisReady","createEvent","arcgisPropertyChange","widgetMaxChange","widgetMaxClick","widgetMinChange","widgetMinClick","widgetSegmentClick","widgetSegmentDrag","widgetThumbChange","widgetThumbClick","widgetThumbDrag","widgetTickClick","widgetTrackClick","manager","useControllerManager","widget","viewModel","usePropertyChange","autoDestroyDisabled","referenceElement","undefined","draggableSegmentsEnabled","effectiveMax","effectiveMin","effectiveSegmentElements","labelElements","labelInputsEnabled","icon","label","labels","layout","min","max","maxLabelElement","minLabelElement","precision","rangeLabelInputsEnabled","segmentElements","snapOnClickEnabled","syncedSegmentsEnabled","thumbElements","thumbsConstrained","tickConfigs","tickElements","trackElement","steps","getSet","set","newValue","split","map","Number","values","position","state","destroy","el","getElement","style","load","loader","makeController","makeT9nController","getAssetPath","blocking","name","arguments","length","component","controller","onLifecycle","startLocaleObserver","_ref","_t9nStrings$component","t9nLocale","t9nStrings","lang","exports","_lang","_t9nLocale","componentLabel","widgetLabel","_component$label","ready","locale","getElementLocales","_component","propertyChangeController","eventName","_len","toWatch","Array","_key","eventedComponent","isLit","emit","payload","event","CustomEvent","detail","cancelable","dispatchEvent","eventEmitter","onLoad","watch","loadWidget","_options","options","proxy","WidgetController","AccessorController","_loadAccessor","super","_watchedViewModelProperties","Map","_watchedVisibleElementsProperties","_isBindingViewModel","value","Object","defineProperty","accessorSupport","makeGetterProxy","_makeVisibleElementsBinder","hostConnected","didLoadCalled","attachToParent","hostLoad","_watchedProperties","delete","destroyed","_watchMetaProperties","reEmitAccessorEvents","_instance","reactiveUtils","newViewModel","initial","watchComponentUpdates","watchAccessorUpdates","size","Error","concat","from","keys","join","visibleElements","entries","_this$_instance$visib","defaultVisible","prop","propertyChain","base","key","slice","Boolean","_base$propertyChain$s","startsWith","shouldFlip","genericComponent","_updateWidgetVisibleElement","rawVisible","propValue","_this$_instance$visib2","visible","at","hostLoaded","_el$childElem","childElem","document","createElement","container","arcgisReadyEmitted","currentView","view","get","_this$_instance$view","_this$_instance$viewM","_watchViewDestroy","configurable","enumerable","isConnected","hostDisconnected","_this$component$el$vi","ui","remove","hostDestroy","_this$_watchViewDestr","_watchViewDestroyHandle","Proxy","has","target","Reflect","Promise","prototype","_makeRecursiveProxy","trackPropKey","resolvedKey","chain","push","_this$_watchViewDestr2","when","_this$component$el$vi2","catch","console","error","sync","proxyExports"],"sourceRoot":""}