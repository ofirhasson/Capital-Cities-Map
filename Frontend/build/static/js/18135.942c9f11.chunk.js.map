{"version":3,"file":"static/js/18135.942c9f11.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/input-number/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-number/input-number.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-number/input-number.scss?tag=calcite-input-number&encapsulation=shadow"],"sourcesContent":["export const CSS = {\n  loader: \"loader\",\n  clearButton: \"clear-button\",\n  editingEnabled: \"editing-enabled\",\n  inlineChild: \"inline-child\",\n  inputIcon: \"icon\",\n  prefix: \"prefix\",\n  suffix: \"suffix\",\n  numberButtonWrapper: \"number-button-wrapper\",\n  buttonItemHorizontal: \"number-button-item--horizontal\",\n  wrapper: \"element-wrapper\",\n  inputWrapper: \"wrapper\",\n  actionWrapper: \"action-wrapper\",\n  resizeIconWrapper: \"resize-icon-wrapper\",\n  numberButtonItem: \"number-button-item\",\n};\n\nexport const SLOTS = {\n  action: \"action\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getSlotted,\n  isPrimaryPointerButton,\n  setRequestedIcon,\n} from \"../../utils/dom\";\nimport { Alignment, Scale, Status } from \"../interfaces\";\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  internalHiddenInputInputEvent,\n  MutableValidityState,\n  submitForm,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { numberKeys } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport {\n  addLocalizedTrailingDecimalZeros,\n  BigDecimal,\n  isValidNumber,\n  parseNumberString,\n  sanitizeNumberString,\n} from \"../../utils/number\";\nimport { createObserver } from \"../../utils/observers\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { InputPlacement, NumberNudgeDirection, SetValueOrigin } from \"../input/interfaces\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport {\n  NumericInputComponent,\n  syncHiddenFormInput,\n  TextualInputComponent,\n} from \"../input/common/input\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CSS, SLOTS } from \"./resources\";\nimport { InputNumberMessages } from \"./assets/input-number/t9n\";\n\n/**\n * @slot action - A slot for positioning a button next to the component.\n */\n@Component({\n  tag: \"calcite-input-number\",\n  styleUrl: \"input-number.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class InputNumber\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    LocalizedComponent,\n    NumericInputComponent,\n    T9nComponent,\n    TextualInputComponent,\n    LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Global attributes\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"autofocus\")\n  @Watch(\"enterkeyhint\")\n  @Watch(\"inputmode\")\n  handleGlobalAttributesChanged(): void {\n    forceUpdate(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the text alignment of the component's value. */\n  @Prop({ reflect: true }) alignment: Extract<\"start\" | \"end\", Alignment> = \"start\";\n\n  /**\n   * Adds global prop, missing from Stencil's `HTMLElement` type, see https://github.com/ionic-team/stencil/issues/5726\n   *\n   * @ignore\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() autofocus: boolean;\n\n  /**\n   * When `true`, a clear button is displayed when the component has a value.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   *\n   * @mdn [disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  disabledWatcher(): void {\n    this.setDisabledAction();\n  }\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() enterKeyHint: string;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /**\n   * Specifies an icon to display.\n   *\n   * @futureBreaking Remove boolean type as it is not supported.\n   */\n  @Prop({ reflect: true }) icon: IconNameOrString | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() inputMode: string;\n\n  /** When `true`, restricts the component to integer numbers only and disables exponential notation. */\n  @Prop() integer = false;\n\n  /** Accessible name for the component's button or hyperlink. */\n  @Prop() label: string;\n\n  /** When `true`, the component is in the loading state and `calcite-progress` is displayed. */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /**\n   * Toggles locale formatting for numbers.\n   *\n   * @internal\n   */\n  @Prop() localeFormat = false;\n\n  /**\n   * Specifies the maximum value.\n   *\n   * @mdn [max](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#max)\n   */\n  @Prop({ reflect: true }) max: number;\n\n  /** watcher to update number-to-string for max */\n  @Watch(\"max\")\n  maxWatcher(): void {\n    this.maxString = this.max?.toString() || null;\n  }\n\n  /**\n   * Specifies the minimum value.\n   *\n   * @mdn [min](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#min)\n   */\n  @Prop({ reflect: true }) min: number;\n\n  /** watcher to update number-to-string for min */\n  @Watch(\"min\")\n  minWatcher(): void {\n    this.minString = this.min?.toString() || null;\n  }\n\n  /**\n   * Specifies the maximum length of text for the component's value.\n   *\n   * @mdn [maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength)\n   *\n   * @deprecated This property has no effect on the component.\n   */\n  @Prop({ reflect: true }) maxLength: number;\n\n  /**\n   * Specifies the minimum length of text for the component's value.\n   *\n   * @mdn [minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength)\n   *\n   * @deprecated This property has no effect on the component.\n   */\n  @Prop({ reflect: true }) minLength: number;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   *\n   * @mdn [name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#name)\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** Specifies the placement of the buttons. */\n  @Prop({ reflect: true }) numberButtonType: InputPlacement = \"vertical\";\n\n  /**\n   * Specifies placeholder text for the component.\n   *\n   * @mdn [placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#placeholder)\n   */\n  @Prop() placeholder: string;\n\n  /** Adds text to the start of the component. */\n  @Prop() prefixText: string;\n\n  /**\n   * When `true`, the component's value can be read, but cannot be modified.\n   *\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * Specifies the granularity that the component's value must adhere to.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step)\n   */\n  @Prop({ reflect: true }) step: number | \"any\";\n\n  /**\n   * Specifies the type of content to autocomplete, for use in forms.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n   */\n  @Prop() autocomplete: string;\n\n  /** Adds text to the end of the component.  */\n  @Prop() suffixText: string;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) editingEnabled = false;\n\n  /** The component's value. */\n  @Prop({ mutable: true }) value = \"\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputNumberMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputNumberMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  @Watch(\"value\")\n  valueWatcher(newValue: string, previousValue: string): void {\n    if (!this.userChangedValue) {\n      if (newValue === \"Infinity\" || newValue === \"-Infinity\") {\n        this.displayedValue = newValue;\n        this.previousEmittedNumberValue = newValue;\n        return;\n      }\n\n      this.setNumberValue({\n        origin: \"direct\",\n        previousValue,\n        value:\n          newValue == null || newValue == \"\"\n            ? \"\"\n            : isValidNumber(newValue)\n              ? newValue\n              : this.previousValue || \"\",\n      });\n      this.warnAboutInvalidNumberValue(newValue);\n    }\n    this.userChangedValue = false;\n  }\n\n  @Watch(\"icon\")\n  updateRequestedIcon(): void {\n    this.requestedIcon = setRequestedIcon({}, this.icon, \"number\");\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputNumberElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: InputNumber[\"value\"];\n\n  inlineEditableEl: HTMLCalciteInlineEditableElement;\n\n  /** number text input element for locale */\n  private childNumberEl?: HTMLInputElement;\n\n  get isClearable(): boolean {\n    return this.clearable && this.value.length > 0;\n  }\n\n  private minString?: string;\n\n  private maxString?: string;\n\n  private previousEmittedNumberValue: string;\n\n  private previousValue: string;\n\n  private previousValueOrigin: SetValueOrigin = \"initial\";\n\n  /** the computed icon to render */\n  private requestedIcon?: IconNameOrString;\n\n  private nudgeNumberValueIntervalId: number;\n\n  mutationObserver = createObserver(\"mutation\", () => this.setDisabledAction());\n\n  private userChangedValue = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  State\n  //\n  //--------------------------------------------------------------------------\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleWatcher(locale: string): void {\n    updateMessages(this, this.effectiveLocale);\n    numberStringFormatter.numberFormatOptions = {\n      locale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: false,\n    };\n  }\n\n  @State() defaultMessages: InputNumberMessages;\n\n  @State() displayedValue: string;\n\n  @State() slottedActionElDisabledInternally = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    this.inlineEditableEl = this.el.closest(\"calcite-inline-editable\");\n    if (this.inlineEditableEl) {\n      this.editingEnabled = this.inlineEditableEl.editingEnabled || false;\n    }\n    connectLabel(this);\n    connectForm(this);\n\n    this.mutationObserver?.observe(this.el, { childList: true });\n    this.setDisabledAction();\n    this.el.addEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n\n    this.mutationObserver?.disconnect();\n    this.el.removeEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.maxString = this.max?.toString();\n    this.minString = this.min?.toString();\n    this.requestedIcon = setRequestedIcon({}, this.icon, \"number\");\n    await setUpMessages(this);\n\n    this.setPreviousEmittedNumberValue(this.value);\n    this.setPreviousNumberValue(this.value);\n\n    this.warnAboutInvalidNumberValue(this.value);\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      this.displayedValue = this.value;\n      this.previousEmittedNumberValue = this.value;\n    } else {\n      this.setNumberValue({\n        origin: \"connected\",\n        value: isValidNumber(this.value) ? this.value : \"\",\n      });\n    }\n  }\n\n  componentShouldUpdate(newValue: string, oldValue: string, property: string): boolean {\n    if (property === \"value\" && newValue && !isValidNumber(newValue)) {\n      this.setNumberValue({\n        origin: \"reset\",\n        value: oldValue,\n      });\n      return false;\n    }\n    return true;\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputNumberFocus: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputNumberBlur: EventEmitter<void>;\n\n  /**\n   * Fires each time a new value is typed.\n   */\n  @Event({ cancelable: true }) calciteInputNumberInput: EventEmitter<void>;\n\n  /**\n   * Fires each time a new value is typed and committed.\n   */\n  @Event({ cancelable: false }) calciteInputNumberChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.childNumberEl?.focus();\n  }\n\n  /** Selects the text of the component's `value`. */\n  @Method()\n  async selectText(): Promise<void> {\n    this.childNumberEl?.select();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.readOnly || this.disabled || event.defaultPrevented) {\n      return;\n    }\n\n    if (this.isClearable && event.key === \"Escape\") {\n      this.clearInputValue(event);\n      event.preventDefault();\n    }\n    if (event.key === \"Enter\") {\n      if (submitForm(this)) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  incrementOrDecrementNumberValue(\n    direction: NumberNudgeDirection,\n    inputMax: number | null,\n    inputMin: number | null,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void {\n    const { value } = this;\n\n    if (value === \"Infinity\" || value === \"-Infinity\") {\n      return;\n    }\n\n    const adjustment = direction === \"up\" ? 1 : -1;\n    const stepHandleInteger =\n      this.integer && this.step !== \"any\" ? Math.round(this.step) : this.step;\n    const inputStep = stepHandleInteger === \"any\" ? 1 : Math.abs(stepHandleInteger || 1);\n    const inputVal = new BigDecimal(value !== \"\" ? value : \"0\");\n    const nudgedValue = inputVal.add(`${inputStep * adjustment}`);\n\n    const nudgedValueBelowInputMin = () =>\n      typeof inputMin === \"number\" &&\n      !isNaN(inputMin) &&\n      nudgedValue.subtract(`${inputMin}`).isNegative;\n\n    const nudgedValueAboveInputMax = () =>\n      typeof inputMax === \"number\" &&\n      !isNaN(inputMax) &&\n      !nudgedValue.subtract(`${inputMax}`).isNegative;\n\n    const finalValue = nudgedValueBelowInputMin()\n      ? `${inputMin}`\n      : nudgedValueAboveInputMax()\n        ? `${inputMax}`\n        : nudgedValue.toString();\n\n    this.setNumberValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: finalValue,\n    });\n  }\n\n  private clearInputValue = (nativeEvent: KeyboardEvent | MouseEvent): void => {\n    this.setNumberValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: \"\",\n    });\n  };\n\n  private emitChangeIfUserModified = (): void => {\n    if (this.previousValueOrigin === \"user\" && this.value !== this.previousEmittedNumberValue) {\n      this.calciteInputNumberChange.emit();\n      this.setPreviousEmittedNumberValue(this.value);\n    }\n  };\n\n  private inputNumberBlurHandler = () => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n    this.calciteInternalInputNumberBlur.emit();\n    this.emitChangeIfUserModified();\n  };\n\n  private clickHandler = (event: MouseEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    const slottedActionEl = getSlotted(this.el, \"action\");\n    if (event.target !== slottedActionEl) {\n      this.setFocus();\n    }\n  };\n\n  private inputNumberFocusHandler = (): void => {\n    this.calciteInternalInputNumberFocus.emit();\n  };\n\n  private inputNumberInputHandler = (nativeEvent: InputEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      return;\n    }\n\n    const value = (nativeEvent.target as HTMLInputElement).value;\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n    const delocalizedValue = numberStringFormatter.delocalize(value);\n    if (nativeEvent.inputType === \"insertFromPaste\") {\n      if (\n        !isValidNumber(delocalizedValue) ||\n        (this.integer && (delocalizedValue.includes(\"e\") || delocalizedValue.includes(\".\")))\n      ) {\n        nativeEvent.preventDefault();\n      }\n      this.setNumberValue({\n        nativeEvent,\n        origin: \"user\",\n        value: parseNumberString(delocalizedValue),\n      });\n      this.childNumberEl.value = this.displayedValue;\n    } else {\n      this.setNumberValue({\n        nativeEvent,\n        origin: \"user\",\n        value: delocalizedValue,\n      });\n    }\n  };\n\n  private inputNumberKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      event.preventDefault();\n      if (event.key === \"Backspace\" || event.key === \"Delete\") {\n        this.clearInputValue(event);\n      }\n      return;\n    }\n\n    if (event.key === \"ArrowUp\") {\n      /* prevent default behavior of moving cursor to the beginning of the input when holding down ArrowUp */\n      event.preventDefault();\n      this.nudgeNumberValue(\"up\", event);\n      return;\n    }\n    if (event.key === \"ArrowDown\") {\n      this.nudgeNumberValue(\"down\", event);\n      return;\n    }\n    const supportedKeys = [\n      ...numberKeys,\n      \"ArrowLeft\",\n      \"ArrowRight\",\n      \"Backspace\",\n      \"Delete\",\n      \"Enter\",\n      \"Escape\",\n      \"Tab\",\n    ];\n    if (event.altKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n    const isShiftTabEvent = event.shiftKey && event.key === \"Tab\";\n    if (supportedKeys.includes(event.key) || isShiftTabEvent) {\n      if (event.key === \"Enter\") {\n        this.emitChangeIfUserModified();\n      }\n      return;\n    }\n\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    if (event.key === numberStringFormatter.decimal && !this.integer) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.indexOf(numberStringFormatter.decimal) === -1) {\n        return;\n      }\n    }\n    if (/[eE]/.test(event.key) && !this.integer) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && !/[eE]/.test(this.childNumberEl.value)) {\n        return;\n      }\n    }\n\n    if (event.key === \"-\") {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.split(\"-\").length <= 2) {\n        return;\n      }\n    }\n    event.preventDefault();\n  };\n\n  private nudgeNumberValue = (\n    direction: NumberNudgeDirection,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void => {\n    if (nativeEvent instanceof KeyboardEvent && nativeEvent.repeat) {\n      return;\n    }\n\n    const inputMax = this.maxString ? parseFloat(this.maxString) : null;\n    const inputMin = this.minString ? parseFloat(this.minString) : null;\n    const valueNudgeDelayInMs = 150;\n\n    this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n\n    if (this.nudgeNumberValueIntervalId) {\n      window.clearInterval(this.nudgeNumberValueIntervalId);\n    }\n    let firstValueNudge = true;\n    this.nudgeNumberValueIntervalId = window.setInterval(() => {\n      if (firstValueNudge) {\n        firstValueNudge = false;\n        return;\n      }\n\n      this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n    }, valueNudgeDelayInMs);\n  };\n\n  private nudgeButtonPointerUpHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private nudgeButtonPointerOutHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private nudgeButtonPointerDownHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    event.preventDefault();\n    const direction = (event.target as HTMLDivElement).dataset.adjustment as NumberNudgeDirection;\n    if (!this.disabled) {\n      this.nudgeNumberValue(direction, event);\n    }\n  };\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    syncHiddenFormInput(\"number\", this, input);\n  }\n\n  private onHiddenFormInputInput = (event: Event): void => {\n    if ((event.target as HTMLInputElement).name === this.name) {\n      this.setNumberValue({\n        value: (event.target as HTMLInputElement).value,\n        origin: \"direct\",\n      });\n    }\n    this.setFocus();\n    event.stopPropagation();\n  };\n\n  private setChildNumberElRef = (el: HTMLInputElement) => {\n    this.childNumberEl = el;\n  };\n\n  private setDisabledAction(): void {\n    const slottedActionEl = getSlotted(this.el, \"action\");\n\n    if (!slottedActionEl) {\n      return;\n    }\n\n    if (this.disabled) {\n      if (slottedActionEl.getAttribute(\"disabled\") == null) {\n        this.slottedActionElDisabledInternally = true;\n      }\n      slottedActionEl.setAttribute(\"disabled\", \"\");\n    } else if (this.slottedActionElDisabledInternally) {\n      slottedActionEl.removeAttribute(\"disabled\");\n      this.slottedActionElDisabledInternally = false;\n    }\n  }\n\n  private setInputNumberValue = (newInputValue: string): void => {\n    if (!this.childNumberEl) {\n      return;\n    }\n    this.childNumberEl.value = newInputValue;\n  };\n\n  private setPreviousEmittedNumberValue = (value: string): void => {\n    this.previousEmittedNumberValue = this.normalizeValue(value);\n  };\n\n  private normalizeValue(value: string): string {\n    return isValidNumber(value) ? value : \"\";\n  }\n\n  private setPreviousNumberValue = (value: string): void => {\n    this.previousValue = this.normalizeValue(value);\n  };\n\n  private setNumberValue = ({\n    committing = false,\n    nativeEvent,\n    origin,\n    previousValue,\n    value,\n  }: {\n    committing?: boolean;\n    nativeEvent?: MouseEvent | KeyboardEvent | InputEvent;\n    origin: SetValueOrigin;\n    previousValue?: string;\n    value: string;\n  }): void => {\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    const isValueDeleted =\n      this.previousValue?.length > value.length || this.value?.length > value.length;\n\n    const valueHandleInteger = this.integer ? value.replace(/[e.]/g, \"\") : value;\n\n    const hasTrailingDecimalSeparator =\n      valueHandleInteger.charAt(valueHandleInteger.length - 1) === \".\";\n\n    const sanitizedValue =\n      hasTrailingDecimalSeparator && isValueDeleted\n        ? valueHandleInteger\n        : sanitizeNumberString(valueHandleInteger);\n\n    const newValue =\n      value && !sanitizedValue\n        ? isValidNumber(this.previousValue)\n          ? this.previousValue\n          : \"\"\n        : sanitizedValue;\n\n    let newLocalizedValue = numberStringFormatter.localize(newValue);\n\n    if (origin !== \"connected\" && !hasTrailingDecimalSeparator) {\n      newLocalizedValue = addLocalizedTrailingDecimalZeros(\n        newLocalizedValue,\n        newValue,\n        numberStringFormatter,\n      );\n    }\n\n    // adds localized trailing decimal separator\n    this.displayedValue =\n      hasTrailingDecimalSeparator && isValueDeleted\n        ? `${newLocalizedValue}${numberStringFormatter.decimal}`\n        : newLocalizedValue;\n\n    this.setPreviousNumberValue(previousValue ?? this.value);\n    this.previousValueOrigin = origin;\n    this.userChangedValue = origin === \"user\" && this.value !== newValue;\n    // don't sanitize the start of negative/decimal numbers, but\n    // don't set value to an invalid number\n    this.value = [\"-\", \".\"].includes(newValue) ? \"\" : newValue;\n\n    if (origin === \"direct\") {\n      this.setInputNumberValue(newLocalizedValue);\n      this.setPreviousEmittedNumberValue(newLocalizedValue);\n    }\n\n    if (nativeEvent) {\n      const calciteInputNumberInputEvent = this.calciteInputNumberInput.emit();\n      if (calciteInputNumberInputEvent.defaultPrevented) {\n        this.value = this.previousValue;\n        this.displayedValue = numberStringFormatter.localize(this.previousValue);\n      } else if (committing) {\n        this.emitChangeIfUserModified();\n      }\n    }\n  };\n\n  private inputNumberKeyUpHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private warnAboutInvalidNumberValue(value: string): void {\n    if (value && !isValidNumber(value)) {\n      console.warn(`The specified value \"${value}\" cannot be parsed, or is out of range.`);\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const loader = (\n      <div class={CSS.loader}>\n        <calcite-progress label={this.messages.loading} type=\"indeterminate\" />\n      </div>\n    );\n\n    const inputClearButton = (\n      <button\n        aria-label={this.messages.clear}\n        class={CSS.clearButton}\n        disabled={this.disabled || this.readOnly}\n        onClick={this.clearInputValue}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n    const iconEl = (\n      <calcite-icon\n        class={CSS.inputIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.requestedIcon}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    const isHorizontalNumberButton = this.numberButtonType === \"horizontal\";\n\n    const numberButtonsHorizontalUp = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"up\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.nudgeButtonPointerDownHandler}\n        onPointerOut={this.nudgeButtonPointerOutHandler}\n        onPointerUp={this.nudgeButtonPointerUpHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-up\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsHorizontalDown = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"down\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.nudgeButtonPointerDownHandler}\n        onPointerOut={this.nudgeButtonPointerOutHandler}\n        onPointerUp={this.nudgeButtonPointerUpHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsVertical = (\n      <div class={CSS.numberButtonWrapper}>\n        {numberButtonsHorizontalUp}\n        {numberButtonsHorizontalDown}\n      </div>\n    );\n\n    const prefixText = <div class={CSS.prefix}>{this.prefixText}</div>;\n\n    const suffixText = <div class={CSS.suffix}>{this.suffixText}</div>;\n\n    const childEl = (\n      <input\n        aria-label={getLabelText(this)}\n        autocomplete={this.autocomplete}\n        autofocus={this.el.autofocus ? true : null}\n        defaultValue={this.defaultValue}\n        disabled={this.disabled ? true : null}\n        enterKeyHint={this.el.enterKeyHint || this.el.getAttribute(\"enterkeyhint\")}\n        inputMode={this.el.inputMode || this.el.getAttribute(\"inputmode\") || \"decimal\"}\n        key=\"localized-input\"\n        maxLength={this.maxLength}\n        minLength={this.minLength}\n        name={undefined}\n        onBlur={this.inputNumberBlurHandler}\n        onFocus={this.inputNumberFocusHandler}\n        onInput={this.inputNumberInputHandler}\n        onKeyDown={this.inputNumberKeyDownHandler}\n        onKeyUp={this.inputNumberKeyUpHandler}\n        placeholder={this.placeholder || \"\"}\n        readOnly={this.readOnly}\n        ref={this.setChildNumberElRef}\n        type=\"text\"\n        value={this.displayedValue}\n      />\n    );\n\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div class={{ [CSS.inputWrapper]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" }}>\n            {this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalDown\n              : null}\n            {this.prefixText ? prefixText : null}\n            <div class={CSS.wrapper}>\n              {childEl}\n              {this.isClearable ? inputClearButton : null}\n              {this.requestedIcon ? iconEl : null}\n              {this.loading ? loader : null}\n            </div>\n            <div class={CSS.actionWrapper}>\n              <slot name={SLOTS.action} />\n            </div>\n            {this.numberButtonType === \"vertical\" && !this.readOnly ? numberButtonsVertical : null}\n            {this.suffixText ? suffixText : null}\n            {this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalUp\n              : null}\n            <HiddenFormInputSlot component={this} />\n          </div>\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n",":host {\n  @apply block;\n}\n\n// scales\n:host([scale=\"s\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n2h h-6 px-2;\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-6;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.6\");\n    min-inline-size: theme(\"spacing.6\");\n  }\n}\n\n:host([scale=\"m\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n1h h-8 px-3;\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-8;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.8\");\n    min-inline-size: theme(\"spacing.8\");\n  }\n}\n\n:host([scale=\"l\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-0h h-11 px-4;\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-11;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.11\");\n    min-inline-size: theme(\"spacing.11\");\n  }\n}\n\n@include disabled();\n\ninput {\n  transition:\n    var(--calcite-animation-timing),\n    block-size 0,\n    outline-offset 0s;\n  -webkit-appearance: none;\n  @apply bg-foreground-1\n    box-border\n    flex\n    flex-1\n    font-inherit\n    font-normal\n    m-0\n    max-h-full\n    max-w-full\n    relative\n    rounded-none\n    text-color-1\n    text-ellipsis\n    w-full;\n\n  &:placeholder-shown {\n    @apply text-ellipsis;\n  }\n}\n\n// states\ninput {\n  @apply text-color-1\n    border-color-input\n    border\n    border-solid;\n  &::placeholder,\n  &:-ms-input-placeholder,\n  &::-ms-input-placeholder {\n    @apply text-color-3 font-normal;\n  }\n}\ninput:focus {\n  @apply border-color-brand text-color-1;\n}\ninput[readonly] {\n  @apply bg-background font-medium;\n}\ninput[readonly]:focus {\n  @apply text-color-1;\n}\ncalcite-icon {\n  @apply text-color-3;\n}\n\n//focus\ninput {\n  @apply focus-base;\n}\n\ninput:focus {\n  @apply focus-inset;\n}\n\n:host([status=\"invalid\"]) {\n  & input {\n    @apply border-color-danger;\n  }\n  & input:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n// ICONS\n\n// position icons\n\n:host([scale=\"s\"]) .icon {\n  inset-inline-start: theme(\"spacing.2\");\n}\n\n:host([scale=\"m\"]) .icon {\n  inset-inline-start: theme(\"spacing.3\");\n}\n\n:host([scale=\"l\"]) .icon {\n  inset-inline-start: theme(\"spacing.4\");\n}\n\n// position placeholder/value text in relation to icons\n\n:host([icon][scale=\"s\"]) input {\n  padding-inline-start: theme(\"padding.8\");\n}\n\n:host([icon][scale=\"m\"]) input {\n  padding-inline-start: theme(\"padding.10\");\n}\n\n:host([icon][scale=\"l\"]) input {\n  padding-inline-start: theme(\"padding.14\");\n}\n\n// positioning wrapper for icon and loader\n\n.element-wrapper {\n  @apply relative\n    order-3\n    inline-flex\n    flex-1\n    items-center;\n}\n\n.icon {\n  @apply transition-default\n    pointer-events-none\n    absolute\n    block\n\n    z-default; // needed for firefox to display the icon properly\n}\n\n.clear-button {\n  pointer-events: initial;\n  @apply focus-base\n    border-color-input\n    bg-foreground-1\n    order-4\n    m-0\n    box-border\n    flex\n    min-h-full\n    cursor-pointer\n    items-center\n    justify-center\n    self-stretch\n    border\n    border-solid;\n\n  border-inline-start-width: theme(\"borderWidth.0\");\n\n  &:hover {\n    @apply bg-foreground-2 transition-default;\n    calcite-icon {\n      @apply text-color-1 transition-default;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &:disabled {\n    @apply opacity-disabled;\n  }\n}\n\n// loading\n.loader {\n  inset-block-start: 1px;\n  inset-inline: 1px;\n  @apply pointer-events-none\n    absolute\n    block;\n}\n\n// slotted action\n.action-wrapper {\n  @apply order-7 flex;\n}\n\n// prefix and suffix\n.prefix,\n.suffix {\n  @apply border-color-input\n    bg-background\n    text-color-2\n    box-border\n    flex\n    h-auto\n    min-h-full\n    select-none\n    content-center\n    items-center\n    break-words\n    border\n    border-solid\n    font-medium\n    leading-none;\n}\n\n.prefix {\n  @apply order-2;\n  border-inline-end-width: theme(\"borderWidth.0\");\n}\n.suffix {\n  @apply order-5;\n  border-inline-start-width: theme(\"borderWidth.0\");\n}\n\n// alignment type\n:host([alignment=\"start\"]) {\n  & input {\n    text-align: start;\n  }\n}\n\n:host([alignment=\"end\"]) {\n  & input {\n    text-align: end;\n  }\n}\n\n.number-button-wrapper {\n  @apply transition-default\n    pointer-events-none\n    order-6\n    box-border\n    flex\n    flex-col;\n}\n\n:host([number-button-type=\"vertical\"]) .wrapper {\n  flex-direction: row;\n  display: flex;\n}\n\n:host([number-button-type=\"vertical\"]) {\n  & input {\n    @apply order-2;\n  }\n}\n\n:host([number-button-type=\"horizontal\"]) .calcite--rtl {\n  & .number-button-item[data-adjustment=\"down\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n  & .number-button-item[data-adjustment=\"up\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n}\n\n.number-button-item.number-button-item--horizontal {\n  &[data-adjustment=\"down\"],\n  &[data-adjustment=\"up\"] {\n    @apply order-1\n      max-h-full\n      min-h-full\n      self-stretch;\n    & calcite-icon {\n      transform: rotate(90deg);\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"down\"] {\n  @apply border-color-input\n    border\n    border-solid;\n  border-inline-end-width: theme(\"borderWidth.0\");\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"up\"] {\n  @apply order-5;\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"up\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"] {\n  @apply border-t-0;\n}\n\n.number-button-item {\n  max-block-size: 50%;\n  min-block-size: 50%;\n  pointer-events: initial;\n  @apply border-color-input\n    bg-foreground-1\n    transition-default\n    m-0\n    box-border\n    flex\n    cursor-pointer\n    items-center\n    self-center\n    border\n    border-solid\n    py-0\n    px-2;\n  border-inline-start-width: theme(\"borderWidth.0\");\n  & calcite-icon {\n    @apply transition-default pointer-events-none;\n  }\n  &:focus {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n  }\n  &:disabled {\n    @apply pointer-events-none;\n  }\n}\n\n.wrapper {\n  @apply relative\n    flex\n    flex-row\n    items-center;\n}\n\n:host(.no-bottom-border) input {\n  @apply border-b-0;\n}\n\n:host(.border-top-color-one) input {\n  @apply border-t-color-1;\n}\n\n// input needed for higher specificity of these overrides\ninput {\n  &.inline-child {\n    @apply transition-default bg-transparent;\n    .editing-enabled {\n      background-color: inherit;\n    }\n  }\n\n  &.inline-child:not(.editing-enabled) {\n    @apply border-color-transparent\n    flex\n    cursor-pointer text-ellipsis;\n    padding-inline-start: 0;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n"],"names":["CSS","SLOTS","InputNumber","proxyCustomElement","HTMLElement","previousValueOrigin","mutationObserver","createObserver","this","setDisabledAction","userChangedValue","keyDownHandler","event","readOnly","disabled","defaultPrevented","isClearable","key","clearInputValue","preventDefault","submitForm","nativeEvent","setNumberValue","committing","origin","value","emitChangeIfUserModified","previousEmittedNumberValue","calciteInputNumberChange","emit","setPreviousEmittedNumberValue","inputNumberBlurHandler","window","clearInterval","nudgeNumberValueIntervalId","calciteInternalInputNumberBlur","clickHandler","slottedActionEl","getSlotted","el","target","setFocus","inputNumberFocusHandler","calciteInternalInputNumberFocus","inputNumberInputHandler","numberStringFormatter","numberFormatOptions","locale","effectiveLocale","numberingSystem","useGrouping","groupSeparator","delocalizedValue","delocalize","inputType","isValidNumber","integer","includes","parseNumberString","childNumberEl","displayedValue","inputNumberKeyDownHandler","nudgeNumberValue","supportedKeys","numberKeys","altKey","ctrlKey","metaKey","isShiftTabEvent","shiftKey","decimal","indexOf","test","split","length","direction","KeyboardEvent","repeat","inputMax","maxString","parseFloat","inputMin","minString","incrementOrDecrementNumberValue","firstValueNudge","setInterval","nudgeButtonPointerUpHandler","isPrimaryPointerButton","nudgeButtonPointerOutHandler","nudgeButtonPointerDownHandler","dataset","adjustment","onHiddenFormInputInput","name","stopPropagation","setChildNumberElRef","setInputNumberValue","newInputValue","normalizeValue","setPreviousNumberValue","previousValue","_ref","_this$previousValue","_this$value","isValueDeleted","valueHandleInteger","replace","hasTrailingDecimalSeparator","charAt","sanitizedValue","sanitizeNumberString","newValue","newLocalizedValue","localize","addLocalizedTrailingDecimalZeros","concat","calciteInputNumberInput","inputNumberKeyUpHandler","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","handleGlobalAttributesChanged","forceUpdate","disabledWatcher","maxWatcher","_this$max","max","toString","minWatcher","_this$min","min","onMessagesChange","valueWatcher","warnAboutInvalidNumberValue","updateRequestedIcon","requestedIcon","setRequestedIcon","icon","clearable","effectiveLocaleWatcher","updateMessages","connectedCallback","_this$mutationObserve","connectInteractive","connectLocalized","connectMessages","inlineEditableEl","closest","editingEnabled","connectLabel","connectForm","observe","childList","addEventListener","internalHiddenInputInputEvent","componentDidLoad","setComponentLoaded","disconnectedCallback","_this$mutationObserve2","disconnectInteractive","disconnectLabel","disconnectForm","disconnectLocalized","disconnectMessages","disconnect","removeEventListener","componentWillLoad","_this$max2","_this$min2","setUpLoadableComponent","setUpMessages","componentShouldUpdate","oldValue","property","componentDidRender","updateHostInteraction","_this$childNumberEl","componentFocusable","focus","selectText","_this$childNumberEl2","select","onLabelClick","stepHandleInteger","step","Math","round","inputStep","abs","nudgedValue","BigDecimal","add","finalValue","isNaN","subtract","isNegative","syncHiddenFormInput","input","getAttribute","slottedActionElDisabledInternally","setAttribute","removeAttribute","console","warn","render","dir","getElementDir","loader","h","class","label","messages","loading","type","inputClearButton","clear","onClick","tabIndex","scale","getIconScale","iconEl","flipRtl","iconFlipRtl","isHorizontalNumberButton","numberButtonType","numberButtonsHorizontalUp","onPointerDown","onPointerOut","onPointerUp","numberButtonsHorizontalDown","numberButtonsVertical","prefixText","suffixText","childEl","getLabelText","autocomplete","autofocus","defaultValue","enterKeyHint","inputMode","maxLength","minLength","undefined","onBlur","onFocus","onInput","onKeyDown","onKeyUp","placeholder","ref","Host","InteractiveContainer","CSS_UTILITY","rtl","HiddenFormInputSlot","component","validationMessage","status","Validation","validationIcon","message"],"sourceRoot":""}