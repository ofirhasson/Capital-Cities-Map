{"version":3,"file":"static/js/22200.3a1be1d8.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/map-components/dist/esm/arcgis-expand.entry.js","../node_modules/@arcgis/map-components/dist/esm/useWidget-9b153437.js"],"sourcesContent":["/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.7\n */\nimport { r as registerInstance, c as createEvent, g as getElement } from './index-7d33cc26.js';\nimport { G as newWidgetsExpand } from './index-d2df902e.js';\nimport { u as useControllerManager } from './index-c99fc80c.js';\nimport { m as makeWidgetController } from './useWidget-9b153437.js';\nimport './component-utils-de9339fe.js';\n\nconst expandCss = \"arcgis-expand{pointer-events:auto}arcgis-expand>.esri-expand__content--expanded{background-color:var(--calcite-color-background)}\";\nconst ArcgisExpandStyle0 = expandCss;\n\nconst useExpandWidget = makeWidgetController(newWidgetsExpand);\nconst ArcgisExpand = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.arcgisReady = createEvent(this, \"arcgisReady\", 7);\n        this.manager = useControllerManager(this);\n        this.widget = useExpandWidget(this);\n        this.viewModel = this.widget.viewModel;\n        this.autoDestroyDisabled = false;\n        this.icon = this.widget.icon;\n        this.content = this.widget.content;\n        this.label = this.widget.label;\n        this.autoCollapse = this.widget.autoCollapse;\n        this.closeOnEsc = this.widget.closeOnEsc;\n        this.collapseIcon = this.widget.collapseIcon;\n        this.collapseTooltip = this.widget.collapseTooltip;\n        this.expanded = this.widget.expanded;\n        this.expandIcon = this.widget.expandIcon;\n        this.expandTooltip = this.widget.expandTooltip;\n        this.group = this.widget.group;\n        this.iconNumber = this.widget.iconNumber;\n        this.mode = this.widget.mode;\n        this.placement = this.widget.placement;\n        this.position = \"top-right\";\n        this.referenceElement = undefined;\n        /**\n         * This refers to the content inside the expand's popup. This is different\n         * from this.el.childElem which refers to the expand's UI (which in part\n         * includes the popup with this.content)\n         */\n        this.content ?? (this.content = document.createElement(\"div\"));\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Permanently destroy the component */\n    async destroy() {\n        await this.manager.destroy();\n    }\n    async collapse() {\n        this.widget?.collapse();\n    }\n    async expand() {\n        this.widget?.expand();\n    }\n    async toggle() {\n        if (this.expanded) {\n            await this.collapse();\n        }\n        else {\n            await this.expand();\n        }\n    }\n    get el() { return getElement(this); }\n};\nArcgisExpand.style = ArcgisExpandStyle0;\n\nexport { ArcgisExpand as arcgis_expand };\n","/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.7\n */\nimport { p as proxyExports, A as AccessorController, a as accessorSupport } from './index-c99fc80c.js';\nimport './index-d2df902e.js';\nimport { a as attachToParent } from './component-utils-de9339fe.js';\n\n// FEATURE: if inside of arcgis-expand/arcgis-placement, sync autoDestroyDisabled prop with that of Expand\n/**\n * A controller for a wrapped JS API Widget\n * - loads the widget\n * - initializes the widget with the component's properties\n * - does two-way binding between widget and component properties\n * - re-emits the widgets's events on the component\n * - type-checks everything âœ¨\n *\n * Documentation:\n * https://devtopia.esri.com/WebGIS/arcgis-web-components/blob/main/packages/map-components/src/controllers/useWidget.md\n */\nconst makeWidgetController = (loadWidget, _options) => (component, options) => proxy(component, loadWidget, options);\nclass WidgetController extends AccessorController {\n    constructor(component, _loadAccessor, \n    // Disable covariance check\n    // eslint-disable-next-line @typescript-eslint/method-signature-style\n    _options) {\n        super(component, _loadAccessor, _options);\n        this._watchedViewModelProperties = new Map();\n        this._watchedVisibleElementsProperties = {};\n        this._isBindingViewModel = { value: true };\n        Object.defineProperty(this.exports, \"viewModel\", {\n            value: accessorSupport.makeGetterProxy(component, this._watchedViewModelProperties, this._isBindingViewModel),\n        });\n        Object.defineProperty(this.exports, \"visibleElements\", {\n            value: this._makeVisibleElementsBinder(),\n        });\n    }\n    hostConnected() {\n        super.hostConnected();\n        /*\n         * We are done binding props to properties - any accesses after this should\n         * be treated as normal property accesses\n         */\n        this._isBindingViewModel.value = false;\n        if (this.component.manager.didLoadCalled) {\n            attachToParent(this.component);\n        }\n    }\n    async hostLoad() {\n        /*\n         * \"viewModel\" property might not have a @State(), so two-way binding might\n         * not work (and probably one way is fine)\n         */\n        this._watchedProperties.delete(\"viewModel\");\n        await super.hostLoad();\n        if (this.component.manager.destroyed) {\n            return;\n        }\n        this._watchMetaProperties();\n        accessorSupport.reEmitAccessorEvents(this, this._instance, this.reactiveUtils, \"widget\");\n        // Do one way watching for viewModel property\n        this.onLifecycle(() => this.reactiveUtils.watch(() => this._instance.viewModel, (newViewModel) => {\n            this.component.viewModel = newViewModel;\n        }, { initial: true }));\n        const viewModel = this._instance.viewModel;\n        if (typeof viewModel === \"object\") {\n            accessorSupport.reEmitAccessorEvents(this, viewModel, this.reactiveUtils, \"viewModel\");\n            accessorSupport.watchComponentUpdates(this, viewModel, this._watchedViewModelProperties);\n            accessorSupport.watchAccessorUpdates(this, viewModel, this._watchedViewModelProperties);\n        }\n        else if (this._watchedViewModelProperties.size > 0) {\n            throw new Error(`The widget does not have a viewModel to bind to. Tried to bind the following properties: ${Array.from(this._watchedViewModelProperties.keys()).join(\", \")}`);\n        }\n        const visibleElements = Object.entries(this._watchedVisibleElementsProperties);\n        if (visibleElements.length > 0) {\n            this.onLifecycle(() => visibleElements.map(([prop, propertyChain]) => {\n                let base = this._instance.visibleElements ?? {};\n                let defaultVisible = undefined;\n                for (const key of propertyChain.slice(0, -1)) {\n                    if (typeof base[key] === \"object\" && base[key] !== null) {\n                        base = base[key];\n                    }\n                    else {\n                        defaultVisible = Boolean(base[key]);\n                        break;\n                    }\n                }\n                if (defaultVisible === undefined) {\n                    defaultVisible = Boolean(base[propertyChain.slice(-1)[0]] ?? true);\n                }\n                prop.startsWith(\"hide\") ? !defaultVisible : defaultVisible;\n                const hideShowInName = prop.startsWith(\"hide\") || prop.startsWith(\"show\");\n                const shouldFlip = hideShowInName ? prop.startsWith(\"hide\") : defaultVisible;\n                const genericComponent = this.component;\n                if (typeof genericComponent[prop] === \"boolean\") {\n                    this._updateWidgetVisibleElement(propertyChain, genericComponent[prop], shouldFlip);\n                }\n                else {\n                    genericComponent[prop] = false;\n                }\n                return this.watch(prop, (rawVisible) => this._updateWidgetVisibleElement(propertyChain, rawVisible, shouldFlip));\n            }));\n        }\n    }\n    _updateWidgetVisibleElement(propertyChain, propValue, shouldFlip) {\n        let base = this._instance.visibleElements ?? {};\n        for (const key of propertyChain.slice(0, -1)) {\n            if (typeof base[key] !== \"object\" || base[key] === null) {\n                base[key] = {};\n            }\n            base = base[key];\n        }\n        const visible = Boolean(shouldFlip ? !propValue : propValue);\n        base[propertyChain.at(-1)] = visible;\n    }\n    hostLoaded() {\n        const { el } = this.component;\n        /*\n         * On hot reloading, new this.component instance is created (so properties\n         * on it are reset) but this.component.el instance is preserved (so\n         * properties on it are preserved). Since childElem is re-parented on 1st\n         * hostLoad(), for it to be accessible on the 2nd hostLoad() (hot reload),\n         * we have to store it's reference on the el, rather than component\n         */\n        el.childElem ?? (el.childElem = document.createElement(\"div\"));\n        this._instance.container = el.childElem;\n        let arcgisReadyEmitted = false;\n        // Check if view was already provided by the user\n        const currentView = this.component.el.view;\n        // Define the \"view\" property to allow component usage with MapView/SceneView\n        Object.defineProperty(this.component.el, \"view\", {\n            get: () => this._instance.view ?? this._instance.viewModel?.view,\n            set: (view) => {\n                if (!(\"view\" in this._instance) && typeof this._instance.viewModel === \"object\") {\n                    this._instance.viewModel.view = view;\n                }\n                else {\n                    this._instance.view = view;\n                }\n                this._watchViewDestroy();\n                if (!arcgisReadyEmitted) {\n                    arcgisReadyEmitted = true;\n                    this.component.arcgisReady.emit();\n                }\n            },\n            configurable: true,\n            enumerable: true,\n        });\n        if (currentView) {\n            this._instance.view = currentView;\n        }\n        if (this.component.el.isConnected) {\n            attachToParent(this.component);\n            this._watchViewDestroy();\n        }\n    }\n    hostDisconnected() {\n        // If view is already destroyed, view.ui might be undefined\n        if (typeof this.component.el.childElem === \"object\") {\n            this.component.el.view?.ui?.remove(this.component.el.childElem);\n        }\n    }\n    hostDestroy() {\n        super.hostDestroy();\n        this._watchViewDestroyHandle?.remove();\n    }\n    _watchMetaProperties() {\n        this.watch(\"position\", (position) => {\n            if (this.component.el.childElem != null && typeof position === \"string\") {\n                attachToParent(this.component);\n            }\n        });\n        this.watch(\"referenceElement\", () => attachToParent(this.component));\n    }\n    _makeVisibleElementsBinder() {\n        return new Proxy({}, {\n            has: (target, prop) => typeof prop === \"string\" || Reflect.has(target, prop),\n            get: (target, prop) => {\n                // Possibly called by the JS engine\n                if (typeof prop === \"symbol\" || prop in Promise.prototype) {\n                    return Reflect.get(target, prop);\n                }\n                const propertyChain = [prop];\n                const proxy = this._makeRecursiveProxy(propertyChain);\n                return this.component.manager.trackPropKey((resolvedKey) => {\n                    if (resolvedKey === undefined) {\n                        throw new Error(\"Unable to bind visibleElements property. Check for incorrect this.widget.visibleElements usage\");\n                    }\n                    this.component[resolvedKey] = false;\n                    this._watchedVisibleElementsProperties[resolvedKey] = propertyChain;\n                }, proxy);\n            },\n        });\n    }\n    _makeRecursiveProxy(propertyChain) {\n        const chain = new Proxy({}, {\n            get: (target, prop) => {\n                const value = Reflect.get(target, prop);\n                // Possibly called by the JS engine\n                if (typeof prop === \"symbol\" || prop in Promise.prototype) {\n                    return value;\n                }\n                propertyChain.push(prop);\n                return chain;\n            },\n        });\n        return chain;\n    }\n    /**\n     * Destroy the component if view gets destroyed. Note, that when view is\n     * destroyed, component disconnect is triggered, which will destroy the\n     * component in 1s but that can be too late, because in the meanwhile,\n     * a watcher on the widget/viewModel instance may get triggered, and throw\n     * an error if it's not able to access this.view.map or etc\n     * (happens in VersionManagementViewModel for example).\n     * We can't check for this in disconnectedCallback though as even though\n     * view.destroy() does trigger disconnect on all map-components, the\n     * view.destroyed is not yet set to true when disconnect is triggered.\n     */\n    _watchViewDestroy() {\n        this._watchViewDestroyHandle?.remove();\n        this._watchViewDestroyHandle = this.reactiveUtils.when(() => this.component.el.view?.destroyed === true, () => void this.component.destroy().catch(console.error), { sync: true });\n    }\n}\nconst proxy = proxyExports(WidgetController);\n\nexport { makeWidgetController as m };\n"],"names":["useExpandWidget","makeWidgetController","newWidgetsExpand","ArcgisExpand","constructor","hostRef","_this$content","registerInstance","this","arcgisReady","createEvent","manager","useControllerManager","widget","viewModel","autoDestroyDisabled","icon","content","label","autoCollapse","closeOnEsc","collapseIcon","collapseTooltip","expanded","expandIcon","expandTooltip","group","iconNumber","mode","placement","position","referenceElement","undefined","document","createElement","destroy","collapse","_this$widget","expand","_this$widget2","toggle","el","getElement","style","loadWidget","_options","component","options","proxy","WidgetController","AccessorController","_loadAccessor","super","_watchedViewModelProperties","Map","_watchedVisibleElementsProperties","_isBindingViewModel","value","Object","defineProperty","exports","accessorSupport","makeGetterProxy","_makeVisibleElementsBinder","hostConnected","didLoadCalled","attachToParent","hostLoad","_watchedProperties","delete","destroyed","_watchMetaProperties","reEmitAccessorEvents","_instance","reactiveUtils","onLifecycle","watch","newViewModel","initial","watchComponentUpdates","watchAccessorUpdates","size","Error","concat","Array","from","keys","join","visibleElements","entries","length","map","_ref","_this$_instance$visib","defaultVisible","prop","propertyChain","base","key","slice","Boolean","_base$propertyChain$s","startsWith","shouldFlip","genericComponent","_updateWidgetVisibleElement","rawVisible","propValue","_this$_instance$visib2","visible","at","hostLoaded","_el$childElem","childElem","container","arcgisReadyEmitted","currentView","view","get","_this$_instance$view","_this$_instance$viewM","set","_watchViewDestroy","emit","configurable","enumerable","isConnected","hostDisconnected","_this$component$el$vi","ui","remove","hostDestroy","_this$_watchViewDestr","_watchViewDestroyHandle","Proxy","has","target","Reflect","Promise","prototype","_makeRecursiveProxy","trackPropKey","resolvedKey","chain","push","_this$_watchViewDestr2","when","_this$component$el$vi2","catch","console","error","sync","proxyExports"],"sourceRoot":""}