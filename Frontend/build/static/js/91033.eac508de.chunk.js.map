{"version":3,"file":"static/js/91033.eac508de.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/map-components/dist/esm/arcgis-scene.entry.js","../node_modules/@arcgis/map-components/dist/esm/chunk-PVEVZB4O-2c3b8893.js"],"sourcesContent":["/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.7\n */\nimport { r as registerInstance, c as createEvent, h, g as getElement } from './index-7d33cc26.js';\nimport { l as load } from './chunk-PVEVZB4O-2c3b8893.js';\nimport { u as useControllerManager, a as accessorSupport, m as makeAccessorController } from './index-c99fc80c.js';\nimport { i as importCoreReactiveUtils, a0 as newWebScene, a1 as newViewsSceneView } from './index-d2df902e.js';\nimport { c as isNotSameCamera, p as parseCenter, e as isNotSameEnvironment, i as isNotSameViewpoint } from './component-utils-de9339fe.js';\n\nconst sceneCss = \".arcgis-scene{padding:0;margin:0;height:100%;width:100%}\";\nconst ArcgisSceneStyle0 = sceneCss;\n\nconst useWebScene = makeAccessorController(newWebScene);\nconst useSceneView = makeAccessorController(newViewsSceneView);\nconst ArcgisScene = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.arcgisViewReadyChange = createEvent(this, \"arcgisViewReadyChange\", 7);\n        this.arcgisViewChange = createEvent(this, \"arcgisViewChange\", 7);\n        this.arcgisViewClick = createEvent(this, \"arcgisViewClick\", 7);\n        this.arcgisViewDoubleClick = createEvent(this, \"arcgisViewDoubleClick\", 7);\n        this.arcgisViewDrag = createEvent(this, \"arcgisViewDrag\", 7);\n        this.arcgisViewHold = createEvent(this, \"arcgisViewHold\", 7);\n        this.arcgisViewImmediateClick = createEvent(this, \"arcgisViewImmediateClick\", 7);\n        this.arcgisViewImmediateDoubleClick = createEvent(this, \"arcgisViewImmediateDoubleClick\", 7);\n        this.arcgisViewKeyDown = createEvent(this, \"arcgisViewKeyDown\", 7);\n        this.arcgisViewKeyUp = createEvent(this, \"arcgisViewKeyUp\", 7);\n        this.arcgisViewLayerviewCreate = createEvent(this, \"arcgisViewLayerviewCreate\", 7);\n        this.arcgisViewLayerviewCreateError = createEvent(this, \"arcgisViewLayerviewCreateError\", 7);\n        this.arcgisViewLayerviewDestroy = createEvent(this, \"arcgisViewLayerviewDestroy\", 7);\n        this.arcgisViewMouseWheel = createEvent(this, \"arcgisViewMouseWheel\", 7);\n        this.arcgisViewPointerDown = createEvent(this, \"arcgisViewPointerDown\", 7);\n        this.arcgisViewPointerEnter = createEvent(this, \"arcgisViewPointerEnter\", 7);\n        this.arcgisViewPointerLeave = createEvent(this, \"arcgisViewPointerLeave\", 7);\n        this.arcgisViewPointerMove = createEvent(this, \"arcgisViewPointerMove\", 7);\n        this.arcgisViewPointerUp = createEvent(this, \"arcgisViewPointerUp\", 7);\n        this.manager = useControllerManager(this);\n        this.reactiveUtils = load(importCoreReactiveUtils);\n        /*\n         * This WebMap will be created only if user did not provide a map. Otherwise,\n         * it will be equal to this.view.map\n         */\n        this._map = useWebScene(this, { editConstructorProperties: this._editMapProperties });\n        //--------------------------------------------------------------------------\n        //\n        //  Private Methods\n        //\n        //--------------------------------------------------------------------------\n        this._setChildElement = (el) => {\n            this.el.childElem = el;\n        };\n        this.autoDestroyDisabled = false;\n        this.view = this.manager.readonly(useSceneView(this, { editConstructorProperties: this._editViewProperties }));\n        this.map = this.view.map;\n        this.allLayerViews = this.view.allLayerViews;\n        this.alphaCompositingEnabled = this.view.alphaCompositingEnabled;\n        this.analyses = this.view.analyses;\n        this.basemapView = this.view.basemapView;\n        this.basemap = this._map.basemap;\n        this.camera = this.manager.getSet(undefined, {\n            get: () => this.view.camera,\n            set: (newValue, oldValue) => (isNotSameCamera(oldValue, newValue) ? newValue : oldValue),\n        });\n        this.center = this.manager.getSet(undefined, {\n            get: (value) => this.view.center ?? value,\n            set: (newValue) => {\n                const parsed = parseCenter(newValue, this.ready ? this.view : undefined);\n                if (!this.ready) {\n                    return parsed;\n                }\n                this.view.center = parsed;\n                return this.view.center;\n            },\n        });\n        this.clippingArea = this.manager.getSet(this.view.clippingArea, {\n            set: (newValue, oldValue) => (oldValue?.equals(newValue) ? oldValue : newValue),\n        });\n        this.constraints = this.view.constraints;\n        this.environment = this.manager.getSet(this.view.environment, {\n            set: (newValue, oldValue) => (isNotSameEnvironment(oldValue, newValue) ? newValue : oldValue),\n        });\n        this.extent = this.manager.getSet(undefined, {\n            get: (extent) => this.view.extent ?? extent,\n            set: (newValue, oldValue) => {\n                if (!this.view.ready) {\n                    return newValue;\n                }\n                if (newValue && !oldValue?.equals(newValue)) {\n                    this.view.extent = newValue;\n                }\n                return this.view.extent;\n            },\n        });\n        this.fatalError = this.view.fatalError;\n        this.floors = this.view.floors;\n        this.gamepad = this.manager.getSet(undefined, {\n            get: () => (this.ready ? this.view.input.gamepad : undefined),\n            set: \"ignore\",\n        });\n        this.graphics = this.view.graphics;\n        this.ground = this._map.ground;\n        this.groundView = this.view.groundView;\n        this.highlightOptions = this.view.highlightOptions;\n        this.interacting = this.manager.getSet(false, {\n            get: () => this.view.interacting,\n            set: \"ignore\",\n        });\n        this.itemId = this.manager.getSet(undefined, {\n            get: (value) => this._map.portalItem?.id ?? value,\n            set: (newValue) => {\n                // SceneView does not react to WebScene.portalItem change, so we have to recreate it\n                if (this.ready) {\n                    accessorSupport\n                        .reCreate(this._map, this)\n                        .then(() => {\n                        this.view.map = this._map;\n                    })\n                        .catch(console.error);\n                }\n                return newValue;\n            },\n        });\n        this.layerViews = this.view.layerViews;\n        this.magnifier = this.view.magnifier;\n        this.navigating = this.manager.getSet(false, {\n            get: () => this.view.navigating,\n            set: \"ignore\",\n        });\n        this.navigation = this.view.navigation;\n        this.padding = this.view.padding;\n        this.performanceInfo = this.manager.getSet(undefined, {\n            get: () => this.view.performanceInfo,\n            set: \"ignore\",\n        });\n        this.popup = this.view.popup;\n        this.popupDisabled = this.view.popupEnabled;\n        this.qualityProfile = this.view.qualityProfile;\n        this.ready = this.view.ready;\n        this.resolution = this.manager.getSet(undefined, {\n            get: () => this.view.resolution,\n            set: \"ignore\",\n        });\n        this.scale = this.manager.getSet(undefined, {\n            get: (scale) => this.view.scale ?? scale,\n            set: (newValue) => {\n                if (this.ready) {\n                    this.view.scale = newValue;\n                }\n                return newValue;\n            },\n        });\n        this.spatialReference = this.manager.getSet(this.view.spatialReference, {\n            set: (newValue, oldValue) => (oldValue?.equals(newValue) ? oldValue : newValue),\n        });\n        this.stationary = this.manager.getSet(true, {\n            get: () => this.view.stationary,\n            set: \"ignore\",\n        });\n        this.suspended = this.view.suspended;\n        this.theme = this.view.theme;\n        this.timeExtent = this.view.timeExtent;\n        this.toMap = this.manager.readonly((...args) => this.view.toMap(...args));\n        this.toScreen = this.manager.readonly((...args) => this.view.toScreen(...args));\n        this.updating = this.view.updating;\n        this.viewingMode = this.view.viewingMode;\n        this.viewpoint = this.manager.getSet(undefined, {\n            get: () => this.view.viewpoint,\n            set: (newValue, oldValue) => (isNotSameViewpoint(oldValue, newValue) ? newValue : oldValue),\n        });\n        this.zoom = this.manager.getSet(undefined, {\n            get: (zoom) => this.view.zoom ?? zoom,\n            set: (newValue) => {\n                if (this.ready) {\n                    this.view.zoom = newValue;\n                }\n                return newValue;\n            },\n        });\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Methods\n    //\n    //--------------------------------------------------------------------------\n    /**\n     * Adds a layer to the map layers collection.\n     */\n    async addLayer(layer, index) {\n        this.map?.add(layer, index);\n    }\n    /**\n     * Adds a layer or array of layers to the map layers collection.\n     */\n    async addLayers(layers, index) {\n        this.map?.addMany(layers, index);\n    }\n    /**\n     * Closes the popup.\n     */\n    async closePopup() {\n        this.view?.closePopup();\n    }\n    /**\n     * Destroys the view, and any associated resources, including its map, popup, and UI elements.\n     */\n    async destroy() {\n        await this.manager.destroy();\n    }\n    /**\n     * Sets the view to a given target.\n     */\n    async goTo(target, options) {\n        return (await this.view?.goTo(target, options));\n    }\n    /**\n     * Returns hit test results from each layer that intersects the specified screen coordinates.\n     */\n    async hitTest(screenPoint, options) {\n        return await this.view?.hitTest(screenPoint, options);\n    }\n    /**\n     * Opens the popup at the given location with content defined either explicitly with content or driven\n     * from the PopupTemplate of input features.\n     */\n    async openPopup(options) {\n        await this.view?.openPopup(options);\n    }\n    /**\n     * Create a screenshot of the current view.\n     */\n    async takeScreenshot(options) {\n        return await this.view?.takeScreenshot(options);\n    }\n    /**\n     * Call this method to clear any fatal errors resulting from a lost WebGL context.\n     */\n    async tryFatalErrorRecovery() {\n        this.view?.tryFatalErrorRecovery();\n    }\n    async whenAnalysisView(analysis) {\n        return await this.view?.whenAnalysisView(analysis);\n    }\n    /**\n     * Gets the LayerView created on the view for the given layer.\n     */\n    async whenLayerView(layer) {\n        return await this.view?.whenLayerView(layer);\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    componentDidLoad() {\n        var _a;\n        (_a = this.view).container ?? (_a.container = this.el.childElem);\n        const { watch } = this.reactiveUtils;\n        this.manager.onLifecycle(() => [\n            watch(() => this.view.stationary, () => {\n                this.arcgisViewChange.emit();\n            }, { initial: true }),\n            watch(() => this.view.ready, () => this.arcgisViewReadyChange.emit(), { initial: this.view.ready }),\n        ]);\n        accessorSupport.reEmitAccessorEvents(this.manager, this.view, this.reactiveUtils, \"arcgisView\");\n    }\n    render() {\n        return h(\"div\", { key: '6ba77135d59e49e02877423619ed7dad7cd01d19', class: \"arcgis-scene\", ref: this._setChildElement });\n    }\n    _editMapProperties(mapProperties) {\n        // If user provided a map, use that. Otherwise, a WebScene will be created by usWebScene\n        if (this.map) {\n            this._map = this.map;\n        }\n        if (this.itemId) {\n            mapProperties.portalItem = { id: this.itemId };\n        }\n        else if (!this.basemap) {\n            mapProperties.basemap = \"topo-vector\";\n        }\n        if (!this.ground) {\n            mapProperties.ground = \"world-elevation\";\n        }\n        // See https://devtopia.esri.com/WebGIS/arcgis-web-components/issues/1244#issuecomment-4922799\n        const { basemap, ...rest } = mapProperties;\n        if (!basemap) {\n            mapProperties = rest;\n        }\n        return mapProperties;\n    }\n    _editViewProperties(properties) {\n        // Don't overwrite UI if a custom one was already provided\n        if (!this.view.ui) {\n            properties.ui = {\n                components: [\"attribution\"],\n            };\n        }\n        // If user did not provide a map, use the WebScene we created\n        properties.map ?? (properties.map = this._map);\n        /*\n         * The following properties are not two-way bound like others as they change\n         * too often. Instead, they are assigned to getters to always get freshest\n         * value without triggering re-render. But that means, useAccessor is not\n         * aware of these properties, so we have to pass them manually here:\n         */\n        const center = parseCenter(this.center, undefined);\n        if (center) {\n            properties.center = center;\n        }\n        if (this.viewpoint) {\n            properties.viewpoint = this.viewpoint;\n        }\n        if (this.scale !== undefined) {\n            properties.scale = this.scale;\n        }\n        if (this.extent) {\n            properties.extent = this.extent;\n        }\n        if (this.camera) {\n            properties.camera = this.camera;\n        }\n        if (this.zoom !== undefined) {\n            properties.zoom = this.zoom;\n        }\n        return properties;\n    }\n    get el() { return getElement(this); }\n};\nArcgisScene.style = ArcgisSceneStyle0;\n\nexport { ArcgisScene as arcgis_scene };\n","/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.7\n */\nimport { b as makeController } from './index-c99fc80c.js';\nimport { s as startLocaleObserver, g as getElementLocales } from './index-d2df902e.js';\n\n// src/load.ts\nvar load = (loader) => makeController(loader);\nvar makeT9nController = (getAssetPath) => ({ blocking = false, name } = {}) => (\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  makeController((component, controller) => {\n    controller.onLifecycle(\n      () => startLocaleObserver(\n        component.el,\n        getAssetPath(\"./assets\"),\n        ({ t9nLocale, t9nStrings, lang }) => {\n          controller.exports = { ...t9nStrings, _lang: lang, _t9nLocale: t9nLocale };\n          const label = t9nStrings.componentLabel ?? t9nStrings.widgetLabel;\n          if (typeof label === \"string\" && \"label\" in component && component.label == null) {\n            component.label ?? (component.label = label);\n          }\n        },\n        name\n      )\n    );\n    if (blocking) {\n      return controller.ready;\n    }\n    const locale = getElementLocales(component.el);\n    return { _lang: locale.lang, _t9nLocale: locale.t9nLocale };\n  })\n);\n\n// src/usePropertyChange.ts\nvar usePropertyChange = (_component) => propertyChangeController;\nvar eventName = \"arcgisPropertyChange\";\nvar propertyChangeController = (...toWatch) => makeController((component, controller) => {\n  const eventedComponent = component;\n  if (component.manager.isLit) {\n    eventedComponent[eventName] = {\n      emit: (payload) => {\n        const event = new CustomEvent(eventName, { detail: payload, cancelable: true });\n        component.el.dispatchEvent(event);\n        return event;\n      }\n    };\n  }\n  const eventEmitter = eventedComponent[eventName];\n  controller.onLoad(\n    () => controller.onLifecycle(\n      () => toWatch.map(\n        (name) => (\n          // Casting to 'el' to simplify dynamic prop name typing\n          component.manager.watch(name, () => eventEmitter.emit({ name }))\n        )\n      )\n    )\n  );\n  return eventEmitter;\n});\n\nexport { load as l, makeT9nController as m, usePropertyChange as u };\n"],"names":["useWebScene","makeAccessorController","newWebScene","useSceneView","newViewsSceneView","ArcgisScene","constructor","hostRef","_this","registerInstance","this","arcgisViewReadyChange","createEvent","arcgisViewChange","arcgisViewClick","arcgisViewDoubleClick","arcgisViewDrag","arcgisViewHold","arcgisViewImmediateClick","arcgisViewImmediateDoubleClick","arcgisViewKeyDown","arcgisViewKeyUp","arcgisViewLayerviewCreate","arcgisViewLayerviewCreateError","arcgisViewLayerviewDestroy","arcgisViewMouseWheel","arcgisViewPointerDown","arcgisViewPointerEnter","arcgisViewPointerLeave","arcgisViewPointerMove","arcgisViewPointerUp","manager","useControllerManager","reactiveUtils","load","importCoreReactiveUtils","_map","editConstructorProperties","_editMapProperties","_setChildElement","el","childElem","autoDestroyDisabled","view","readonly","_editViewProperties","map","allLayerViews","alphaCompositingEnabled","analyses","basemapView","basemap","camera","getSet","undefined","get","set","newValue","oldValue","isNotSameCamera","center","value","_this$view$center","parsed","parseCenter","ready","clippingArea","equals","constraints","environment","isNotSameEnvironment","extent","_this$view$extent","fatalError","floors","gamepad","input","graphics","ground","groundView","highlightOptions","interacting","itemId","_this$_map$portalItem","_this$_map$portalItem2","portalItem","id","accessorSupport","reCreate","then","catch","console","error","layerViews","magnifier","navigating","navigation","padding","performanceInfo","popup","popupDisabled","popupEnabled","qualityProfile","resolution","scale","_this$view$scale","spatialReference","stationary","suspended","theme","timeExtent","toMap","arguments","toScreen","updating","viewingMode","viewpoint","isNotSameViewpoint","zoom","_this$view$zoom","addLayer","layer","index","_this$map","add","addLayers","layers","_this$map2","addMany","closePopup","_this$view","destroy","goTo","target","options","_this$view2","hitTest","screenPoint","_this$view3","openPopup","_this$view4","takeScreenshot","_this$view5","tryFatalErrorRecovery","_this$view6","whenAnalysisView","analysis","_this$view7","whenLayerView","_this$view8","componentDidLoad","_a$container","_a","container","watch","onLifecycle","emit","initial","reEmitAccessorEvents","render","h","key","class","ref","mapProperties","rest","properties","_properties$map","ui","components","getElement","style","loader","makeController","makeT9nController","getAssetPath","blocking","name","length","component","controller","startLocaleObserver","_ref","_t9nStrings$component","t9nLocale","t9nStrings","lang","exports","_lang","_t9nLocale","label","componentLabel","widgetLabel","_component$label","locale","getElementLocales","usePropertyChange","_component","propertyChangeController","eventName","_len","toWatch","Array","_key","eventedComponent","isLit","payload","event","CustomEvent","detail","cancelable","dispatchEvent","eventEmitter","onLoad"],"sourceRoot":""}