{"version":3,"file":"static/js/81487.9eaf7640.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/map-components/dist/esm/arcgis-scale-bar.entry.js","../node_modules/@arcgis/map-components/dist/esm/useWidget-9b153437.js"],"sourcesContent":["/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.7\n */\nimport { r as registerInstance, c as createEvent, g as getElement } from './index-7d33cc26.js';\nimport { _ as newWidgetsScaleBar } from './index-d2df902e.js';\nimport { u as useControllerManager } from './index-c99fc80c.js';\nimport { m as makeWidgetController } from './useWidget-9b153437.js';\nimport './component-utils-de9339fe.js';\n\nconst scaleBarCss = \"arcgis-scale-bar{}\";\nconst ArcgisScaleBarStyle0 = scaleBarCss;\n\nconst useScaleBarWidget = makeWidgetController(newWidgetsScaleBar);\nconst ArcgisScaleBar = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.arcgisReady = createEvent(this, \"arcgisReady\", 7);\n        this.manager = useControllerManager(this);\n        this.widget = useScaleBarWidget(this);\n        this.viewModel = this.widget.viewModel;\n        this.autoDestroyDisabled = false;\n        this.referenceElement = undefined;\n        this.barStyle = this.widget.style;\n        this.unit = this.widget.unit;\n        this.icon = this.widget.icon;\n        this.label = this.widget.label;\n        this.position = \"bottom-left\";\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Methods\n    //\n    //--------------------------------------------------------------------------\n    /** Permanently destroy the component */\n    async destroy() {\n        await this.manager.destroy();\n    }\n    get el() { return getElement(this); }\n};\nArcgisScaleBar.style = ArcgisScaleBarStyle0;\n\nexport { ArcgisScaleBar as arcgis_scale_bar };\n","/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.30/esri/copyright.txt for details.\n * v4.30.7\n */\nimport { p as proxyExports, A as AccessorController, a as accessorSupport } from './index-c99fc80c.js';\nimport './index-d2df902e.js';\nimport { a as attachToParent } from './component-utils-de9339fe.js';\n\n// FEATURE: if inside of arcgis-expand/arcgis-placement, sync autoDestroyDisabled prop with that of Expand\n/**\n * A controller for a wrapped JS API Widget\n * - loads the widget\n * - initializes the widget with the component's properties\n * - does two-way binding between widget and component properties\n * - re-emits the widgets's events on the component\n * - type-checks everything âœ¨\n *\n * Documentation:\n * https://devtopia.esri.com/WebGIS/arcgis-web-components/blob/main/packages/map-components/src/controllers/useWidget.md\n */\nconst makeWidgetController = (loadWidget, _options) => (component, options) => proxy(component, loadWidget, options);\nclass WidgetController extends AccessorController {\n    constructor(component, _loadAccessor, \n    // Disable covariance check\n    // eslint-disable-next-line @typescript-eslint/method-signature-style\n    _options) {\n        super(component, _loadAccessor, _options);\n        this._watchedViewModelProperties = new Map();\n        this._watchedVisibleElementsProperties = {};\n        this._isBindingViewModel = { value: true };\n        Object.defineProperty(this.exports, \"viewModel\", {\n            value: accessorSupport.makeGetterProxy(component, this._watchedViewModelProperties, this._isBindingViewModel),\n        });\n        Object.defineProperty(this.exports, \"visibleElements\", {\n            value: this._makeVisibleElementsBinder(),\n        });\n    }\n    hostConnected() {\n        super.hostConnected();\n        /*\n         * We are done binding props to properties - any accesses after this should\n         * be treated as normal property accesses\n         */\n        this._isBindingViewModel.value = false;\n        if (this.component.manager.didLoadCalled) {\n            attachToParent(this.component);\n        }\n    }\n    async hostLoad() {\n        /*\n         * \"viewModel\" property might not have a @State(), so two-way binding might\n         * not work (and probably one way is fine)\n         */\n        this._watchedProperties.delete(\"viewModel\");\n        await super.hostLoad();\n        if (this.component.manager.destroyed) {\n            return;\n        }\n        this._watchMetaProperties();\n        accessorSupport.reEmitAccessorEvents(this, this._instance, this.reactiveUtils, \"widget\");\n        // Do one way watching for viewModel property\n        this.onLifecycle(() => this.reactiveUtils.watch(() => this._instance.viewModel, (newViewModel) => {\n            this.component.viewModel = newViewModel;\n        }, { initial: true }));\n        const viewModel = this._instance.viewModel;\n        if (typeof viewModel === \"object\") {\n            accessorSupport.reEmitAccessorEvents(this, viewModel, this.reactiveUtils, \"viewModel\");\n            accessorSupport.watchComponentUpdates(this, viewModel, this._watchedViewModelProperties);\n            accessorSupport.watchAccessorUpdates(this, viewModel, this._watchedViewModelProperties);\n        }\n        else if (this._watchedViewModelProperties.size > 0) {\n            throw new Error(`The widget does not have a viewModel to bind to. Tried to bind the following properties: ${Array.from(this._watchedViewModelProperties.keys()).join(\", \")}`);\n        }\n        const visibleElements = Object.entries(this._watchedVisibleElementsProperties);\n        if (visibleElements.length > 0) {\n            this.onLifecycle(() => visibleElements.map(([prop, propertyChain]) => {\n                let base = this._instance.visibleElements ?? {};\n                let defaultVisible = undefined;\n                for (const key of propertyChain.slice(0, -1)) {\n                    if (typeof base[key] === \"object\" && base[key] !== null) {\n                        base = base[key];\n                    }\n                    else {\n                        defaultVisible = Boolean(base[key]);\n                        break;\n                    }\n                }\n                if (defaultVisible === undefined) {\n                    defaultVisible = Boolean(base[propertyChain.slice(-1)[0]] ?? true);\n                }\n                prop.startsWith(\"hide\") ? !defaultVisible : defaultVisible;\n                const hideShowInName = prop.startsWith(\"hide\") || prop.startsWith(\"show\");\n                const shouldFlip = hideShowInName ? prop.startsWith(\"hide\") : defaultVisible;\n                const genericComponent = this.component;\n                if (typeof genericComponent[prop] === \"boolean\") {\n                    this._updateWidgetVisibleElement(propertyChain, genericComponent[prop], shouldFlip);\n                }\n                else {\n                    genericComponent[prop] = false;\n                }\n                return this.watch(prop, (rawVisible) => this._updateWidgetVisibleElement(propertyChain, rawVisible, shouldFlip));\n            }));\n        }\n    }\n    _updateWidgetVisibleElement(propertyChain, propValue, shouldFlip) {\n        let base = this._instance.visibleElements ?? {};\n        for (const key of propertyChain.slice(0, -1)) {\n            if (typeof base[key] !== \"object\" || base[key] === null) {\n                base[key] = {};\n            }\n            base = base[key];\n        }\n        const visible = Boolean(shouldFlip ? !propValue : propValue);\n        base[propertyChain.at(-1)] = visible;\n    }\n    hostLoaded() {\n        const { el } = this.component;\n        /*\n         * On hot reloading, new this.component instance is created (so properties\n         * on it are reset) but this.component.el instance is preserved (so\n         * properties on it are preserved). Since childElem is re-parented on 1st\n         * hostLoad(), for it to be accessible on the 2nd hostLoad() (hot reload),\n         * we have to store it's reference on the el, rather than component\n         */\n        el.childElem ?? (el.childElem = document.createElement(\"div\"));\n        this._instance.container = el.childElem;\n        let arcgisReadyEmitted = false;\n        // Check if view was already provided by the user\n        const currentView = this.component.el.view;\n        // Define the \"view\" property to allow component usage with MapView/SceneView\n        Object.defineProperty(this.component.el, \"view\", {\n            get: () => this._instance.view ?? this._instance.viewModel?.view,\n            set: (view) => {\n                if (!(\"view\" in this._instance) && typeof this._instance.viewModel === \"object\") {\n                    this._instance.viewModel.view = view;\n                }\n                else {\n                    this._instance.view = view;\n                }\n                this._watchViewDestroy();\n                if (!arcgisReadyEmitted) {\n                    arcgisReadyEmitted = true;\n                    this.component.arcgisReady.emit();\n                }\n            },\n            configurable: true,\n            enumerable: true,\n        });\n        if (currentView) {\n            this._instance.view = currentView;\n        }\n        if (this.component.el.isConnected) {\n            attachToParent(this.component);\n            this._watchViewDestroy();\n        }\n    }\n    hostDisconnected() {\n        // If view is already destroyed, view.ui might be undefined\n        if (typeof this.component.el.childElem === \"object\") {\n            this.component.el.view?.ui?.remove(this.component.el.childElem);\n        }\n    }\n    hostDestroy() {\n        super.hostDestroy();\n        this._watchViewDestroyHandle?.remove();\n    }\n    _watchMetaProperties() {\n        this.watch(\"position\", (position) => {\n            if (this.component.el.childElem != null && typeof position === \"string\") {\n                attachToParent(this.component);\n            }\n        });\n        this.watch(\"referenceElement\", () => attachToParent(this.component));\n    }\n    _makeVisibleElementsBinder() {\n        return new Proxy({}, {\n            has: (target, prop) => typeof prop === \"string\" || Reflect.has(target, prop),\n            get: (target, prop) => {\n                // Possibly called by the JS engine\n                if (typeof prop === \"symbol\" || prop in Promise.prototype) {\n                    return Reflect.get(target, prop);\n                }\n                const propertyChain = [prop];\n                const proxy = this._makeRecursiveProxy(propertyChain);\n                return this.component.manager.trackPropKey((resolvedKey) => {\n                    if (resolvedKey === undefined) {\n                        throw new Error(\"Unable to bind visibleElements property. Check for incorrect this.widget.visibleElements usage\");\n                    }\n                    this.component[resolvedKey] = false;\n                    this._watchedVisibleElementsProperties[resolvedKey] = propertyChain;\n                }, proxy);\n            },\n        });\n    }\n    _makeRecursiveProxy(propertyChain) {\n        const chain = new Proxy({}, {\n            get: (target, prop) => {\n                const value = Reflect.get(target, prop);\n                // Possibly called by the JS engine\n                if (typeof prop === \"symbol\" || prop in Promise.prototype) {\n                    return value;\n                }\n                propertyChain.push(prop);\n                return chain;\n            },\n        });\n        return chain;\n    }\n    /**\n     * Destroy the component if view gets destroyed. Note, that when view is\n     * destroyed, component disconnect is triggered, which will destroy the\n     * component in 1s but that can be too late, because in the meanwhile,\n     * a watcher on the widget/viewModel instance may get triggered, and throw\n     * an error if it's not able to access this.view.map or etc\n     * (happens in VersionManagementViewModel for example).\n     * We can't check for this in disconnectedCallback though as even though\n     * view.destroy() does trigger disconnect on all map-components, the\n     * view.destroyed is not yet set to true when disconnect is triggered.\n     */\n    _watchViewDestroy() {\n        this._watchViewDestroyHandle?.remove();\n        this._watchViewDestroyHandle = this.reactiveUtils.when(() => this.component.el.view?.destroyed === true, () => void this.component.destroy().catch(console.error), { sync: true });\n    }\n}\nconst proxy = proxyExports(WidgetController);\n\nexport { makeWidgetController as m };\n"],"names":["useScaleBarWidget","makeWidgetController","newWidgetsScaleBar","ArcgisScaleBar","constructor","hostRef","registerInstance","this","arcgisReady","createEvent","manager","useControllerManager","widget","viewModel","autoDestroyDisabled","referenceElement","undefined","barStyle","style","unit","icon","label","position","destroy","el","getElement","loadWidget","_options","component","options","proxy","WidgetController","AccessorController","_loadAccessor","super","_watchedViewModelProperties","Map","_watchedVisibleElementsProperties","_isBindingViewModel","value","Object","defineProperty","exports","accessorSupport","makeGetterProxy","_makeVisibleElementsBinder","hostConnected","didLoadCalled","attachToParent","hostLoad","_watchedProperties","delete","destroyed","_watchMetaProperties","reEmitAccessorEvents","_instance","reactiveUtils","onLifecycle","watch","newViewModel","initial","watchComponentUpdates","watchAccessorUpdates","size","Error","concat","Array","from","keys","join","visibleElements","entries","length","map","_ref","_this$_instance$visib","defaultVisible","prop","propertyChain","base","key","slice","Boolean","_base$propertyChain$s","startsWith","shouldFlip","genericComponent","_updateWidgetVisibleElement","rawVisible","propValue","_this$_instance$visib2","visible","at","hostLoaded","_el$childElem","childElem","document","createElement","container","arcgisReadyEmitted","currentView","view","get","_this$_instance$view","_this$_instance$viewM","set","_watchViewDestroy","emit","configurable","enumerable","isConnected","hostDisconnected","_this$component$el$vi","ui","remove","hostDestroy","_this$_watchViewDestr","_watchViewDestroyHandle","Proxy","has","target","Reflect","Promise","prototype","_makeRecursiveProxy","trackPropKey","resolvedKey","chain","push","_this$_watchViewDestr2","when","_this$component$el$vi2","catch","console","error","sync","proxyExports"],"sourceRoot":""}