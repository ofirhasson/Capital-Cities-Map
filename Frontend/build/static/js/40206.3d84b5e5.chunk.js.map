{"version":3,"file":"static/js/40206.3d84b5e5.chunk.js","mappings":";iOAAgBA,EAAgBC,GAC9B,MAAe,UAARA,GAA2B,MAARA,CAC5B,gCAEaC,EAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,gICJjE,MAAMC,EACA,YADAA,EAEJ,QAFIA,EAGH,SCsCGC,GAAMC,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,qIAiFjB,KAAAC,eAAkBC,KACXC,KAAKC,WAAYV,EAAAA,EAAAA,GAAgBQ,EAAMP,OAC1CQ,KAAKE,SACLH,EAAMI,mBAgBF,KAAAC,aAAe,KACjBJ,KAAKC,UAITD,KAAKE,QAAQ,EAGP,KAAAG,YAAeC,IACrBN,KAAKO,SAAWD,CAAE,iBAnGgB,iEAqBI,kBAGU,oBA+BlD,cAAME,SACEC,EAAAA,EAAAA,GAAmBT,OAEzBU,EAAAA,EAAAA,GAAaV,KAAKO,UASpBI,mBAAAA,CAAoBC,GAClBA,EAAMC,KAAO,WAUfC,YAAAA,GACOd,KAAKC,WACRD,KAAKE,SACLF,KAAKQ,YAIDN,MAAAA,GACNF,KAAKe,SAAWf,KAAKe,QACrBf,KAAKgB,oBAAoBC,OAgC3BC,iBAAAA,IACEC,EAAAA,EAAAA,GAAmBnB,OACnBoB,EAAAA,EAAAA,GAAapB,OACbqB,EAAAA,EAAAA,GAAYrB,MAGdsB,iBAAAA,IACEC,EAAAA,EAAAA,GAAuBvB,MAGzBwB,gBAAAA,IACEC,EAAAA,EAAAA,GAAmBzB,MAGrB0B,oBAAAA,IACEC,EAAAA,EAAAA,GAAsB3B,OACtB4B,EAAAA,EAAAA,GAAgB5B,OAChB6B,EAAAA,EAAAA,GAAe7B,MAGjB8B,kBAAAA,IACEC,EAAAA,EAAAA,GAAsB/B,MASxBgC,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAACC,EAAAA,GAAI,CAAA1C,IAAA,2CAAC2C,QAASnC,KAAKI,aAAcgC,UAAWpC,KAAKF,iBAChDmC,EAAAA,EAAAA,GAACI,EAAAA,EAAoB,CAAA7C,IAAA,2CAACS,SAAUD,KAAKC,WACnCgC,EAAAA,EAAAA,GAAA,OAAAzC,IAAA,2DACgB8C,EAAAA,EAAAA,GAActC,KAAKe,SAAQ,cAC7BwB,EAAAA,EAAAA,GAAavC,MACzBwC,MAAO9C,EACP+C,IAAKzC,KAAKK,YACVqC,KAAK,SACLC,SAAU,IAEVV,EAAAA,EAAAA,GAAA,OAAAzC,IAAA,2CAAKgD,MAAO9C,IACVuC,EAAAA,EAAAA,GAAA,OAAAzC,IAAA,2CAAKgD,MAAO9C,MAEduC,EAAAA,EAAAA,GAACW,EAAAA,EAAmB,CAAApD,IAAA,2CAACqD,UAAW7C,wDCvN1B","sources":["../node_modules/@esri/calcite-components/dist/components/src/utils/key.ts","../node_modules/@esri/calcite-components/dist/components/src/components/switch/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/switch/switch.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/switch/switch.scss?tag=calcite-switch&encapsulation=shadow"],"sourcesContent":["export function isActivationKey(key: string): boolean {\n  return key === \"Enter\" || key === \" \";\n}\n\nexport const numberKeys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\nexport const letterKeys = [\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n];\n","export const CSS = {\n  container: \"container\",\n  track: \"track\",\n  handle: \"handle\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport { focusElement, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  CheckableFormComponent,\n  connectForm,\n  disconnectForm,\n  HiddenFormInputSlot,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Scale } from \"../interfaces\";\nimport { CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-switch\",\n  styleUrl: \"switch.scss\",\n  shadow: true,\n})\nexport class Switch\n  implements LabelableComponent, CheckableFormComponent, InteractiveComponent, LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true })\n  form: string;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** When `true`, the component is checked. */\n  @Prop({ reflect: true, mutable: true }) checked = false;\n\n  /** The component's value. */\n  @Prop() value: any;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSwitchElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  switchEl: HTMLDivElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Switch[\"checked\"];\n\n  defaultChecked: boolean;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusElement(this.switchEl);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    input.type = \"checkbox\";\n  }\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (!this.disabled && isActivationKey(event.key)) {\n      this.toggle();\n      event.preventDefault();\n    }\n  };\n\n  onLabelClick(): void {\n    if (!this.disabled) {\n      this.toggle();\n      this.setFocus();\n    }\n  }\n\n  private toggle(): void {\n    this.checked = !this.checked;\n    this.calciteSwitchChange.emit();\n  }\n\n  private clickHandler = (): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.toggle();\n  };\n\n  private setSwitchEl = (el: HTMLDivElement): void => {\n    this.switchEl = el;\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the `checked` value has changed.\n   */\n  @Event({ cancelable: false }) calciteSwitchChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLabel(this);\n    connectForm(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            aria-checked={toAriaBoolean(this.checked)}\n            aria-label={getLabelText(this)}\n            class={CSS.container}\n            ref={this.setSwitchEl}\n            role=\"switch\"\n            tabIndex={0}\n          >\n            <div class={CSS.track}>\n              <div class={CSS.handle} />\n            </div>\n            <HiddenFormInputSlot component={this} />\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","// sizes\n:host([scale=\"s\"]) {\n  .container {\n    @apply h-3;\n  }\n  .track {\n    @apply h-3 w-6;\n  }\n  .handle {\n    @apply h-2 w-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  .container {\n    @apply h-4;\n  }\n  .track {\n    @apply h-4 w-8;\n  }\n  .handle {\n    @apply h-3 w-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .container {\n    @apply h-6;\n  }\n  .track {\n    @apply h-6 w-12;\n  }\n  .handle {\n    @apply h-5 w-5;\n  }\n}\n\n:host {\n  @apply relative\n    inline-block\n    w-auto\n    cursor-pointer\n    select-none\n    align-middle;\n  tap-highlight-color: transparent;\n}\n\n@include disabled();\n\n.container {\n  @apply outline-0;\n}\n\n.track {\n  @apply bg-foreground-2\n    border-color-2\n    pointer-events-none\n    relative\n    box-border\n    inline-block\n    rounded-full\n    border\n    border-solid\n    align-top\n    focus-base;\n}\n\n:host(:focus) .track {\n  @apply focus-outset;\n}\n\n.handle {\n  @apply bg-foreground-1\n    border-color-input\n    pointer-events-none\n    absolute\n    block\n    rounded-full\n    border-2\n    border-solid\n    transition-all\n    duration-150\n    ease-in-out;\n  inset-block-start: -1px;\n  inset-inline: -1px theme(\"inset.auto\");\n}\n\n.container:hover,\n:host(:focus) {\n  .handle {\n    @apply border-color-brand;\n    box-shadow: inset 0 0 0 1px var(--calcite-color-brand);\n  }\n}\n\n:host([checked]) {\n  .track {\n    @apply bg-brand border-color-brand-hover;\n  }\n  .handle {\n    @apply border-color-brand;\n    inset-inline: theme(\"inset.auto\") -1px;\n  }\n\n  .container:hover {\n    .handle {\n      @apply border-color-brand-hover;\n      box-shadow: inset 0 0 0 1px var(--calcite-color-brand-hover);\n    }\n  }\n}\n\n@media (forced-colors: active) {\n  :host([checked]) {\n    .track {\n      background-color: canvasText;\n    }\n  }\n}\n\n@include hidden-form-input();\n@include base-component();\n"],"names":["isActivationKey","key","numberKeys","CSS","Switch","proxyCustomElement","HTMLElement","keyDownHandler","event","this","disabled","toggle","preventDefault","clickHandler","setSwitchEl","el","switchEl","setFocus","componentFocusable","focusElement","syncHiddenFormInput","input","type","onLabelClick","checked","calciteSwitchChange","emit","connectedCallback","connectInteractive","connectLabel","connectForm","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectInteractive","disconnectLabel","disconnectForm","componentDidRender","updateHostInteraction","render","h","Host","onClick","onKeyDown","InteractiveContainer","toAriaBoolean","getLabelText","class","ref","role","tabIndex","HiddenFormInputSlot","component"],"sourceRoot":""}