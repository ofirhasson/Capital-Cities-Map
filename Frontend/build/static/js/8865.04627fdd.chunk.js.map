{"version":3,"file":"static/js/8865.04627fdd.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/accordion-item/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/accordion-item/accordion-item.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/accordion-item/accordion-item.scss?tag=calcite-accordion-item&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/component.ts","../node_modules/@esri/calcite-components/dist/components/src/utils/conditionalSlot.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/loadable.ts","../node_modules/@esri/calcite-components/dist/components/src/utils/observers.ts"],"sourcesContent":["export const SLOTS = {\n  actionsStart: \"actions-start\",\n  actionsEnd: \"actions-end\",\n};\n\nexport const CSS = {\n  icon: \"icon\",\n  header: \"header\",\n  headerContent: \"header-content\",\n  actionsStart: \"actions-start\",\n  actionsEnd: \"actions-end\",\n  headerText: \"header-text\",\n  heading: \"heading\",\n  description: \"description\",\n  expandIcon: \"expand-icon\",\n  content: \"content\",\n  iconStart: \"icon--start\",\n  iconEnd: \"icon--end\",\n  headerContainer: \"header-container\",\n};\n\nexport const IDS = {\n  section: \"section\",\n  sectionToggle: \"section-toggle\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  closestElementCrossShadowBoundary,\n  getElementDir,\n  getSlotted,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport { getIconScale } from \"../../utils/component\";\nimport { FlipContext, Position, Scale, SelectionMode, IconType } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { SLOTS, CSS, IDS } from \"./resources\";\nimport { RequestedItem } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding custom content, including nested `calcite-accordion-item`s.\n * @slot actions-end - A slot for adding `calcite-action`s or content to the end side of the component's header.\n * @slot actions-start - A slot for adding `calcite-action`s or content to the start side of the component's header.\n */\n@Component({\n  tag: \"calcite-accordion-item\",\n  styleUrl: \"accordion-item.scss\",\n  shadow: true,\n})\nexport class AccordionItem implements ConditionalSlotComponent, LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, the component is expanded. */\n  @Prop({ reflect: true, mutable: true }) expanded = false;\n\n  /** Specifies heading text for the component. */\n  @Prop() heading: string;\n\n  /** Specifies a description for the component. */\n  @Prop() description: string;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: IconNameOrString;\n\n  /** Specifies an icon to display at the end of the component. */\n  @Prop({ reflect: true }) iconEnd: IconNameOrString;\n\n  /** Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl: FlipContext;\n\n  /**\n   * Specifies the placement of the icon in the header inherited from the `calcite-accordion`.\n   *\n   * @internal\n   */\n  @Prop() iconPosition: Extract<\"start\" | \"end\", Position>;\n\n  /** Specifies the type of the icon in the header inherited from the `calcite-accordion`.\n   *\n   * @internal\n   */\n  @Prop() iconType: Extract<\"chevron\" | \"caret\" | \"plus-minus\", IconType>;\n\n  /**\n   * The containing `accordion` element.\n   *\n   * @internal\n   */\n  @Prop() accordionParent: HTMLCalciteAccordionElement;\n\n  /**\n   * Specifies the size of the component inherited from the `calcite-accordion`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAccordionItemSelect: EventEmitter<RequestedItem>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAccordionItemClose: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderActionsStart(): VNode {\n    const { el } = this;\n    return getSlotted(el, SLOTS.actionsStart) ? (\n      <div class={CSS.actionsStart}>\n        <slot name={SLOTS.actionsStart} />\n      </div>\n    ) : null;\n  }\n\n  renderActionsEnd(): VNode {\n    const { el } = this;\n    return getSlotted(el, SLOTS.actionsEnd) ? (\n      <div class={CSS.actionsEnd}>\n        <slot name={SLOTS.actionsEnd} />\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { iconFlipRtl } = this;\n    const dir = getElementDir(this.el);\n    const iconStartEl = this.iconStart ? (\n      <calcite-icon\n        class={CSS.iconStart}\n        flipRtl={iconFlipRtl === \"both\" || iconFlipRtl === \"start\"}\n        icon={this.iconStart}\n        key=\"icon-start\"\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n    const iconEndEl = this.iconEnd ? (\n      <calcite-icon\n        class={CSS.iconEnd}\n        flipRtl={iconFlipRtl === \"both\" || iconFlipRtl === \"end\"}\n        icon={this.iconEnd}\n        key=\"icon-end\"\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n    const { description } = this;\n    return (\n      <Host>\n        <div\n          class={{\n            [`icon-position--${this.iconPosition}`]: true,\n            [`icon-type--${this.iconType}`]: true,\n          }}\n        >\n          <div class={{ [CSS.header]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" }}>\n            {this.renderActionsStart()}\n            <div\n              aria-controls={IDS.section}\n              aria-expanded={toAriaBoolean(this.expanded)}\n              class={CSS.headerContent}\n              id={IDS.sectionToggle}\n              onClick={this.itemHeaderClickHandler}\n              ref={this.storeHeaderEl}\n              role=\"button\"\n              tabindex=\"0\"\n            >\n              <div class={CSS.headerContainer}>\n                {iconStartEl}\n                <div class={CSS.headerText}>\n                  <span class={CSS.heading}>{this.heading}</span>\n                  {description ? <span class={CSS.description}>{description}</span> : null}\n                </div>\n                {iconEndEl}\n              </div>\n              <calcite-icon\n                class={CSS.expandIcon}\n                icon={\n                  this.iconType === \"chevron\"\n                    ? \"chevronDown\"\n                    : this.iconType === \"caret\"\n                      ? \"caretDown\"\n                      : this.expanded\n                        ? \"minus\"\n                        : \"plus\"\n                }\n                scale={getIconScale(this.scale)}\n              />\n            </div>\n            {this.renderActionsEnd()}\n          </div>\n          <section aria-labelledby={IDS.sectionToggle} class={CSS.content} id={IDS.section}>\n            <slot />\n          </section>\n        </div>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    if (event.target === this.el) {\n      switch (event.key) {\n        case \" \":\n        case \"Enter\":\n          this.emitRequestedItem();\n          event.preventDefault();\n          break;\n      }\n    }\n  }\n\n  @Listen(\"calciteInternalAccordionChange\", { target: \"body\" })\n  updateActiveItemOnChange(event: CustomEvent): void {\n    const [accordion] = event.composedPath();\n    const parent = closestElementCrossShadowBoundary<HTMLCalciteAccordionElement>(\n      this.el,\n      \"calcite-accordion\",\n    );\n\n    if (accordion !== parent) {\n      return;\n    }\n\n    this.determineActiveItem(parent.selectionMode, event.detail.requestedAccordionItem);\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteInternalAccordionItemsSync\", { target: \"document\" })\n  accordionItemSyncHandler(event: CustomEvent): void {\n    const [accordion] = event.composedPath();\n    const accordionItem = this.el;\n\n    // we sync with our accordion parent via event only if the item is wrapped within another component's shadow DOM,\n    // otherwise, the accordion parent will sync the item directly\n\n    const willBeSyncedByDirectParent = accordionItem.parentElement === accordion;\n    if (willBeSyncedByDirectParent) {\n      return;\n    }\n\n    const closestAccordionParent = closestElementCrossShadowBoundary<HTMLCalciteAccordionElement>(\n      accordionItem,\n      \"calcite-accordion\",\n    );\n\n    if (accordion !== closestAccordionParent) {\n      return;\n    }\n\n    accordionItem.iconPosition = closestAccordionParent.iconPosition;\n    accordionItem.iconType = closestAccordionParent.iconType;\n    accordionItem.scale = closestAccordionParent.scale;\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteAccordionItemElement;\n\n  private headerEl: HTMLDivElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.headerEl.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private storeHeaderEl = (el: HTMLDivElement): void => {\n    this.headerEl = el;\n  };\n\n  /** handle clicks on item header */\n  private itemHeaderClickHandler = (): void => this.emitRequestedItem();\n\n  private determineActiveItem(\n    selectionMode: SelectionMode,\n    requestedItem: HTMLCalciteAccordionItemElement,\n  ): void {\n    switch (selectionMode) {\n      case \"multiple\":\n        if (this.el === requestedItem) {\n          this.expanded = !this.expanded;\n        }\n        break;\n\n      case \"single\":\n        this.expanded = this.el === requestedItem ? !this.expanded : false;\n        break;\n\n      case \"single-persist\":\n        this.expanded = this.el === requestedItem;\n        break;\n    }\n  }\n\n  private emitRequestedItem(): void {\n    this.calciteInternalAccordionItemSelect.emit({\n      requestedAccordionItem: this.el as HTMLCalciteAccordionItemElement,\n    });\n  }\n}\n","%icon-position {\n  /* icon rotation variables */\n  --calcite-accordion-item-icon-rotation: calc(theme(\"rotate.90\") * -1);\n  --calcite-accordion-item-active-icon-rotation: theme(\"rotate.0\");\n  --calcite-accordion-item-icon-rotation-rtl: theme(\"rotate.90\");\n  --calcite-accordion-item-active-icon-rotation-rtl: theme(\"rotate.0\");\n}\n\n// icon position variants for child\n.icon-position--start {\n  @extend %icon-position;\n  --calcite-accordion-item-flex-direction: row-reverse;\n  --calcite-accordion-item-icon-spacing-start: 0;\n  --calcite-accordion-item-icon-spacing-end: var(--calcite-accordion-icon-margin);\n}\n\n.icon-position--end {\n  @extend %icon-position;\n  --calcite-accordion-item-flex-direction: row;\n  --calcite-accordion-item-icon-spacing-start: var(--calcite-accordion-icon-margin);\n  --calcite-accordion-item-icon-spacing-end: 0;\n}\n\n.icon-position--end:not(.icon-type--plus-minus) {\n  --calcite-accordion-item-icon-rotation: theme(\"rotate.0\");\n  --calcite-accordion-item-active-icon-rotation: theme(\"rotate.180\");\n  --calcite-accordion-item-icon-rotation-rtl: theme(\"rotate.0\");\n  --calcite-accordion-item-active-icon-rotation-rtl: calc(theme(\"rotate.180\") * -1);\n}\n\n:host {\n  @apply text-color-3\n    relative\n    flex\n    flex-col\n    no-underline;\n  background-color: var(--calcite-accordion-item-background, theme(\"backgroundColor.foreground.1\"));\n}\n\n// focus styles\n:host .header-content {\n  @apply focus-base;\n}\n\n:host(:focus) .header-content {\n  @apply focus-inset\n  outline-none;\n}\n\n:host([expanded]) {\n  @apply text-color-1;\n  & .content {\n    @apply text-color-1 block;\n  }\n  & .header {\n    border-block-end-color: transparent;\n  }\n}\n\n// .header / content\n:host .header {\n  @apply flex items-stretch;\n}\n\n:host .icon {\n  @apply text-color-3\n    relative\n    m-0\n    inline-flex\n    duration-150\n    ease-in-out;\n  margin-inline-end: var(--calcite-accordion-item-icon-spacing-start);\n  margin-inline-start: var(--calcite-accordion-item-icon-spacing-end);\n}\n\n.icon--start {\n  @apply flex items-center;\n  margin-inline-end: var(--calcite-accordion-icon-margin);\n}\n\n.icon--end {\n  @apply flex items-center;\n  margin-inline-end: var(--calcite-accordion-icon-margin);\n  margin-inline-start: var(--calcite-accordion-icon-margin);\n}\n\n.header-container {\n  inline-size: 100%;\n}\n\n.content {\n  padding: var(--calcite-accordion-item-padding);\n}\n\n:host .content,\n:host .header {\n  border-block-end: 1px solid var(--calcite-accordion-item-border, theme(\"borderColor.color.2\"));\n}\n\n:host .header * {\n  @apply inline-flex\n    items-center\n    duration-150\n    ease-in-out;\n  @include word-break();\n}\n\n:host .content {\n  @apply text-color-3 hidden pt-0;\n  text-align: initial;\n}\n\n// accordion item icon\n:host .expand-icon {\n  @apply text-color-3;\n  margin-inline-start: var(--calcite-accordion-item-icon-spacing-start);\n  margin-inline-end: var(--calcite-accordion-item-icon-spacing-end);\n  transform: rotate(var(--calcite-accordion-item-icon-rotation));\n}\n\n.calcite--rtl .expand-icon {\n  transform: rotate(var(--calcite-accordion-item-icon-rotation-rtl));\n}\n\n:host([expanded]) .expand-icon {\n  @apply text-color-3;\n  transform: rotate(var(--calcite-accordion-item-active-icon-rotation));\n}\n\n:host([expanded]) .calcite--rtl .expand-icon {\n  transform: rotate(var(--calcite-accordion-item-active-icon-rotation-rtl));\n}\n\n// accordion item title\n:host .header-text {\n  @apply my-0 flex-grow flex-col py-0;\n  text-align: initial;\n  margin-inline-end: theme(\"margin.auto\");\n}\n\n:host .heading,\n:host .description {\n  @apply flex w-full;\n}\n\n:host .heading {\n  @apply text-color-2 font-medium;\n}\n:host .description {\n  @apply text-color-3 mt-1;\n}\n\n:host(:focus),\n:host(:hover) {\n  & .heading {\n    @apply text-color-1;\n  }\n  & .icon {\n    @apply text-color-1;\n  }\n\n  & .expand-icon {\n    @apply text-color-1;\n  }\n  & .description {\n    @apply text-color-2;\n  }\n}\n\n:host(:focus),\n:host(:active),\n:host([expanded]) {\n  & .heading {\n    @apply text-color-1;\n  }\n  & .icon {\n    @apply text-color-1;\n  }\n  & .description {\n    @apply text-color-2;\n  }\n}\n\n.header-content {\n  @apply flex-grow cursor-pointer;\n  padding: var(--calcite-accordion-item-padding);\n  flex-direction: var(--calcite-accordion-item-flex-direction);\n}\n\n.actions-start,\n.actions-end {\n  @apply flex items-center;\n}\n\n@media (forced-colors: active) {\n  :host([expanded]) {\n    & .header {\n      border-block-end: none;\n    }\n    & .heading {\n      /** give visual indicator of expanded state since subtle color changes can't be done **/\n      font-weight: bolder;\n    }\n  }\n  :host(:hover),\n  :host(:focus) {\n    & .heading {\n      /** give visual indicator of expandability/click-ability since subtle color changes can't be done **/\n      text-decoration: underline;\n    }\n  }\n}\n\n@include base-component();\n","import { HTMLStencilElement } from \"@stencil/core/internal\";\nimport { Scale } from \"../components/interfaces\";\n\nexport function getIconScale(componentScale: Scale): Extract<Scale, \"s\" | \"m\"> {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\n\n/**\n * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.\n *\n * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3\n *\n * @param el - the host element to wait for\n */\nexport async function componentOnReady(el: HTMLElement): Promise<void> {\n  await (isStencilEl(el)\n    ? el.componentOnReady()\n    : new Promise<void>((resolve) => requestAnimationFrame(() => resolve())));\n}\n\nfunction isStencilEl(el: HTMLElement): el is HTMLStencilElement {\n  return typeof (el as HTMLStencilElement).componentOnReady === \"function\";\n}\n","import { forceUpdate } from \"@stencil/core\";\nimport { createObserver, ExtendedMutationObserver } from \"./observers\";\n\n/**\n * Defines interface for components with a dynamically changing slot.\n *\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport interface ConditionalSlotComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n}\n\nlet mutationObserver: ExtendedMutationObserver;\nconst observerOptions: Pick<Parameters<MutationObserver[\"observe\"]>[1], \"childList\"> = { childList: true };\n\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function connectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n\n  mutationObserver.observe(component.el, observerOptions);\n}\n\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function disconnectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  mutationObserver.unobserve(component.el);\n}\n\nfunction processMutations(mutations: MutationRecord[]): void {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"./interfaces\";\n\nexport interface FetchIconProps {\n  icon: IconNameOrString;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nfunction generateIconId({ icon, scale }: FetchIconProps): string {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\n\nexport async function fetchIcon(props: FetchIconProps): Promise<CalciteIconPath> {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n\n  return path;\n}\n\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nexport function getCachedIconData(props: FetchIconProps): CalciteIconPath {\n  return getCachedIconDataByKey(generateIconId(props));\n}\n\nfunction getCachedIconDataByKey(id: string): CalciteIconPath {\n  return iconCache[id];\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: The component's color. Defaults to `currentColor`.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, getCachedIconData, scaleToPx } from \"./utils\";\nimport { IconNameOrString } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: IconNameOrString = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!isBrowser() || !icon || !visible) {\n      return;\n    }\n\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","import { forceUpdate } from \"@stencil/core\";\nimport { isBrowser } from \"./browser\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!isBrowser()) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n","import { isBrowser } from \"./browser\";\n\nexport interface ExtendedMutationObserver extends MutationObserver {\n  new: () => ExtendedMutationObserver;\n  unobserve: (target: Node) => void;\n}\n\ndeclare const ExtendedMutationObserver: {\n  prototype: ExtendedMutationObserver;\n  new (callback: MutationCallback): ExtendedMutationObserver;\n};\n\ntype ObserverType = \"mutation\" | \"intersection\" | \"resize\";\n\ntype ObserverCallbackType<T extends ObserverType> = T extends \"mutation\"\n  ? MutationCallback\n  : T extends \"intersection\"\n    ? IntersectionObserverCallback\n    : T extends \"resize\"\n      ? ResizeObserverCallback\n      : never;\n\ntype ObserverOptions<T extends ObserverType> = T extends \"intersection\" ? IntersectionObserverInit : never;\n\ntype ObserverClassType<T extends ObserverType> = T extends \"mutation\"\n  ? typeof ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? typeof IntersectionObserver\n    : T extends \"resize\"\n      ? typeof ResizeObserver\n      : never;\n\ntype ObserverInstanceType<T extends ObserverType> = T extends \"mutation\"\n  ? ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? IntersectionObserver\n    : T extends \"resize\"\n      ? ResizeObserver\n      : never;\n\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nexport function createObserver<T extends ObserverType>(\n  type: T,\n  callback: ObserverCallbackType<T>,\n  options?: ObserverOptions<T>,\n): ObserverInstanceType<T> | undefined {\n  if (!isBrowser()) {\n    return undefined;\n  }\n\n  const Observer = getObserver<T>(type);\n  return new Observer(callback as any, options) as any;\n}\n\nfunction getObserver<T extends ObserverType>(type: T): ObserverClassType<T> {\n  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n  class ExtendedMutationObserver extends window.MutationObserver implements ExtendedMutationObserver {\n    private observedEntry: Array<{\n      target: Node;\n      options?: MutationObserverInit;\n    }> = [];\n\n    private readonly callback: MutationCallback;\n\n    constructor(callback: MutationCallback) {\n      super(callback);\n      this.callback = callback;\n    }\n\n    observe(target: Node, options?: MutationObserverInit): void {\n      this.observedEntry.push({ target, options });\n\n      return super.observe(target, options);\n    }\n\n    unobserve(target: Node): void {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n\n  return (function () {\n    return (\n      type === \"intersection\"\n        ? window.IntersectionObserver\n        : type === \"mutation\"\n          ? ExtendedMutationObserver\n          : window.ResizeObserver\n    ) as any;\n  })();\n}\n"],"names":["SLOTS","CSS","IDS","AccordionItem","proxyCustomElement","HTMLElement","storeHeaderEl","el","this","headerEl","itemHeaderClickHandler","emitRequestedItem","connectedCallback","connectConditionalSlotComponent","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectConditionalSlotComponent","renderActionsStart","getSlotted","h","class","name","renderActionsEnd","render","iconFlipRtl","dir","getElementDir","iconStartEl","iconStart","flipRtl","icon","key","scale","getIconScale","iconEndEl","iconEnd","description","Host","concat","iconPosition","iconType","CSS_UTILITY","rtl","toAriaBoolean","expanded","id","onClick","ref","role","tabindex","heading","keyDownHandler","event","target","preventDefault","updateActiveItemOnChange","accordion","composedPath","parent","closestElementCrossShadowBoundary","determineActiveItem","selectionMode","detail","requestedAccordionItem","stopPropagation","accordionItemSyncHandler","accordionItem","parentElement","closestAccordionParent","setFocus","componentFocusable","focus","requestedItem","calciteInternalAccordionItemSelect","emit","componentScale","async","componentOnReady","isStencilEl","Promise","resolve","requestAnimationFrame","mutationObserver","observerOptions","childList","component","createObserver","processMutations","observe","unobserve","mutations","forEach","_ref","forceUpdate","iconCache","requestCache","scaleToPx","s","m","l","generateIconId","size","numberLeadingName","isNaN","Number","charAt","parts","split","length","firstNonDigitInPartPattern","map","part","partIndex","replace","match","offset","toUpperCase","join","normalizeIconName","filled","iconName","substring","getCachedIconDataByKey","Icon","visible","waitUntilVisible","loadIconPathData","_this$intersectionObs","intersectionObserver","disconnect","pathData","textLabel","semantic","paths","svg","fill","height","viewBox","width","xmlns","path","d","opacity","isBrowser","fetchIconProps","props","cachedIconKey","cachedIconData","fetch","getAssetPath","then","resp","json","catch","console","error","fetchIcon","callback","entries","entry","isIntersecting","rootMargin","resolveMap","WeakMap","promiseMap","set","get","componentLoaded","type","options","Observer","ExtendedMutationObserver","window","MutationObserver","constructor","super","observedEntry","push","newObservedEntries","filter","observed","takeRecords","IntersectionObserver","ResizeObserver","getObserver"],"sourceRoot":""}