"use strict";(self.webpackChunknorthwind=self.webpackChunknorthwind||[]).push([[96026],{18300:(e,t,n)=>{n.d(t,{L:()=>v,b:()=>P});var i,s,a=n(30168),r=n(29134),l=n(7025),o=n(13611),c=n(6644),h=n(8084),d=n(82999),u=n(58406),p=n(98634),f=n(8654),g=n(64201),_=n(4760);function P(e){const t=new g.kG;t.include(h.j,e);const{vertex:n,fragment:l}=t;return n.uniforms.add(new f.g("modelView",((e,t)=>{let{camera:n}=t;return(0,r.Iu)(b,n.viewMatrix,e.origin)})),new f.g("proj",((e,t)=>{let{camera:n}=t;return n.projectionMatrix})),new u.p("glowWidth",((e,t)=>{let{camera:n}=t;return e.glowWidth*n.pixelRatio})),new d.A("pixelToNDC",((e,t)=>{let{camera:n}=t;return(0,o.t8)(m,2/n.fullViewport[2],2/n.fullViewport[3])}))),t.attributes.add(_.T.START,"vec3"),t.attributes.add(_.T.END,"vec3"),t.attributes.add(_.T.UP,"vec3"),t.attributes.add(_.T.EXTRUDE,"vec2"),t.varyings.add("uv","vec2"),t.varyings.add("vViewStart","vec3"),t.varyings.add("vViewEnd","vec3"),t.varyings.add("vViewPlane","vec4"),n.code.add((0,p.H)(i||(i=(0,a.Z)(["void main() {\nvec3 pos = mix(start, end, extrude.x);\nvec4 viewPos = modelView * vec4(pos, 1);\nvec4 projPos = proj * viewPos;\nvec2 ndcPos = projPos.xy / projPos.w;\nvec3 viewUp = (modelView * vec4(extrude.y * up, 0)).xyz;\nvec4 projPosUp = proj * vec4(viewPos.xyz + viewUp, 1);\nvec2 projExtrudeDir = normalize(projPosUp.xy / projPosUp.w - ndcPos);\nvec2 lxy = abs(sign(projExtrudeDir) - ndcPos);\nndcPos += length(lxy) * projExtrudeDir;\nvec3 worldPlaneNormal = normalize(cross(up, normalize(end - start)));\nvec3 viewPlaneNormal = (modelView * vec4(worldPlaneNormal, 0)).xyz;\nvViewStart = (modelView * vec4(start, 1)).xyz;\nvViewEnd = (modelView * vec4(end, 1)).xyz;\nvViewPlane = vec4(viewPlaneNormal, -dot(viewPlaneNormal, vViewStart));\nfloat xPaddingPixels = sign(dot(viewPlaneNormal, viewPos.xyz)) * (extrude.x * 2.0 - 1.0) * glowWidth;\nndcPos.x += xPaddingPixels * pixelToNDC.x;\nuv = ndcPos * 0.5 + 0.5;\ngl_Position = vec4(ndcPos, 0, 1);\n}"])))),l.uniforms.add(new u.p("perScreenPixelRatio",((e,t)=>t.camera.perScreenPixelRatio))),l.code.add((0,p.H)(s||(s=(0,a.Z)(["float planeDistancePixels(vec4 plane, vec3 pos, vec3 start, vec3 end) {\nvec3 origin = mix(start, end, 0.5);\nvec3 basis = end - origin;\nvec3 posAtOrigin = pos - origin;\nfloat x = dot(normalize(basis), posAtOrigin);\nfloat y = dot(plane.xyz, posAtOrigin);\nfloat dx = max(abs(x) - length(basis), 0.0);\nfloat dy = y;\nfloat dist = length(vec2(dx, dy));\nfloat width = fwidth(y);\nfloat maxPixelDistance = length(pos) * perScreenPixelRatio * 2.0;\nfloat pixelDist = dist / min(width, maxPixelDistance);\nreturn abs(pixelDist);\n}\nvoid main() {\nvec3 dEndStart = vViewEnd - vViewStart;\nif (dot(dEndStart, dEndStart) < 1e-5) {\ndiscard;\n}\nvec3 pos;\nvec3 normal;\nfloat angleCutoffAdjust;\nfloat depthDiscontinuityAlpha;\nif (!laserlineReconstructFromDepth(pos, normal, angleCutoffAdjust, depthDiscontinuityAlpha)) {\ndiscard;\n}\nfloat distance = planeDistancePixels(vViewPlane, pos, vViewStart, vViewEnd);\nvec4 color = laserlineProfile(distance);\nfloat alpha = (1.0 - smoothstep(0.995 - angleCutoffAdjust, 0.999 - angleCutoffAdjust, abs(dot(normal, vViewPlane.xyz))));\nfragColor = laserlineOutput(color * alpha * depthDiscontinuityAlpha);\n}"])))),t}const m=(0,c.Ue)(),b=(0,l.Ue)(),v=Object.freeze(Object.defineProperty({__proto__:null,build:P},Symbol.toStringTag,{value:"Module"}))},83671:(e,t,n)=>{n.d(t,{L:()=>k,b:()=>H,d:()=>U});var i,s,a,r,l,o,c,h,d,u,p,f,g,_,P=n(30168),m=n(16889),b=n(13611),v=n(6644),w=n(32035),D=n(12400),V=n(19093),x=n(86361),E=n(85981),L=n(55652),y=n(23470),C=n(8084),S=n(24967),A=n(82999),M=n(49450),R=n(95276),T=n(58406),O=n(98634),q=n(64201);const U=(0,m.Vl)(6);function H(e){const t=new q.kG;t.include(S.k),t.include(C.j,e);const n=t.fragment;if(e.lineVerticalPlaneEnabled||e.heightManifoldEnabled)if(n.uniforms.add(new T.p("maxPixelDistance",((t,n)=>e.heightManifoldEnabled?2*n.camera.computeScreenPixelSizeAt(t.heightManifoldTarget):2*n.camera.computeScreenPixelSizeAt(t.lineVerticalPlaneSegment.origin)))),n.code.add((0,O.H)(i||(i=(0,P.Z)(["float planeDistancePixels(vec4 plane, vec3 pos) {\nfloat dist = dot(plane.xyz, pos) + plane.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}"])))),e.spherical){const e=(e,t,n)=>(0,w.h)(e,t.heightManifoldTarget,n.camera.viewMatrix),t=(e,t)=>(0,w.h)(e,[0,0,0],t.camera.viewMatrix);n.uniforms.add(new R.N("heightManifoldOrigin",((n,i)=>(e(N,n,i),t(B,i),(0,w.f)(B,B,N),(0,w.n)(W,B),W[3]=(0,w.l)(B),W))),new M.J("globalOrigin",((e,n)=>t(N,n))),new T.p("cosSphericalAngleThreshold",((e,t)=>1-Math.max(2,(0,w.p)(t.camera.eye,e.heightManifoldTarget)*t.camera.perRenderPixelRatio)/(0,w.l)(e.heightManifoldTarget)))),n.code.add((0,O.H)(s||(s=(0,P.Z)(["float globeDistancePixels(float posInGlobalOriginLength) {\nfloat dist = abs(posInGlobalOriginLength - heightManifoldOrigin.w);\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}\nfloat heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {\nvec3 posInGlobalOriginNorm = normalize(globalOrigin - pos);\nfloat cosAngle = dot(posInGlobalOriginNorm, heightManifoldOrigin.xyz);\nvec3 posInGlobalOrigin = globalOrigin - pos;\nfloat posInGlobalOriginLength = length(posInGlobalOrigin);\nfloat sphericalDistance = globeDistancePixels(posInGlobalOriginLength);\nfloat planarDistance = planeDistancePixels(heightPlane, pos);\nreturn cosAngle < cosSphericalAngleThreshold ? sphericalDistance : planarDistance;\n}"]))))}else n.code.add((0,O.H)(a||(a=(0,P.Z)(["float heightManifoldDistancePixels(vec4 heightPlane, vec3 pos) {\nreturn planeDistancePixels(heightPlane, pos);\n}"]))));if(e.pointDistanceEnabled&&(n.uniforms.add(new T.p("maxPixelDistance",((e,t)=>2*t.camera.computeScreenPixelSizeAt(e.pointDistanceTarget)))),n.code.add((0,O.H)(r||(r=(0,P.Z)(["float sphereDistancePixels(vec4 sphere, vec3 pos) {\nfloat dist = distance(sphere.xyz, pos) - sphere.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}"]))))),e.intersectsLineEnabled&&(n.uniforms.add(new T.p("perScreenPixelRatio",((e,t)=>t.camera.perScreenPixelRatio))),n.code.add((0,O.H)(l||(l=(0,P.Z)(["float lineDistancePixels(vec3 start, vec3 dir, float radius, vec3 pos) {\nfloat dist = length(cross(dir, pos - start)) / (length(pos) * perScreenPixelRatio);\nreturn abs(dist) - radius;\n}"]))))),(e.lineVerticalPlaneEnabled||e.intersectsLineEnabled)&&n.code.add((0,O.H)(o||(o=(0,P.Z)(["bool pointIsWithinLine(vec3 pos, vec3 start, vec3 end) {\nvec3 dir = end - start;\nfloat t2 = dot(dir, pos - start);\nfloat l2 = dot(dir, dir);\nreturn t2 >= 0.0 && t2 <= l2;\n}"])))),n.code.add((0,O.H)(c||(c=(0,P.Z)(["void main() {\nvec3 pos;\nvec3 normal;\nfloat angleCutoffAdjust;\nfloat depthDiscontinuityAlpha;\nif (!laserlineReconstructFromDepth(pos, normal, angleCutoffAdjust, depthDiscontinuityAlpha)) {\ndiscard;\n}\nvec4 color = vec4(0, 0, 0, 0);"])))),e.heightManifoldEnabled){n.uniforms.add(new A.A("angleCutoff",(e=>I(e))),new R.N("heightPlane",((e,t)=>z(e.heightManifoldTarget,e.renderCoordsHelper.worldUpAtPosition(e.heightManifoldTarget,N),t.camera.viewMatrix))));const t=e.spherical?(0,O.H)(h||(h=(0,P.Z)(["normalize(globalOrigin - pos)"]))):(0,O.H)(d||(d=(0,P.Z)(["heightPlane.xyz"])));n.code.add((0,O.H)(u||(u=(0,P.Z)(["\n    {\n      vec2 angleCutoffAdjusted = angleCutoff - angleCutoffAdjust;\n\n      // Fade out laserlines on flat surfaces\n      float heightManifoldAlpha = 1.0 - smoothstep(angleCutoffAdjusted.x, angleCutoffAdjusted.y, abs(dot(normal, ",")));\n\n      vec4 heightManifoldColor = laserlineProfile(heightManifoldDistancePixels(heightPlane, pos));\n      color = max(color, heightManifoldColor * heightManifoldAlpha);\n    }\n    "])),t))}return e.pointDistanceEnabled&&(n.uniforms.add(new A.A("angleCutoff",(e=>I(e))),new R.N("pointDistanceSphere",((e,t)=>function(e,t){return(0,w.h)((0,y.g)(F),e.pointDistanceOrigin,t.camera.viewMatrix),F[3]=(0,w.p)(e.pointDistanceOrigin,e.pointDistanceTarget),F}(e,t)))),n.code.add((0,O.H)(p||(p=(0,P.Z)(["{\nfloat pointDistanceSphereDistance = sphereDistancePixels(pointDistanceSphere, pos);\nvec4 pointDistanceSphereColor = laserlineProfile(pointDistanceSphereDistance);\nfloat pointDistanceSphereAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, normalize(pos - pointDistanceSphere.xyz))));\ncolor = max(color, pointDistanceSphereColor * pointDistanceSphereAlpha);\n}"]))))),e.lineVerticalPlaneEnabled&&(n.uniforms.add(new A.A("angleCutoff",(e=>I(e))),new R.N("lineVerticalPlane",((e,t)=>function(e,t){const n=(0,E.KU)(e.lineVerticalPlaneSegment,.5,N),i=e.renderCoordsHelper.worldUpAtPosition(n,Z),s=(0,w.n)(B,e.lineVerticalPlaneSegment.vector),a=(0,w.b)(N,i,s);return(0,w.n)(a,a),z(e.lineVerticalPlaneSegment.origin,a,t.camera.viewMatrix)}(e,t))),new M.J("lineVerticalStart",((e,t)=>function(e,t){const n=(0,w.c)(N,e.lineVerticalPlaneSegment.origin);return e.renderCoordsHelper.setAltitude(n,0),(0,w.h)(n,n,t.camera.viewMatrix)}(e,t))),new M.J("lineVerticalEnd",((e,t)=>function(e,t){const n=(0,w.g)(N,e.lineVerticalPlaneSegment.origin,e.lineVerticalPlaneSegment.vector);return e.renderCoordsHelper.setAltitude(n,0),(0,w.h)(n,n,t.camera.viewMatrix)}(e,t)))),n.code.add((0,O.H)(f||(f=(0,P.Z)(["{\nif (pointIsWithinLine(pos, lineVerticalStart, lineVerticalEnd)) {\nfloat lineVerticalDistance = planeDistancePixels(lineVerticalPlane, pos);\nvec4 lineVerticalColor = laserlineProfile(lineVerticalDistance);\nfloat lineVerticalAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, lineVerticalPlane.xyz)));\ncolor = max(color, lineVerticalColor * lineVerticalAlpha);\n}\n}"]))))),e.intersectsLineEnabled&&(n.uniforms.add(new A.A("angleCutoff",(e=>I(e))),new M.J("intersectsLineStart",((e,t)=>(0,w.h)(N,e.lineStartWorld,t.camera.viewMatrix))),new M.J("intersectsLineEnd",((e,t)=>(0,w.h)(N,e.lineEndWorld,t.camera.viewMatrix))),new M.J("intersectsLineDirection",((e,t)=>((0,w.c)(W,e.intersectsLineSegment.vector),W[3]=0,(0,w.n)(N,(0,V.t)(W,W,t.camera.viewMatrix))))),new T.p("intersectsLineRadius",(e=>e.intersectsLineRadius))),n.code.add((0,O.H)(g||(g=(0,P.Z)(["{\nif (pointIsWithinLine(pos, intersectsLineStart, intersectsLineEnd)) {\nfloat intersectsLineDistance = lineDistancePixels(intersectsLineStart, intersectsLineDirection, intersectsLineRadius, pos);\nvec4 intersectsLineColor = laserlineProfile(intersectsLineDistance);\nfloat intersectsLineAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, 1.0 - abs(dot(normal, intersectsLineDirection)));\ncolor = max(color, intersectsLineColor * intersectsLineAlpha);\n}\n}"]))))),n.code.add((0,O.H)(_||(_=(0,P.Z)(["fragColor = laserlineOutput(color * depthDiscontinuityAlpha);\n}"])))),t}function I(e){return(0,b.t8)(j,Math.cos(e.angleCutoff),Math.cos(Math.max(0,e.angleCutoff-(0,m.Vl)(2))))}function z(e,t,n){return(0,w.h)(G,e,n),(0,w.c)(W,t),W[3]=0,(0,V.t)(W,W,n),(0,L.Yq)(G,W,J)}const j=(0,v.Ue)(),N=(0,D.Ue)(),W=(0,x.Ue)(),Z=(0,D.Ue)(),B=(0,D.Ue)(),G=(0,D.Ue)(),J=(0,L.Ue)(),F=(0,y.c)(),k=Object.freeze(Object.defineProperty({__proto__:null,build:H,defaultAngleCutoff:U},Symbol.toStringTag,{value:"Module"}))},96026:(e,t,n)=>{n.d(t,{W:()=>k});n(93169);var i=n(32035),s=n(12400),a=n(85981),r=n(86244),l=n(27366),o=n(92026),c=n(49861),h=(n(32718),n(84936),n(69912)),d=n(70444),u=n(95773),p=n(40885),f=n(50951),g=n(70374),_=n(86372),P=n(50256),m=n(55158),b=n(82144),v=n(31132),w=n(27627),D=n(4760),V=n(18300),x=n(8548),E=n(36207);class L extends v.A{initializeProgram(e){return new w.$(e.rctx,L.shader.get().build(this.configuration),y)}initializePipeline(){return(0,E.sm)({blending:(0,E.if)(x.zi.ONE,x.zi.ONE_MINUS_SRC_ALPHA),colorWrite:E.BK})}}L.shader=new b.J(V.L,(()=>n.e(97515).then(n.bind(n,97515))));const y=new Map([[D.T.START,0],[D.T.END,1],[D.T.UP,2],[D.T.EXTRUDE,3]]);var C=n(80658),S=n(44070);class A{constructor(e){this._renderCoordsHelper=e,this._buffers=null,this._origin=(0,s.Ue)(),this._dirty=!1,this._count=0,this._vao=null}set vertices(e){const t=(0,_.bg)(3*e.length);let n=0;for(const i of e)t[n++]=i[0],t[n++]=i[1],t[n++]=i[2];this.buffers=[t]}set buffers(e){if(this._buffers=e,this._buffers.length>0){const e=this._buffers[0],t=3*Math.floor(e.length/3/2);(0,i.s)(this._origin,e[t],e[t+1],e[t+2])}else(0,i.s)(this._origin,0,0,0);this._dirty=!0}get origin(){return this._origin}draw(e){const t=this._ensureVAO(e);null!=t&&(e.bindVAO(t),e.drawArrays(x.MX.TRIANGLES,0,this._count))}dispose(){null!=this._vao&&this._vao.dispose()}_ensureVAO(e){return null==this._buffers?null:(null==this._vao&&(this._vao=this._createVAO(e,this._buffers)),this._ensureVertexData(this._vao,this._buffers),this._vao)}_createVAO(e,t){const n=this._createDataBuffer(t);return this._dirty=!1,new C.U(e,y,{data:(0,P.K)(O)},{data:S.f.createVertex(e,x.l1.STATIC_DRAW,n)})}_ensureVertexData(e,t){var n;if(!this._dirty)return;const i=this._createDataBuffer(t);null!==(n=e.vertexBuffers.data)&&void 0!==n&&n.setData(i),this._dirty=!1}_createDataBuffer(e){const t=e.reduce(((e,t)=>e+M(t)),0);this._count=t;const n=O.createBuffer(t),s=this._origin;let a=0,r=0;for(const l of e){for(let e=0;e<l.length;e+=3){const t=(0,i.s)(T,l[e],l[e+1],l[e+2]);0===e?r=this._renderCoordsHelper.getAltitude(t):this._renderCoordsHelper.setAltitude(t,r);const o=this._renderCoordsHelper.worldUpAtPosition(t,R),c=a+2*e,h=(0,i.f)(T,t,s);if(e<l.length-3){n.up.setVec(c,o),n.up.setVec(c+3,o),n.up.setVec(c+5,o);for(let e=0;e<6;e++)n.start.setVec(c+e,h);n.extrude.setValues(c,0,-1),n.extrude.setValues(c+1,1,-1),n.extrude.setValues(c+2,1,1),n.extrude.setValues(c+3,0,-1),n.extrude.setValues(c+4,1,1),n.extrude.setValues(c+5,0,1)}if(e>0){n.up.setVec(c-2,o),n.up.setVec(c-4,o),n.up.setVec(c-5,o);for(let e=-6;e<0;e++)n.end.setVec(c+e,h)}}a+=M(l)}return n.buffer}}function M(e){return 2*(e.length/3-1)*3}const R=(0,s.Ue)(),T=(0,s.Ue)(),O=(0,m.U$)().vec3f(D.T.START).vec3f(D.T.END).vec3f(D.T.UP).vec2f(D.T.EXTRUDE);var q=n(33559);class U extends q.m{constructor(){super(...arguments),this.contrastControlEnabled=!1}}(0,l._)([(0,q.o)()],U.prototype,"contrastControlEnabled",void 0);var H=n(16889),I=n(98634),z=n(7566),j=n(83671);class N extends I.K{constructor(){super(...arguments),this.innerColor=(0,s.al)(1,1,1),this.innerWidth=1,this.glowColor=(0,s.al)(1,.5,0),this.glowWidth=8,this.glowFalloff=8,this.globalAlpha=.75,this.globalAlphaContrastBoost=2,this.angleCutoff=(0,H.Vl)(6),this.pointDistanceOrigin=(0,s.Ue)(),this.pointDistanceTarget=(0,s.Ue)(),this.lineVerticalPlaneSegment=(0,a.Ue)(),this.intersectsLineSegment=(0,a.Ue)(),this.intersectsLineRadius=3,this.heightManifoldTarget=(0,s.Ue)(),this.lineStartWorld=(0,s.Ue)(),this.lineEndWorld=(0,s.Ue)()}}class W extends v.A{initializeProgram(e){return new w.$(e.rctx,W.shader.get().build(this.configuration),z.i)}initializePipeline(){return(0,E.sm)({blending:(0,E.if)(x.zi.ONE,x.zi.ONE_MINUS_SRC_ALPHA),colorWrite:E.BK})}}W.shader=new b.J(j.L,(()=>n.e(45693).then(n.bind(n,45693))));class Z extends U{constructor(){super(...arguments),this.heightManifoldEnabled=!1,this.pointDistanceEnabled=!1,this.lineVerticalPlaneEnabled=!1,this.intersectsLineEnabled=!1,this.spherical=!1}}(0,l._)([(0,q.o)()],Z.prototype,"heightManifoldEnabled",void 0),(0,l._)([(0,q.o)()],Z.prototype,"pointDistanceEnabled",void 0),(0,l._)([(0,q.o)()],Z.prototype,"lineVerticalPlaneEnabled",void 0),(0,l._)([(0,q.o)()],Z.prototype,"intersectsLineEnabled",void 0),(0,l._)([(0,q.o)()],Z.prototype,"spherical",void 0);var B=n(93822),G=n(22909);let J=class extends g.He{constructor(e){super(e),this._technique=null,this._heightManifoldEnabled=!1,this._pointDistanceEnabled=!1,this._lineVerticalPlaneEnabled=!1,this._intersectsLineEnabled=!1,this._intersectsLineInfinite=!1,this._pathVerticalPlaneEnabled=!1,this._pathVerticalPlaneData=null,this._pathTechnique=null,this._passParameters=new N,this.produces=new Map([[B.r.LASERLINES,()=>!this.contrastControlEnabled],[B.r.LASERLINES_CONTRAST_CONTROL,()=>this.contrastControlEnabled]])}initialize(){this._passParameters.renderCoordsHelper=this.renderCoordsHelper}consumes(){return g.of}get isDecoration(){return this._isDecoration}get heightManifoldEnabled(){return this._heightManifoldEnabled}set heightManifoldEnabled(e){this._heightManifoldEnabled!==e&&(this._heightManifoldEnabled=e,this._requestRender())}get heightManifoldTarget(){return this._passParameters.heightManifoldTarget}set heightManifoldTarget(e){(0,i.c)(this._passParameters.heightManifoldTarget,e),this._requestRender()}get pointDistanceEnabled(){return this._pointDistanceEnabled}set pointDistanceEnabled(e){e!==this._pointDistanceEnabled&&(this._pointDistanceEnabled=e,this._requestRender())}get pointDistanceTarget(){return this._passParameters.pointDistanceTarget}set pointDistanceTarget(e){(0,i.c)(this._passParameters.pointDistanceTarget,e),this._requestRender()}get pointDistanceOrigin(){return this._passParameters.pointDistanceOrigin}set pointDistanceOrigin(e){(0,i.c)(this._passParameters.pointDistanceOrigin,e),this._requestRender()}get lineVerticalPlaneEnabled(){return this._lineVerticalPlaneEnabled}set lineVerticalPlaneEnabled(e){e!==this._lineVerticalPlaneEnabled&&(this._lineVerticalPlaneEnabled=e,this._requestRender())}get lineVerticalPlaneSegment(){return this._passParameters.lineVerticalPlaneSegment}set lineVerticalPlaneSegment(e){(0,a.JG)(e,this._passParameters.lineVerticalPlaneSegment),this._requestRender()}get intersectsLineEnabled(){return this._intersectsLineEnabled}set intersectsLineEnabled(e){e!==this._intersectsLineEnabled&&(this._intersectsLineEnabled=e,this._requestRender())}get intersectsLineSegment(){return this._passParameters.intersectsLineSegment}set intersectsLineSegment(e){(0,a.JG)(e,this._passParameters.intersectsLineSegment),this._requestRender()}get intersectsLineRadius(){return this._passParameters.intersectsLineRadius}set intersectsLineRadius(e){e!==this._passParameters.intersectsLineRadius&&(this._passParameters.intersectsLineRadius=e,this._requestRender())}get intersectsLineInfinite(){return this._intersectsLineInfinite}set intersectsLineInfinite(e){e!==this._intersectsLineInfinite&&(this._intersectsLineInfinite=e,this._requestRender())}get pathVerticalPlaneEnabled(){return this._pathVerticalPlaneEnabled}set pathVerticalPlaneEnabled(e){e!==this._pathVerticalPlaneEnabled&&(this._pathVerticalPlaneEnabled=e,null!=this._pathVerticalPlaneData&&this._requestRender())}set pathVerticalPlaneVertices(e){null==this._pathVerticalPlaneData&&(this._pathVerticalPlaneData=new A(this._passParameters.renderCoordsHelper)),this._pathVerticalPlaneData.vertices=e,this.pathVerticalPlaneEnabled&&this._requestRender()}set pathVerticalPlaneBuffers(e){null==this._pathVerticalPlaneData&&(this._pathVerticalPlaneData=new A(this._passParameters.renderCoordsHelper)),this._pathVerticalPlaneData.buffers=e,this.pathVerticalPlaneEnabled&&this._requestRender()}setParameters(e){(0,G.LO)(this._passParameters,e)&&this._requestRender()}initializeRenderContext(e){this._context=e,this._techniques=e.techniques,this._techniqueConfig=new Z;const t=new U;t.contrastControlEnabled=this.contrastControlEnabled,this._pathTechnique=this._techniques.acquire(L,t)}uninitializeRenderContext(){this._technique=(0,o.RY)(this._technique),this._pathVerticalPlaneData=(0,o.M2)(this._pathVerticalPlaneData),this._pathTechnique=(0,o.RY)(this._pathTechnique)}prepareTechnique(){return this.heightManifoldEnabled||this.pointDistanceEnabled||this.lineVerticalPlaneSegment||this.intersectsLineEnabled?(this._techniqueConfig.heightManifoldEnabled=this.heightManifoldEnabled,this._techniqueConfig.lineVerticalPlaneEnabled=this.lineVerticalPlaneEnabled,this._techniqueConfig.pointDistanceEnabled=this.pointDistanceEnabled,this._techniqueConfig.intersectsLineEnabled=this.intersectsLineEnabled,this._techniqueConfig.contrastControlEnabled=this.contrastControlEnabled,this._techniqueConfig.spherical=this.viewingMode===f.JY.Global,this._technique=this._techniques.releaseAndAcquire(W,this._techniqueConfig,this._technique),this._technique):this._pathTechnique}renderNode(e,t,n){var i;const s=null===n||void 0===n||null===(i=n.get("normals"))||void 0===i?void 0:i.getTexture();s&&(this._passParameters.normals=s,(this.heightManifoldEnabled||this.pointDistanceEnabled||this.lineVerticalPlaneSegment||this.intersectsLineEnabled)&&this._renderUnified(e,t),this.pathVerticalPlaneEnabled&&this._renderPath(e))}_renderUnified(e,t){const n=e.rctx;this._updatePassParameters(e),n.bindTechnique(t,e.bindParameters,this._passParameters),n.screen.draw()}_renderPath(e){if(null==this._pathVerticalPlaneData||null==this._pathTechnique)return;const t=e.rctx,n=this._pathTechnique;t.bindTechnique(n,e.bindParameters,{...this._passParameters,origin:this._pathVerticalPlaneData.origin}),this._pathVerticalPlaneData.draw(e.rctx)}_updatePassParameters(e){if(!this._intersectsLineEnabled)return;const t=e.bindParameters.camera;if(this._intersectsLineInfinite){if((0,d.iL)((0,p.re)(this._passParameters.intersectsLineSegment.origin,this._passParameters.intersectsLineSegment.vector),F),F.c0=-Number.MAX_VALUE,!(0,u.zq)(t.frustum,F))return;(0,d.Ws)(F,this._passParameters.lineStartWorld),(0,d.S$)(F,this._passParameters.lineEndWorld)}else(0,i.c)(this._passParameters.lineStartWorld,this._passParameters.intersectsLineSegment.origin),(0,i.g)(this._passParameters.lineEndWorld,this._passParameters.intersectsLineSegment.origin,this._passParameters.intersectsLineSegment.vector)}_requestRender(){this._context&&this._context.requestRender()}get test(){}};(0,l._)([(0,c.Cb)({constructOnly:!0})],J.prototype,"viewingMode",void 0),(0,l._)([(0,c.Cb)({constructOnly:!0})],J.prototype,"contrastControlEnabled",void 0),(0,l._)([(0,c.Cb)({constructOnly:!0})],J.prototype,"_isDecoration",void 0),(0,l._)([(0,c.Cb)({constructOnly:!0})],J.prototype,"renderCoordsHelper",void 0),J=(0,l._)([(0,h.j)("esri.views.3d.webgl-engine.effects.laserlines.LaserLineRenderer")],J);const F=(0,d.Ue)();class k extends r.l{constructor(e){super(e),this._angleCutoff=j.d,this._style={},this._heightManifoldTarget=(0,s.Ue)(),this._heightManifoldEnabled=!1,this._intersectsLine=(0,a.Ue)(),this._intersectsLineEnabled=!1,this._intersectsLineInfinite=!1,this._lineVerticalPlaneSegment=null,this._pathVerticalPlaneBuffers=null,this._pointDistanceLine=null,this.applyProperties(e)}get testData(){}createResources(){this._ensureRenderer()}destroyResources(){this._disposeRenderer()}updateVisibility(){this._syncRenderer(),this._syncHeightManifold(),this._syncIntersectsLine(),this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance()}get angleCutoff(){return this._angleCutoff}set angleCutoff(e){this._angleCutoff!==e&&(this._angleCutoff=e,this._syncAngleCutoff())}get style(){return this._style}set style(e){this._style=e,this._syncStyle()}get heightManifoldTarget(){return this._heightManifoldEnabled?this._heightManifoldTarget:null}set heightManifoldTarget(e){null!=e?((0,i.c)(this._heightManifoldTarget,e),this._heightManifoldEnabled=!0):this._heightManifoldEnabled=!1,this._syncRenderer(),this._syncHeightManifold()}set intersectsWorldUpAtLocation(e){if(null==e)return void(this.intersectsLine=null);const t=this.view.renderCoordsHelper.worldUpAtPosition(e,K);this.intersectsLine=(0,a.al)(e,t),this.intersectsLineInfinite=!0}get intersectsLine(){return this._intersectsLineEnabled?this._intersectsLine:null}set intersectsLine(e){null!=e?((0,a.JG)(e,this._intersectsLine),this._intersectsLineEnabled=!0):this._intersectsLineEnabled=!1,this._syncIntersectsLine(),this._syncRenderer()}get intersectsLineInfinite(){return this._intersectsLineInfinite}set intersectsLineInfinite(e){this._intersectsLineInfinite=e,this._syncIntersectsLineInfinite()}get lineVerticalPlaneSegment(){return this._lineVerticalPlaneSegment}set lineVerticalPlaneSegment(e){this._lineVerticalPlaneSegment=null!=e?(0,a.JG)(e):null,this._syncLineVerticalPlane(),this._syncRenderer()}get pathVerticalPlane(){return this._pathVerticalPlaneBuffers}set pathVerticalPlane(e){this._pathVerticalPlaneBuffers=e,this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance(),this._syncRenderer()}get pointDistanceLine(){return this._pointDistanceLine}set pointDistanceLine(e){this._pointDistanceLine=null!=e?{origin:(0,s.d9)(e.origin),target:e.target?(0,s.d9)(e.target):null}:null,this._syncPointDistance(),this._syncRenderer()}_syncRenderer(){this.attached&&this.visible&&(this._intersectsLineEnabled||this._heightManifoldEnabled||null!=this._pointDistanceLine||null!=this._pathVerticalPlaneBuffers)?this._ensureRenderer():this._disposeRenderer()}_ensureRenderer(){null==this._renderer&&(this._renderer=new J({renderCoordsHelper:this.view.renderCoordsHelper,contrastControlEnabled:!0,_isDecoration:this.isDecoration,viewingMode:this.view.state.viewingMode}),this._syncStyle(),this._syncHeightManifold(),this._syncIntersectsLine(),this._syncIntersectsLineInfinite(),this._syncPathVerticalPlane(),this._syncLineVerticalPlane(),this._syncPointDistance(),this._syncAngleCutoff(),this.view._stage&&this.view._stage.addRenderPlugin(this._renderer))}_syncStyle(){null!=this._renderer&&(this._renderer.setParameters(this._style),null!=this._style.intersectsLineRadius&&(this._renderer.intersectsLineRadius=this._style.intersectsLineRadius))}_syncAngleCutoff(){null!=this._renderer&&this._renderer.setParameters({angleCutoff:this._angleCutoff})}_syncHeightManifold(){null!=this._renderer&&(this._renderer.heightManifoldEnabled=this._heightManifoldEnabled&&this.visible,this._heightManifoldEnabled&&(this._renderer.heightManifoldTarget=this._heightManifoldTarget))}_syncIntersectsLine(){null!=this._renderer&&(this._renderer.intersectsLineEnabled=this._intersectsLineEnabled&&this.visible,this._intersectsLineEnabled&&(this._renderer.intersectsLineSegment=this._intersectsLine))}_syncIntersectsLineInfinite(){null!=this._renderer&&(this._renderer.intersectsLineInfinite=this._intersectsLineInfinite)}_syncPathVerticalPlane(){null!=this._renderer&&(this._renderer.pathVerticalPlaneEnabled=null!=this._pathVerticalPlaneBuffers&&this.visible,null!=this._pathVerticalPlaneBuffers&&(this._renderer.pathVerticalPlaneBuffers=this._pathVerticalPlaneBuffers))}_syncLineVerticalPlane(){null!=this._renderer&&(this._renderer.lineVerticalPlaneEnabled=null!=this._lineVerticalPlaneSegment&&this.visible,null!=this._lineVerticalPlaneSegment&&(this._renderer.lineVerticalPlaneSegment=this._lineVerticalPlaneSegment))}_syncPointDistance(){if(null==this._renderer)return;const e=this._pointDistanceLine,t=null!=e;this._renderer.pointDistanceEnabled=t&&null!=e.target&&this.visible,t&&(this._renderer.pointDistanceOrigin=e.origin,null!=e.target&&(this._renderer.pointDistanceTarget=e.target))}_disposeRenderer(){null!=this._renderer&&this.view._stage&&(this.view._stage.removeRenderPlugin(this._renderer),this._renderer=null)}}const K=(0,s.Ue)()},86244:(e,t,n)=>{n.d(t,{l:()=>s});n(93169);var i=n(94172);class s{get isDecoration(){return this._isDecoration}set isDecoration(e){this._isDecoration=e}constructor(e){this._isDecoration=!1,this._attached=!1,this._resourcesCreated=!1,this._visible=!0,this.view=e.view,this._handle=(0,i.watch)((()=>e.view.ready),(e=>{this._resourcesCreated&&(e?this._createResources():this._destroyResources())}))}applyProperties(e){let t=!1;for(const n in e)n in this&&("attached"===n?t=e[n]:this[n]=e[n]);this.attached=t}destroy(){this.attached=!1,this._handle.remove()}get attached(){return this._attached}set attached(e){e!==this._attached&&this.view._stage&&(this._attached=e,this._attached&&!this._resourcesCreated?this._createResources():!this._attached&&this._resourcesCreated&&this._destroyResources(),this.onAttachedChange(e))}onAttachedChange(e){}get visible(){return this._visible}set visible(e){e!==this._visible&&(this._visible=e,this.attached&&this.updateVisibility(e))}_createResources(){this.createResources(),this._resourcesCreated=!0,this.updateVisibility(this.visible)}_destroyResources(){this.destroyResources(),this._resourcesCreated=!1}}},8084:(e,t,n)=>{n.d(t,{j:()=>_});var i,s,a,r,l,o,c=n(30168),h=n(54943),d=n(96415),u=n(49450),p=n(58406),f=n(98634),g=n(19253);function _(e,t){const n=e.fragment;n.include(h.K),e.include(d.GZ),n.uniforms.add(new p.p("globalAlpha",(e=>e.globalAlpha)),new u.J("glowColor",(e=>e.glowColor)),new p.p("glowWidth",((e,t)=>e.glowWidth*t.camera.pixelRatio)),new p.p("glowFalloff",(e=>e.glowFalloff)),new u.J("innerColor",(e=>e.innerColor)),new p.p("innerWidth",((e,t)=>e.innerWidth*t.camera.pixelRatio)),new g.A("depthMap",((e,t)=>{var n;return null===(n=t.depth)||void 0===n?void 0:n.attachment})),new g.A("normalMap",(e=>e.normals)),new g.A("frameColor",((e,t)=>t.mainColor))),n.code.add((0,f.H)(i||(i=(0,c.Z)(["vec4 blendPremultiplied(vec4 source, vec4 dest) {\nfloat oneMinusSourceAlpha = 1.0 - source.a;\nreturn vec4(\nsource.rgb + dest.rgb * oneMinusSourceAlpha,\nsource.a + dest.a * oneMinusSourceAlpha\n);\n}"])))),n.code.add((0,f.H)(s||(s=(0,c.Z)(["vec4 premultipliedColor(vec3 rgb, float alpha) {\nreturn vec4(rgb * alpha, alpha);\n}"])))),n.code.add((0,f.H)(a||(a=(0,c.Z)(["vec4 laserlineProfile(float dist) {\nif (dist > glowWidth) {\nreturn vec4(0.0);\n}\nfloat innerAlpha = (1.0 - smoothstep(0.0, innerWidth, dist));\nfloat glowAlpha = pow(max(0.0, 1.0 - dist / glowWidth), glowFalloff);\nreturn blendPremultiplied(\npremultipliedColor(innerColor, innerAlpha),\npremultipliedColor(glowColor, glowAlpha)\n);\n}"])))),n.code.add((0,f.H)(r||(r=(0,c.Z)(["bool laserlineReconstructFromDepth(out vec3 pos, out vec3 normal, out float angleCutoffAdjust, out float depthDiscontinuityAlpha) {\nfloat depth = depthFromTexture(depthMap, uv);\nif (depth == 1.0) {\nreturn false;\n}\nfloat linearDepth = linearizeDepth(depth);\npos = reconstructPosition(gl_FragCoord.xy, linearDepth);\nfloat minStep = 6e-8;\nfloat depthStep = clamp(depth + minStep, 0.0, 1.0);\nfloat linearDepthStep = linearizeDepth(depthStep);\nfloat depthError = abs(linearDepthStep - linearDepth);\nif (depthError > 0.2) {\nnormal = texture(normalMap, uv).xyz * 2.0 - 1.0;\nangleCutoffAdjust = 0.004;\n} else {\nnormal = normalize(cross(dFdx(pos), dFdy(pos)));\nangleCutoffAdjust = 0.0;\n}\nfloat ddepth = fwidth(linearDepth);\ndepthDiscontinuityAlpha = 1.0 - smoothstep(0.0, 0.01, -ddepth / linearDepth);\nreturn true;\n}"])))),t.contrastControlEnabled?(n.uniforms.add(new p.p("globalAlphaContrastBoost",(e=>null!=e.globalAlphaContrastBoost?e.globalAlphaContrastBoost:1))),n.code.add((0,f.H)(l||(l=(0,c.Z)(["float rgbToLuminance(vec3 color) {\nreturn dot(vec3(0.2126, 0.7152, 0.0722), color);\n}\nvec4 laserlineOutput(vec4 color) {\nfloat backgroundLuminance = rgbToLuminance(texture(frameColor, uv).rgb);\nfloat alpha = clamp(globalAlpha * max(backgroundLuminance * globalAlphaContrastBoost, 1.0), 0.0, 1.0);\nreturn color * alpha;\n}"]))))):n.code.add((0,f.H)(o||(o=(0,c.Z)(["vec4 laserlineOutput(vec4 color) {\nreturn color * globalAlpha;\n}"]))))}}}]);
//# sourceMappingURL=96026.f6c9561e.chunk.js.map