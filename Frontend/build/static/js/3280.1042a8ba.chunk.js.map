{"version":3,"file":"static/js/3280.1042a8ba.chunk.js","mappings":";kPAAO,MAAMA,EACH,SAGGC,EACL,OCmBKC,GAAGC,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,qFAUuE,kBAMnF,uBAKkC,YAOcH,oBAGX,kCAUJ,aAKK,uCAUD,EAkBvCI,iBAAAA,IACEC,EAAAA,EAAAA,GAAmBC,MAGrBC,iBAAAA,IACEC,EAAAA,EAAAA,GAAuBF,MAGzBG,gBAAAA,IACEC,EAAAA,EAAAA,GAAmBJ,MAGrBK,kBAAAA,IACEC,EAAAA,EAAAA,GAAsBN,MAGxBO,oBAAAA,IACEC,EAAAA,EAAAA,GAAsBR,MAWxB,cAAMS,SACEC,EAAAA,EAAAA,GAAmBV,OAEzBW,EAAAA,EAAAA,GAAaX,KAAKY,UASpBC,MAAAA,GACE,MAAM,WACJC,EAAU,KACVC,EAAI,SACJC,EAAQ,QACRC,EAAO,MACPC,EAAK,YACLC,EAAW,KACXC,EAAI,MACJC,EAAK,KACLC,EAAI,YACJC,GACEvB,KAEEwB,EAASL,EAAsC,KAAxBE,GAASC,GAAQ,KAE9C,OACEG,EAAAA,EAAAA,GAACC,EAAAA,EAAoB,CAAAC,IAAA,2CAACX,SAAUA,IAC9BS,EAAAA,EAAAA,GAAA,kBAAAE,IAAA,2CACEb,WAA2B,UAAfA,EAAyB,QAAU,eAC/Cc,MAAOnC,EACPuB,SAAUA,EACVO,YAAaA,EAAc,QAAU,KACrCM,UAAWT,EACXL,KAAMA,EACNM,MAAOA,EACPJ,QAASA,EACTa,IAAMlB,IACJZ,KAAKY,SAAWA,CAAQ,EAE1BmB,OAAO,EACPb,MAAOA,EACPM,MAAOA,EACPQ,KAAK,SACLC,MAAM,QAELjC,KAAKmB,YAAcnB,KAAKsB,KAAO,qDC9K3B","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/fab/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/fab/fab.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/fab/fab.scss?tag=calcite-fab&encapsulation=shadow"],"sourcesContent":["export const CSS = {\n  button: \"button\",\n};\n\nexport const ICONS = {\n  plus: \"plus\",\n} as const;\n","import { Component, Element, h, Method, Prop, VNode } from \"@stencil/core\";\nimport { focusElement } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Appearance, Kind, Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CSS, ICONS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-fab\",\n  styleUrl: \"fab.scss\",\n  shadow: true,\n})\nexport class Fab implements InteractiveComponent, LoadableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Specifies the appearance style of the component.\n   */\n  @Prop({ reflect: true }) appearance: Extract<\"solid\" | \"outline-fill\", Appearance> = \"solid\";\n\n  /**\n   * Specifies the kind of the component, which will apply to border and background.\n   */\n  @Prop({ reflect: true }) kind: Extract<\"brand\" | \"danger\" | \"inverse\" | \"neutral\", Kind> =\n    \"brand\";\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Specifies an icon to display.\n   *\n   * @default \"plus\"\n   */\n  @Prop({ reflect: true }) icon: IconNameOrString = ICONS.plus;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * Accessible name for the component.\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies text to accompany the component's icon.\n   */\n  @Prop() text: string;\n\n  /**\n   * When `true`, displays the `text` value in the component.\n   */\n  @Prop({ reflect: true }) textEnabled = false;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteFabElement;\n\n  private buttonEl: HTMLElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusElement(this.buttonEl);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const {\n      appearance,\n      kind,\n      disabled,\n      loading,\n      scale,\n      textEnabled,\n      icon,\n      label,\n      text,\n      iconFlipRtl,\n    } = this;\n\n    const title = !textEnabled ? label || text || null : null;\n\n    return (\n      <InteractiveContainer disabled={disabled}>\n        <calcite-button\n          appearance={appearance === \"solid\" ? \"solid\" : \"outline-fill\"}\n          class={CSS.button}\n          disabled={disabled}\n          iconFlipRtl={iconFlipRtl ? \"start\" : null}\n          iconStart={icon}\n          kind={kind}\n          label={label}\n          loading={loading}\n          ref={(buttonEl): void => {\n            this.buttonEl = buttonEl;\n          }}\n          round={true}\n          scale={scale}\n          title={title}\n          type=\"button\"\n          width=\"auto\"\n        >\n          {this.textEnabled ? this.text : null}\n        </calcite-button>\n      </InteractiveContainer>\n    );\n  }\n}\n",":host {\n  @apply flex bg-transparent;\n}\n\n@include disabled();\n\ncalcite-button {\n  @apply shadow-2;\n  &:hover {\n    @apply shadow-2-lg;\n  }\n  &:active {\n    @apply shadow-2-sm;\n  }\n}\n\n@include base-component();\n"],"names":["CSS","ICONS","Fab","proxyCustomElement","HTMLElement","connectedCallback","connectInteractive","this","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectInteractive","setFocus","componentFocusable","focusElement","buttonEl","render","appearance","kind","disabled","loading","scale","textEnabled","icon","label","text","iconFlipRtl","title","h","InteractiveContainer","key","class","iconStart","ref","round","type","width"],"sourceRoot":""}