{"version":3,"file":"static/js/59130.e9c0add3.chunk.js","mappings":"6OAIoMA,eAAeC,EAAEC,EAAED,EAAEE,GAAE,IAAAC,EAAAC,EAAC,MAAMC,GAAEC,EAAAA,EAAAA,IAAEL,GAAGM,EAAEP,EAAEQ,SAASR,EAAES,gBAAgBF,EAAEE,cAAcC,KAAKC,UAAUX,EAAES,gBAAgB,MAAMG,EAAE,IAAIL,EAAEM,aAAY,EAAGC,EAAE,QAAQC,GAAEC,EAAAA,EAAAA,IAAE,IAAIX,EAAEY,SAASL,IAAIM,GAAEC,EAAAA,EAAAA,IAAEJ,EAAE,IAAIb,EAAEkB,OAAO,SAASC,EAAC,GAAAC,OAAIjB,EAAEkB,KAAI,6BAA4BC,KAAKC,SAASC,EAAAA,EAAAA,GAAEL,EAAEH,GAAGS,EAAEC,EAAAA,EAAEC,SAASJ,GAAG,OAAOE,EAAEG,aAAuF,QAA3E3B,EAAe,QAAfC,EAACuB,EAAEG,oBAAY,IAAA1B,OAAA,EAAdA,EAAgB2B,KAAKL,IAAC,CAAIM,QAAQN,EAAEO,GAAGC,eAAeR,EAAEQ,0BAAkB,IAAA/B,EAAAA,EAAE,GAAGwB,CAAC,CAAC5B,eAAeG,EAAE0B,EAAE5B,EAAEE,GAAG,IAAIF,EAAEmC,WAAW,MAAM,IAAIlC,EAAAA,EAAE,2DAA2D,sBAAsB,MAAMI,GAAEC,EAAAA,EAAAA,IAAEsB,GAAGrB,EAAEP,EAAEQ,SAASR,EAAES,gBAAgBF,EAAEE,cAAcC,KAAKC,UAAUX,EAAES,gBAAgB,MAAMG,GAAEO,EAAAA,EAAAA,IAAEd,EAAEY,MAAM,CAACA,OAAMD,EAAAA,EAAAA,IAAE,IAAIT,EAAEM,aAAY,EAAGd,OAAM,EAAGe,EAAE,YAAYZ,EAAEkB,OAAO,SAASL,EAAC,GAAAO,OAAIjB,EAAEkB,KAAI,6BAA4BC,KAAKN,SAASQ,EAAAA,EAAAA,GAAEX,EAAEH,GAAG,OAAOM,EAAEA,EAAEkB,UAAU,IAAI,C","sources":["../node_modules/@arcgis/core/rest/networks/validateNetworkTopology.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport t from\"../../request.js\";import o from\"../../core/Error.js\";import{parseUrl as i,encode as e,asValidOptions as r}from\"../utils.js\";import s from\"./support/ValidateNetworkTopologyResult.js\";async function a(o,a,n){const d=i(o),l=a.toJSON();a.validationSet&&(l.validationSet=JSON.stringify(a.validationSet));const u={...l,returnEdits:!0,f:\"json\"},p=e({...d.query,...u}),m=r(p,{...n,method:\"post\"}),v=`${d.path}/validateNetworkTopology`,{data:y}=await t(v,m),c=s.fromJSON(y);return c.serviceEdits=c.serviceEdits?.map((t=>({layerId:t.id,editedFeatures:t.editedFeatures})))??[],c}async function n(s,a,n){if(!a.gdbVersion)throw new o(\"submit-validate-network-topology-job:missing-gdb-version\",\"version is missing\");const d=i(s),l=a.toJSON();a.validationSet&&(l.validationSet=JSON.stringify(a.validationSet));const u=r(d.query,{query:e({...l,returnEdits:!0,async:!0,f:\"json\"}),...n,method:\"post\"}),p=`${d.path}/validateNetworkTopology`,{data:m}=await t(p,u);return m?m.statusUrl:null}export{n as submitValidateNetworkTopologyJob,a as validateNetworkTopology};\n"],"names":["async","a","o","n","_c$serviceEdits$map","_c$serviceEdits","d","i","l","toJSON","validationSet","JSON","stringify","u","returnEdits","f","p","e","query","m","r","method","v","concat","path","data","y","t","c","s","fromJSON","serviceEdits","map","layerId","id","editedFeatures","gdbVersion","statusUrl"],"sourceRoot":""}