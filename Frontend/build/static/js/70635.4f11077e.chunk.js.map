{"version":3,"file":"static/js/70635.4f11077e.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/table-row/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/table-row/table-row.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/table-row/table-row.scss?tag=calcite-table-row&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/interactive.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/table-cell/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/table-cell/table-cell.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/table-cell/table-cell.scss?tag=calcite-table-cell&encapsulation=shadow"],"sourcesContent":["export const CSS = {\n  lastVisibleRow: \"last-visible-row\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { LocalizedComponent } from \"../../utils/locale\";\nimport { Alignment, Scale, SelectionMode } from \"../interfaces\";\nimport { focusElementInGroup, FocusElementInGroupDestination } from \"../../utils/dom\";\nimport { RowType, TableInteractionMode, TableRowFocusEvent } from \"../table/interfaces\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { getIconScale } from \"../../utils/component\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding `calcite-table-cell` or `calcite-table-header` elements.\n */\n\n@Component({\n  tag: \"calcite-table-row\",\n  styleUrl: \"table-row.scss\",\n  shadow: true,\n})\nexport class TableRow implements InteractiveComponent, LocalizedComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n  /** Specifies the alignment of the component. */\n  @Prop({ reflect: true }) alignment: Alignment;\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** When `true`, the component is selected. */\n  @Prop({ reflect: true }) selected = false;\n\n  /** @internal */\n  @Prop({ mutable: true }) cellCount: number;\n\n  /** @internal */\n  @Prop() interactionMode: TableInteractionMode = \"interactive\";\n\n  /** @internal */\n  @Prop() lastVisibleRow: boolean;\n\n  /** @internal */\n  @Prop() rowType: RowType;\n\n  /** @internal */\n  @Prop() numbered = false;\n\n  /** @internal */\n  @Prop() positionSection: number;\n\n  /** @internal */\n  @Prop() positionSectionLocalized: string;\n\n  /** @internal */\n  @Prop() positionAll: number;\n\n  /** @internal */\n  @Prop() readCellContentsToAT: boolean;\n\n  /** @internal */\n  @Prop() scale: Scale;\n\n  /** @internal */\n  @Prop() selectionMode: Extract<\"multiple\" | \"single\" | \"none\", SelectionMode> = \"none\";\n\n  /** @internal */\n  @Prop() selectedRowCount: number;\n\n  /** @internal */\n  @Prop() selectedRowCountLocalized: string;\n\n  /** @internal */\n  @Prop() bodyRowCount: number;\n\n  @Watch(\"bodyRowCount\")\n  @Watch(\"scale\")\n  @Watch(\"selected\")\n  @Watch(\"selectedRowCount\")\n  @Watch(\"interactionMode\")\n  handleCellChanges(): void {\n    if (this.tableRowEl && this.rowCells.length > 0) {\n      this.updateCells();\n    }\n  }\n\n  @Watch(\"numbered\")\n  @Watch(\"selectionMode\")\n  handleDelayedCellChanges(): void {\n    if (this.tableRowEl && this.rowCells.length > 0) {\n      requestAnimationFrame(() => this.updateCells());\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentDidLoad(): void {\n    if (this.tableRowEl && this.rowCells.length > 0) {\n      this.updateCells();\n    }\n  }\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTableRowElement;\n\n  private rowCells: (HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement)[] = [];\n\n  private tableRowEl: HTMLTableRowElement;\n\n  private tableRowSlotEl: HTMLSlotElement;\n\n  @State() effectiveLocale = \"\";\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the selected state of the component changes.\n   */\n  @Event({ cancelable: false }) calciteTableRowSelect: EventEmitter<void>;\n\n  /** @internal */\n  @Event({ cancelable: false })\n  calciteInternalTableRowFocusRequest: EventEmitter<TableRowFocusEvent>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalTableRowFocusChange\", { target: \"document\" })\n  calciteInternalTableRowFocusChangeHandler(event: CustomEvent): void {\n    if ((event.target as Element).contains(this.el)) {\n      const position = event.detail.cellPosition;\n      const rowPosition = event.detail.rowPosition;\n      const destination = event.detail.destination;\n      const lastCell = event.detail.lastCell;\n\n      if (rowPosition === this.positionAll) {\n        if (this.disabled) {\n          const deflectDirection =\n            destination === \"last\" ? \"previous\" : destination === \"first\" ? \"next\" : destination;\n          this.emitTableRowFocusRequest(position, this.positionAll, deflectDirection);\n          return;\n        }\n        const cellPosition = lastCell\n          ? this.rowCells[this.rowCells.length - 1]\n          : this.rowCells?.find((_, index) => index + 1 === position);\n\n        if (cellPosition) {\n          cellPosition.setFocus();\n        }\n      }\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.interactionMode !== \"interactive\") {\n      return;\n    }\n    const el = event.target as HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement;\n    const key = event.key;\n    const isControl = event.ctrlKey;\n    const cells = this.rowCells;\n    if (el.matches(\"calcite-table-cell\") || el.matches(\"calcite-table-header\")) {\n      switch (key) {\n        case \"ArrowUp\":\n          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, \"previous\");\n          event.preventDefault();\n          break;\n        case \"ArrowDown\":\n          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, \"next\");\n          event.preventDefault();\n          break;\n        case \"PageUp\":\n          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, \"first\");\n          event.preventDefault();\n          break;\n        case \"PageDown\":\n          this.emitTableRowFocusRequest(el.positionInRow, this.positionAll, \"last\");\n          event.preventDefault();\n          break;\n        case \"ArrowLeft\":\n          focusElementInGroup(cells, el, \"previous\", false);\n          event.preventDefault();\n          break;\n        case \"ArrowRight\":\n          focusElementInGroup(cells, el, \"next\", false);\n          event.preventDefault();\n          break;\n        case \"Home\":\n          if (isControl) {\n            this.emitTableRowFocusRequest(1, this.positionAll, \"first\");\n            event.preventDefault();\n          } else {\n            focusElementInGroup(cells, el, \"first\", false);\n            event.preventDefault();\n          }\n          break;\n        case \"End\":\n          if (isControl) {\n            this.emitTableRowFocusRequest(this.rowCells?.length, this.positionAll, \"last\", true);\n            event.preventDefault();\n          } else {\n            focusElementInGroup(cells, el, \"last\", false);\n            event.preventDefault();\n          }\n          break;\n      }\n    }\n  };\n\n  private emitTableRowFocusRequest = (\n    cellPosition: number,\n    rowPosition: number,\n    destination: FocusElementInGroupDestination,\n    lastCell?: boolean,\n  ): void => {\n    this.calciteInternalTableRowFocusRequest.emit({\n      cellPosition,\n      rowPosition,\n      destination,\n      lastCell,\n    });\n  };\n\n  private updateCells = (): void => {\n    const alignment = this.alignment\n      ? this.alignment\n      : this.rowType !== \"head\"\n        ? \"center\"\n        : \"start\";\n    const slottedCells = this.tableRowSlotEl\n      ?.assignedElements({ flatten: true })\n      ?.filter(\n        (el: HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement) =>\n          el.matches(\"calcite-table-cell\") || el.matches(\"calcite-table-header\"),\n      );\n\n    const renderedCells = Array.from(\n      this.tableRowEl?.querySelectorAll(\"calcite-table-header, calcite-table-cell\"),\n    )?.filter(\n      (el: HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement) =>\n        el.numberCell || el.selectionCell,\n    );\n\n    const cells = renderedCells ? renderedCells.concat(slottedCells) : slottedCells;\n\n    if (cells.length > 0) {\n      cells?.forEach((cell: HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement, index) => {\n        cell.interactionMode = this.interactionMode;\n        cell.lastCell = index === cells.length - 1;\n        cell.parentRowAlignment = alignment;\n        cell.parentRowIsSelected = this.selected;\n        cell.parentRowType = this.rowType;\n        cell.positionInRow = index + 1;\n        cell.scale = this.scale;\n\n        if (cell.nodeName === \"CALCITE-TABLE-CELL\") {\n          (cell as HTMLCalciteTableCellElement).readCellContentsToAT = this.readCellContentsToAT;\n          (cell as HTMLCalciteTableCellElement).disabled = this.disabled;\n        }\n      });\n    }\n\n    this.rowCells =\n      (cells as (HTMLCalciteTableCellElement | HTMLCalciteTableHeaderElement)[]) || [];\n    this.cellCount = cells?.length;\n  };\n\n  private handleSelectionOfRow = (): void => {\n    this.calciteTableRowSelect.emit();\n  };\n\n  private handleKeyboardSelection = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      if (event.key === \" \") {\n        event.preventDefault();\n      }\n      this.handleSelectionOfRow();\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderSelectionIcon(): VNode {\n    const icon =\n      this.selectionMode === \"multiple\" && this.selected\n        ? \"check-square-f\"\n        : this.selectionMode === \"multiple\"\n          ? \"square\"\n          : this.selected\n            ? \"circle-f\"\n            : \"circle\";\n\n    return <calcite-icon icon={icon} scale={getIconScale(this.scale)} />;\n  }\n\n  renderSelectableCell(): VNode {\n    return this.rowType === \"head\" ? (\n      <calcite-table-header\n        alignment=\"center\"\n        bodyRowCount={this.bodyRowCount}\n        key=\"selection-head\"\n        onClick={this.selectionMode === \"multiple\" && this.handleSelectionOfRow}\n        onKeyDown={this.selectionMode === \"multiple\" && this.handleKeyboardSelection}\n        parentRowAlignment={this.alignment}\n        selectedRowCount={this.selectedRowCount}\n        selectedRowCountLocalized={this.selectedRowCountLocalized}\n        selectionCell={true}\n        selectionMode={this.selectionMode}\n      />\n    ) : this.rowType === \"body\" ? (\n      <calcite-table-cell\n        alignment=\"center\"\n        key=\"selection-body\"\n        onClick={this.handleSelectionOfRow}\n        onKeyDown={this.handleKeyboardSelection}\n        parentRowAlignment={this.alignment}\n        parentRowIsSelected={this.selected}\n        parentRowPositionLocalized={this.positionSectionLocalized}\n        selectionCell={true}\n      >\n        {this.renderSelectionIcon()}\n      </calcite-table-cell>\n    ) : (\n      <calcite-table-cell\n        alignment=\"center\"\n        key=\"selection-foot\"\n        parentRowAlignment={this.alignment}\n        selectionCell={true}\n      />\n    );\n  }\n\n  renderNumberedCell(): VNode {\n    return this.rowType === \"head\" ? (\n      <calcite-table-header\n        alignment=\"center\"\n        key=\"numbered-head\"\n        numberCell={true}\n        parentRowAlignment={this.alignment}\n      />\n    ) : this.rowType === \"body\" ? (\n      <calcite-table-cell\n        alignment=\"center\"\n        key=\"numbered-body\"\n        numberCell={true}\n        parentRowAlignment={this.alignment}\n      >\n        {this.positionSectionLocalized}\n      </calcite-table-cell>\n    ) : (\n      <calcite-table-cell\n        alignment=\"center\"\n        key=\"numbered-foot\"\n        numberCell={true}\n        parentRowAlignment={this.alignment}\n      />\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <tr\n            aria-disabled={this.disabled}\n            aria-rowindex={this.positionAll + 1}\n            aria-selected={this.selected}\n            class={{ [CSS.lastVisibleRow]: this.lastVisibleRow }}\n            onKeyDown={this.keyDownHandler}\n            ref={(el) => (this.tableRowEl = el)}\n          >\n            {this.numbered && this.renderNumberedCell()}\n            {this.selectionMode !== \"none\" && this.renderSelectableCell()}\n            <slot\n              onSlotchange={this.updateCells}\n              ref={(el) => (this.tableRowSlotEl = el as HTMLSlotElement)}\n            />\n          </tr>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-table-row-background: Specifies the background color of the component.\n * @prop --calcite-table-row-border-color: Specifies the border color of the component.\n */\n\n:host {\n  --calcite-internal-table-row-background: var(--calcite-table-row-background, var(--calcite-color-foreground-1));\n  --calcite-internal-table-row-border-color: var(--calcite-table-row-border-color, transparent);\n  @apply contents;\n}\n\n@include base-component();\n\n@include disabled() {\n  tr {\n    @apply opacity-disabled pointer-events-none;\n  }\n}\n\ntr {\n  border-block-end: 1px solid var(--calcite-internal-table-row-border-color);\n  background-color: var(--calcite-internal-table-row-background);\n}\n\ntr.last-visible-row {\n  border-block-end: 0;\n}\n","import { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\nimport { getUserAgentString } from \"./browser\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\n// ⚠️ browser-sniffing is not a best practice and should be avoided ⚠️\nconst isFirefox = /firefox/i.test(getUserAgentString());\n\ntype ParentElement<T extends HTMLElement = HTMLElement> = T | null;\n\nconst disabledElementToParent: WeakMap<InteractiveHTMLElement, ParentElement> | null = isFirefox\n  ? new WeakMap()\n  : null;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  const { disabled } = interactiveElement;\n\n  if (disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n\n  if (isFirefox) {\n    const currentParent = getParentElement(component);\n    const trackedParent = disabledElementToParent.get(component.el);\n\n    if (trackedParent !== currentParent) {\n      removeInteractionListeners(trackedParent);\n      disabledElementToParent.set(component.el, currentParent);\n    }\n\n    addInteractionListeners(disabledElementToParent.get(component.el));\n    return;\n  }\n\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction getParentElement(component: InteractiveComponent): ParentElement {\n  return (\n    component.el.parentElement || component.el\n  ); /* assume element is host if it has no parent when connected */\n}\n\nfunction isInteractiveHTMLElement(el: Element): el is InteractiveHTMLElement {\n  return \"disabled\" in el;\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n\n  if (isFirefox) {\n    const parent = disabledElementToParent.get(component.el);\n\n    let hasDisabledSiblingElements = false;\n\n    if (parent?.children) {\n      for (const child of parent.children) {\n        if (isInteractiveHTMLElement(child) && child.disabled && child !== component.el) {\n          hasDisabledSiblingElements = true;\n          break;\n        }\n      }\n    }\n\n    if (!hasDisabledSiblingElements) {\n      removeInteractionListeners(parent);\n    }\n\n    disabledElementToParent.delete(component.el);\n    return;\n  }\n\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\n/**\n * This utility helps disable components consistently in Firefox.\n *\n * It needs to be called in `connectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function connectInteractive(component: InteractiveComponent): void {\n  if (!component.disabled || !isFirefox) {\n    return;\n  }\n\n  blockInteraction(component);\n}\n\n/**\n * This utility restores interactivity to disabled components consistently in Firefox.\n *\n * It needs to be called in `disconnectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function disconnectInteractive(component: InteractiveComponent): void {\n  if (!isFirefox) {\n    return;\n  }\n\n  restoreInteraction(component);\n}\n\nexport interface InteractiveContainerOptions extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport function InteractiveContainer(\n  { disabled }: InteractiveContainerOptions,\n  children: VNode[],\n): FunctionalComponent {\n  return (\n    <div class={CSS.container} inert={disabled}>\n      {...children}\n    </div>\n  );\n}\n","export const CSS = {\n  contentCell: \"content-cell\",\n  numberCell: \"number-cell\",\n  footerCell: \"footer-cell\",\n  selectionCell: \"selection-cell\",\n  selectedCell: \"selected-cell\",\n  assistiveText: \"assistive-text\",\n  lastCell: \"last-cell\",\n  staticCell: \"static-cell\",\n};\n","import { Component, Element, h, Host, Method, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { Alignment, Scale } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { RowType, TableInteractionMode } from \"../table/interfaces\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport { CSS } from \"./resources\";\nimport { TableCellMessages } from \"./assets/table-cell/t9n\";\n\n/**\n * @slot - A slot for adding content, usually text content.\n */\n@Component({\n  tag: \"calcite-table-cell\",\n  styleUrl: \"table-cell.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class TableCell\n  implements InteractiveComponent, LocalizedComponent, LoadableComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the alignment of the component. */\n  @Prop({ reflect: true }) alignment: Alignment = \"start\";\n\n  /** Specifies the number of columns the component should span. */\n  @Prop({ reflect: true }) colSpan: number;\n\n  /** Specifies the number of rows the component should span. */\n  @Prop({ reflect: true }) rowSpan: number;\n\n  /** @internal */\n  @Prop() disabled: boolean;\n\n  /** @internal */\n  @Prop() interactionMode: TableInteractionMode = \"interactive\";\n\n  /** @internal */\n  @Prop() lastCell: boolean;\n\n  /** @internal */\n  @Prop() numberCell: boolean;\n\n  /** @internal */\n  @Prop() parentRowIsSelected: boolean;\n\n  @Watch(\"parentRowIsSelected\")\n  onSelectedChange(): void {\n    this.updateScreenReaderSelectionText();\n  }\n\n  /** @internal */\n  @Prop() parentRowAlignment: Alignment = \"start\";\n\n  /** @internal */\n  @Prop() parentRowPositionLocalized: string;\n\n  /** @internal */\n  @Prop() parentRowType: RowType;\n\n  /** @internal */\n  @Prop() positionInRow: number;\n\n  /** @internal */\n  @Prop() readCellContentsToAT: boolean;\n\n  /** @internal */\n  @Prop() scale: Scale = \"m\";\n\n  /** @internal */\n  @Prop() selectionCell: boolean;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: TableCellMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<TableCellMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTableCellElement;\n\n  @State() contentsText = \"\";\n\n  @State() defaultMessages: TableCellMessages;\n\n  @State() focused = false;\n\n  @State() selectionText = \"\";\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  private containerEl: HTMLTableCellElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n    this.updateScreenReaderContentsText();\n    this.updateScreenReaderSelectionText();\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectInteractive(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.containerEl.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private updateScreenReaderSelectionText(): void {\n    const selectedText = `${this.messages?.row} ${this.parentRowPositionLocalized} ${this.messages?.selected} ${this.messages?.keyboardDeselect}`;\n    const unselectedText = `${this.messages?.row} ${this.parentRowPositionLocalized} ${this.messages?.unselected} ${this.messages?.keyboardSelect}`;\n    this.selectionText = this.parentRowIsSelected ? selectedText : unselectedText;\n  }\n\n  private updateScreenReaderContentsText = (): void => {\n    this.contentsText = this.el.textContent;\n  };\n\n  private onContainerBlur = (): void => {\n    this.focused = false;\n  };\n\n  private onContainerFocus = (): void => {\n    this.focused = true;\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const staticCell =\n      this.disabled ||\n      (this.interactionMode === \"static\" &&\n        (!this.selectionCell || (this.selectionCell && this.parentRowType === \"foot\")));\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <td\n            aria-disabled={this.disabled}\n            class={{\n              [CSS.footerCell]: this.parentRowType === \"foot\",\n              [CSS.contentCell]: !this.numberCell && !this.selectionCell,\n              [CSS.numberCell]: this.numberCell,\n              [CSS.selectionCell]: this.selectionCell,\n              [CSS.selectedCell]: this.parentRowIsSelected,\n              [CSS.lastCell]: this.lastCell && (!this.rowSpan || (this.colSpan && !!this.rowSpan)),\n              [CSS_UTILITY.rtl]: dir === \"rtl\",\n              [CSS.staticCell]: staticCell,\n              [this.parentRowAlignment]:\n                this.parentRowAlignment === \"start\" || this.parentRowAlignment === \"end\",\n            }}\n            colSpan={this.colSpan}\n            onBlur={this.onContainerBlur}\n            onFocus={this.onContainerFocus}\n            ref={(el) => (this.containerEl = el)}\n            role={this.interactionMode === \"interactive\" ? \"gridcell\" : \"cell\"}\n            rowSpan={this.rowSpan}\n            tabIndex={staticCell ? -1 : 0}\n          >\n            {(this.selectionCell || this.readCellContentsToAT) && (\n              <span\n                aria-hidden={true}\n                aria-live={this.focused ? \"polite\" : \"off\"}\n                class={CSS.assistiveText}\n              >\n                {this.selectionCell && this.selectionText}\n                {this.readCellContentsToAT && !this.selectionCell && this.contentsText}\n              </span>\n            )}\n            <slot onSlotchange={this.updateScreenReaderContentsText} />\n          </td>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-table-cell-background: Specifies the background color of the component.\n */\n\n:host {\n  --calcite-internal-table-cell-background: var(--calcite-table-cell-background, transparent);\n  @apply contents;\n}\n\n:host([alignment=\"center\"]) td:not(.selection-cell):not(.number-cell) {\n  @apply text-center;\n}\n\n:host([alignment=\"end\"]) td:not(.selection-cell):not(.number-cell) {\n  @apply text-end;\n}\n\n.assistive-text {\n  @apply sr-only;\n}\n\ntd {\n  @apply text-start align-middle text-color-1 whitespace-normal;\n  background: var(--calcite-internal-table-cell-background);\n  font-size: var(--calcite-internal-table-cell-font-size);\n  border-inline-end: 1px solid var(--calcite-color-border-3);\n  padding: var(--calcite-internal-table-cell-padding);\n\n  &:not(.static-cell) {\n    @apply focus-base;\n    &:focus {\n      @apply focus-inset;\n    }\n  }\n}\n\ntd.start.content-cell {\n  @apply align-top;\n}\n\ntd.end.content-cell {\n  @apply align-bottom;\n}\n\ntd.last-cell {\n  border-inline-end: 0;\n}\n\n.number-cell {\n  @apply bg-foreground-2;\n}\n\n.footer-cell {\n  @apply bg-background font-medium text-color-1;\n  border-block-start: 1px solid var(--calcite-color-border-3);\n}\n\n.number-cell,\n.selection-cell {\n  @apply text-center;\n  border-inline-end: 1px solid var(--calcite-color-border-3);\n  inline-size: 2rem;\n  min-inline-size: 2rem;\n}\n\n.selection-cell {\n  @apply text-color-3;\n  inset-inline-start: 2rem;\n  &:not(.footer-cell) {\n    @apply cursor-pointer;\n  }\n}\n\n.selected-cell:not(.number-cell):not(.footer-cell) {\n  --calcite-internal-table-cell-background: var(--calcite-color-foreground-current);\n}\n\n.selection-cell.selected-cell {\n  box-shadow: inset 0.25rem 0 0 0 var(--calcite-color-brand);\n  color: var(--calcite-color-brand);\n  & calcite-icon {\n    color: var(--calcite-color-brand);\n  }\n}\n\n.calcite--rtl.selection-cell.selected-cell {\n  box-shadow: inset -0.25rem 0 0 0 var(--calcite-color-brand);\n}\n\n.selection-cell {\n  @apply align-middle;\n  & ::slotted(calcite-icon) {\n    @apply pointer-events-none mt-1;\n  }\n}\n\n@include disabled();\n"],"names":["CSS","TableRow","proxyCustomElement","HTMLElement","rowCells","keyDownHandler","event","this","interactionMode","el","target","key","isControl","ctrlKey","cells","matches","emitTableRowFocusRequest","positionInRow","positionAll","preventDefault","focusElementInGroup","_this$rowCells","length","cellPosition","rowPosition","destination","lastCell","calciteInternalTableRowFocusRequest","emit","updateCells","_this$tableRowSlotEl","_Array$from","_this$tableRowEl","alignment","rowType","slottedCells","tableRowSlotEl","assignedElements","flatten","filter","renderedCells","Array","from","tableRowEl","querySelectorAll","numberCell","selectionCell","concat","forEach","cell","index","parentRowAlignment","parentRowIsSelected","selected","parentRowType","scale","nodeName","readCellContentsToAT","disabled","cellCount","handleSelectionOfRow","calciteTableRowSelect","handleKeyboardSelection","isActivationKey","handleCellChanges","handleDelayedCellChanges","requestAnimationFrame","componentDidLoad","connectedCallback","connectInteractive","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectInteractive","calciteInternalTableRowFocusChangeHandler","contains","position","detail","_this$rowCells2","deflectDirection","find","_","setFocus","renderSelectionIcon","icon","selectionMode","h","getIconScale","renderSelectableCell","bodyRowCount","onClick","onKeyDown","selectedRowCount","selectedRowCountLocalized","parentRowPositionLocalized","positionSectionLocalized","renderNumberedCell","render","Host","InteractiveContainer","class","lastVisibleRow","ref","numbered","onSlotchange","isFirefox","test","getUserAgentString","disabledElementToParent","WeakMap","interceptedClick","prototype","click","call","onPointerDown","interactiveElement","get","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","component","setAttribute","document","activeElement","blur","blockInteraction","restoreInteraction","removeAttribute","currentParent","parentElement","getParentElement","trackedParent","removeInteractionListeners","set","addInteractionListeners","element","addEventListener","parent","hasDisabledSiblingElements","children","child","delete","removeEventListener","container","_ref","inert","TableCell","updateScreenReaderContentsText","contentsText","textContent","onContainerBlur","focused","onContainerFocus","onSelectedChange","updateScreenReaderSelectionText","onMessagesChange","effectiveLocaleChange","updateMessages","effectiveLocale","componentWillLoad","setUpLoadableComponent","setUpMessages","setComponentLoaded","connectLocalized","connectMessages","disconnectLocalized","disconnectMessages","componentFocusable","containerEl","focus","_this$messages","_this$messages2","_this$messages3","_this$messages4","_this$messages5","_this$messages6","selectedText","messages","row","keyboardDeselect","unselectedText","unselected","keyboardSelect","selectionText","dir","getElementDir","staticCell","rowSpan","colSpan","CSS_UTILITY","rtl","onBlur","onFocus","role","tabIndex"],"sourceRoot":""}