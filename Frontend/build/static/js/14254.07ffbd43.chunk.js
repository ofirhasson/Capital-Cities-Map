"use strict";(self.webpackChunknorthwind=self.webpackChunknorthwind||[]).push([[14254],{14254:(e,t,r)=>{r.r(t),r.d(t,{submitTraceJob:()=>c,trace:()=>s});var a=r(76200),n=r(23084),o=r(20039);async function s(e,t,r){const s=(0,n.en)(e),c=t.toJSON();c.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(c.resultTypes=JSON.stringify(t.resultTypes));const i=(0,n.lA)(s.query,{query:(0,n.cv)({...c,f:"json"}),...r}),g="".concat(s.path,"/trace");return(0,a.Z)(g,i).then((e=>function(e,t){const{data:r}=e,a=o.Z.fromJSON(r.traceResults);return a.aggregatedGeometry&&t&&(a.aggregatedGeometry.line&&(a.aggregatedGeometry.line.spatialReference=t.clone()),a.aggregatedGeometry.multipoint&&(a.aggregatedGeometry.multipoint.spatialReference=t.clone()),a.aggregatedGeometry.polygon&&(a.aggregatedGeometry.polygon.spatialReference=t.clone())),a}(e,t.outSpatialReference)))}async function c(e,t,r){const o=(0,n.en)(e),s=t.toJSON();s.traceLocations=JSON.stringify(t.traceLocations),t.resultTypes&&(s.resultTypes=JSON.stringify(t.resultTypes));const c=(0,n.lA)(o.query,{query:(0,n.cv)({...s,async:!0,f:"json"}),...r}),i="".concat(o.path,"/trace"),{data:g}=await(0,a.Z)(i,c);return g.statusUrl}}}]);
//# sourceMappingURL=14254.07ffbd43.chunk.js.map